(()=>{"use strict";const e=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&e.target.classList.add("show")}))})),t="720d2150cf09bfa61e28a5042cd7468f",n="720d2150cf09bfa61e28a5042cd7468f";async function a(e){try{const t=await fetch(`https://api.themoviedb.org/3/movie/${e}?api_key=${n}\n\t\t\t&language=en-US`,{mode:"cors"}),{original_title:a,overview:o,tagline:r,popularity:i,vote_average:s,vote_count:c,genres:d,video:l,runtime:p,poster_path:u,backdrop_path:m,release_date:h}=await t.json();return{mName:a,summary:o,tagline:r,popularity:i,vote_average:s,vote_count:c,genres:d.map((e=>e.name)),video:l,runtime:p,poster_path:u,backdrop_path:m,release_date:h}}catch(e){console.error(`Failed to fetch movie details ${e.message}`)}}async function o(e){try{const t=await fetch(`https://api.themoviedb.org/3/movie/${e}/recommendations\n\t\t\t?api_key=${n}&language=en-US&page=1`,{mode:"cors"});if(!t.ok)throw new Error("Failed to fetch movie recommendations from API.");return(await t.json()).results.slice(0,5).map((e=>({mName:e.original_title,id:e.id,poster_path:e.poster_path,backdrop_path:e.backdrop_path,release_date:e.release_date,vote_count:e.vote_count,vote_average:e.vote_average})))}catch(e){console.error(`Failed to fetch movie recommendations: ${e.message}`)}}async function r(e){const t={};try{const o=await fetch(`https://api.themoviedb.org/3/movie/${e}/watch/providers\n\t\t\t?api_key=${n}`,{mode:"cors"}),r=await o.json();for(const e in r.results){const n=(a=e,new Intl.DisplayNames(["en"],{type:"region"}).of(a));t[n]={stream:[],rent:[],buy:[],countryCode:e};const o=(e,t)=>{e&&e.forEach((e=>{const n={provider_name:e.provider_name,provider_logo_path:e.logo_path};t.push(n)}))};o(r.results[e].flatrate,t[n].stream),o(r.results[e].rent,t[n].rent),o(r.results[e].buy,t[n].buy)}return t}catch(e){console.erroror(`Failed to fetch movie providers: ${e.message}`)}var a}async function i(e){try{const a=await fetch(`https://api.themoviedb.org/3/movie/${e}/videos?api_key=\n\t\t\t${n}&mode=cors`);if(!a.ok)throw new Error("Failed to fetch movie trailers from API.");const o=(await a.json()).results.filter((e=>"Trailer"===e.type));if(0===o.length)return;const r=o.find((e=>!0===e.official))||o[0];return{tName:r.name,key:r.key,site:r.site,type:r.type,lang:(t=r.iso_639_1,new Intl.DisplayNames(["en"],{type:"language"}).of(t))}}catch(e){console.error(`Failed to fetch movie trailers: ${e.message}`)}var t}async function s(e){try{let t=[];const a=await fetch(`https://api.themoviedb.org/3/movie/${e}/reviews?api_key=\n\t\t\t${n}&language=en-US&page=1`,{mode:"cors"}),o=await a.json();return 0!==o.results.length&&(o.results.forEach((e=>{t.push({author:e.author,rating:e.author_details?.rating,pic_path:e.author_details?.avatar_path,content:e.content,url:e.url,last_updated:e.updated_at})})),t.slice(0,5))}catch(e){console.error(`Fail to fetch movie reviews: ${e.message}`)}}const c="720d2150cf09bfa61e28a5042cd7468f";async function d(e){try{const t=await fetch(`https://api.themoviedb.org/3/tv/${e}?api_key=${c}\n\t\t\t&language=en-US`,{mode:"cors"});if(!t.ok)throw new Error("Failed to fetch TV details from API.");const n=await t.json(),a=n.genres.reduce(((e,t)=>[...e,t.name]),[]);return{tName:n.original_name,tagline:n.tagline,language:n.original_language,summary:n.overview,episode_run_time:n.episode_run_time[0],origin_country:n.origin_country,vote_average:n.vote_average,vote_count:n.vote_count,status:n.status,seasons:n.seasons,number_of_seasons:n.number_of_seasons,first_air_date:n.first_air_date,last_air_date:n.last_air_date,backdrop_path:n.backdrop_path,poster_path:n.poster_path,popularity:n.popularity,genres:a}}catch(e){console.error(`Failed to fetch relevant information for TV SHOW: ${e.message}`)}}async function l(e){try{const t=await fetch(`https://api.themoviedb.org/3/tv/${e}/recommendations?api_key=${c}&language=en-US&page=1`,{mode:"cors"});if(!t.ok)throw new Error("Failed to fetch TV recommendations from API.");const n=(await t.json()).results?.slice(0,5).reduce(((e,t)=>(e[t.original_name]={tName:t.original_name,id:t.id,first_air_date:t.first_air_date,poster_path:t.poster_path,backdrop_path:t.backdrop_path,vote_average:t.vote_average,vote_count:t.vote_count},e)),{});return n||{}}catch(e){console.error(`Failed to fetch TV recommendations: ${e.message}`)}}async function p(e){const t={};try{const a=await fetch(`https://api.themoviedb.org/3/tv/${e}/watch/providers?api_key=${c}`,{mode:"cors"});if(!a.ok)throw new Error("Failed to fetch TV show providers from API.");const o=await a.json();for(const e in o.results){const a=(n=e,new Intl.DisplayNames(["en"],{type:"region"}).of(n));t[a]={stream:[],rent:[],buy:[],countryCode:e};const r=(e,t)=>{e&&e.forEach((e=>{const n={provider_name:e.provider_name,provider_logo_path:e.logo_path};t.push(n)}))};r(o.results[e].flatrate,t[a].stream),r(o.results[e].rent,t[a].rent),r(o.results[e].buy,t[a].buy)}return t}catch(e){console.error(`Failed to fetch TV providers: ${e.message}`)}var n}async function u(e){try{const n=await fetch(`https://api.themoviedb.org/3/tv/${e}/videos?api_key=${c}`,{mode:"cors"});if(!n.ok)throw new Error("Failed to fetch TV trailer from API.");const a=(await n.json()).results.filter((e=>"Trailer"===e.type));if(0===a.length)return;const o=a.find((e=>!0===e.official))||a[0];return{tName:o.name,key:o.key,site:o.site,type:o.type,lang:(t=o.iso_639_1,new Intl.DisplayNames(["en"],{type:"language"}).of(t))}}catch(e){console.error(`Failed to fetch TV trailer: ${e.message}`)}var t}async function m(e){try{const t=await fetch(`https://api.themoviedb.org/3/tv/${e}/reviews?api_key=\n\t\t\t${c}&language=en-US&page=1`,{mode:"cors"});if(!t.ok)throw new Error("Failed to fetch TV reviews from API.");const n=await t.json();return 0!==n.results.length&&n.results.map((e=>({author:e.author,rating:e.author_details?.rating,pic_path:e.author_details?.avatar_path,content:e.content,url:e.url,last_updated:e.updated_at}))).slice(0,5)}catch(e){console.error(`Failed to fetch TV reviews: ${e.message}`)}}const h=async(e,t)=>{const n=document.createElement("section"),c=await b(e,a,d),h=await b(e,o,l),y=await b(e,r,p),v=await b(e,i,u),_=await b(e,s,m);function w(e){e&&n.appendChild(e)}function C(e,t){const n=document.createElement(e);return n.classList.add(t),n}async function b(e,n,a){return"movie"===t?await n(e):await a(e)}n.classList.add("section-container");const E=e=>{const t=document.createElement("div");t.classList.add("intro"),t.appendChild(function(){const e=document.createElement("h1");return e.textContent=c.mName?c.mName:c.tName,e.classList.add("title"),e}()),c.tagline&&t.appendChild(function(){const e=document.createElement("em");return e.textContent=`"${c.tagline}"`,e.classList.add("tagline"),e}());const n=function(e=""){const t=document.createElement("img"),n="https://image.tmdb.org/t/p";let a;if(t.classList.add("poster"),c.poster_path)a=c.poster_path;else{if(!c.backdrop_path)return;a=c.backdrop_path}return t.src=e?`${n}/w${e}/${a}`:`${n}/original/${a}`,t.alt="Movie picture poster",t.setAttribute("loading","lazy"),t}(e);return n&&t.appendChild(n),t},$=e=>{const t=C("div","rec-container"),n=C("img","rec-poster"),a=C("div","rec-info");n.src=`https://image.tmdb.org/t/p/w300/${e.poster_path}`,t.appendChild(n),function(e){if(e){const t=C("p","rec-name"),n=C("p","rec-date"),a=C("p","rec-vote-count"),o=C("p","rec-vote-avg");return t.textContent=e.tName?`Name: ${e.tName}`:`Name: ${e.mName}`,n.textContent=e.first_air_date?`First Air Date: ${e.first_air_date}`:`Release Date: ${e.release_date}`,a.textContent=`Vote Count: ${e.vote_count}`,o.textContent=`Vote Avg: ${e.vote_average}`,[t,n,a,o]}}(e).forEach((e=>a.appendChild(e)));const o=C("a","rec-link"),r=e.tName?"TV Show":"Movie";return o.textContent=`Search for this ${r} -> `,o.addEventListener("click",(async t=>{t.preventDefault(),g(),e.tName?await f(e.tName):await f(e.mName)})),a.appendChild(o),t.appendChild(a),t};return{section:n,addToSection:w,drawAll:function(){w(E())},drawIntro:E,drawSubInfos:()=>{const e=document.createElement("div");let t,n;e.classList.add("subinfo-container"),c.release_date?(t=o("Release Date:",c.release_date.split("-").reverse().join("/")),n=""):c.first_air_date?(t=o("First Aired: ",c.first_air_date.split("-").reverse().join("/")),n=o("Last Aired: ",c.last_air_date.split("-").reverse().join("/"))):t="";let a=c.runtime?function(e){const t=e/60,n=Math.floor(t),a=60*(t-n);return`${n}h ${Math.round(a)}min`}(c.runtime):"";function o(e,t){if(!t)return;const n=document.createElement("div"),a=document.createElement("span"),o=document.createElement("span");return n.classList.add("sub-info"),a.classList.add("category-name"),o.classList.add("category-info"),a.textContent=e,o.textContent=t,[a,o].forEach((e=>n.appendChild(e))),n}return[t,n,o("Show status:",c.status),o("Runtime: ",a),o("Genres: ",c.genres.join(", ")),o("Number of seasons: ",c.number_of_seasons),o("Est Avg Episode Runtime: ",c.episode_run_time),o("Country of Origin: ",c.origin_country),o("Vote Average: ",c.vote_average),o("Vote Count: ",c.vote_count),o("Popularity: ",c.popularity)].forEach((t=>t?e.appendChild(t):"")),e},drawSummaryHeading:()=>{const e=document.createElement("h2");return e.textContent="Synopsis: ",e},drawSummary:()=>{const e=document.createElement("p");return e.textContent=c.summary,e.classList.add("summary"),e},drawProviders:()=>{let e;const t=C("div","provider-container"),n=C("button","country-btn"),a=C("div","house-provider-container");if([n,a].forEach((e=>{t.appendChild(e)})),Object.keys(y).length)if(e=!0,Object.keys(y).includes("Australia")){const e=C("img","country-flag");e.setAttribute("crossorigin","anonymous"),e.src="https://countryflagsapi.com/png/Australia",e.alt="Australia flag",e.classList.add("btn-country-flag"),r("Australia"),n.textContent="Australia",n.appendChild(e)}else{const e=Object.keys(y)[0];try{const t=C("img","country-flag");t.setAttribute("crossorigin","anonymous"),t.src=`https://countryflagsapi.com/png/${e}`,t.alt=`${e} flag`,t.classList.add("btn-country-flag"),n.appendChild(t)}catch(e){console.log(e)}r(e),n.textContent=`${e}`}else{e=!1,n.textContent="No countries offer this tv/movie at the moment.",n.classList.add("lost-providers");const t=C("img","lost-gif");t.src="./img/lost-gif.gif",t.alt="Prover cannot be found picture.",a.style.display="flex",a.style.justifyContent="center",a.appendChild(t)}const o=C("i","fas");return o.classList.add("fa-angle-down"),n.appendChild(o),n.addEventListener("click",(t=>{t.preventDefault(),e&&(function(e){const t=Object.keys(y);let n,a={};t.forEach((t=>{a[t]=y[t].countryCode,e===t&&(n=y[t].countryCode)}));const o=C("form","modal-country-container"),r=C("div","modal-header"),i=C("div","modal-body"),s=C("div","modal-current-country"),c=C("input","modal-input-search"),d=C("ul","modal-list-countries"),l=C("button","modal-close-btn");function p(e,t){const n=C("img","country-flag");return n.setAttribute("crossorigin","anonymous"),n.src=`https://countryflagsapi.com/png/${e}`,n.alt=`${t} flag`,n}function u(){let e,t,n,a,o,r,i;for(e=document.getElementById("modal-input-search"),t=e.value.toUpperCase(),n=document.getElementById("countries-list"),a=n.getElementsByTagName("li"),r=0;r<a.length;r++)o=a[r].getElementsByTagName("a")[0],i=o.textContent||o.innerText,i.toUpperCase().indexOf(t)>-1?a[r].style.display="":a[r].style.display="none"}(()=>{const t=document.createElement("h2");t.textContent="Countries";const a=document.createElement("h3"),o=document.createElement("label"),i={id:"modal-input-search",type:"search",placeholder:"🔍 Search for countries...",title:"Type in a country name",role:"search"};for(let e in i)c.setAttribute(e,i[e]);c.addEventListener("keyup",u),c.addEventListener("submit",(e=>{e.preventDefault()}));const d=p(n,e);a.textContent=e,s.appendChild(d),s.appendChild(a),o.htmlFor=`${c.id}`,[t,s,o,c].forEach((e=>{r.appendChild(e)}))})(),(()=>{d.id="countries-list";for(let e in a){let t=a[e];const n=C("li","country-container"),o=p(t,e),r=C("a","country-name");r.textContent=e,r.setAttribute("href","#"),[o,r].forEach((e=>{n.appendChild(e)})),d.appendChild(n)}[d].forEach((e=>{i.appendChild(e)}))})(),(e=>{const t=C("i","fa");t.classList.add("fa-close"),l.appendChild(t),e()})((()=>{l.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector(".modal-country-container");document.querySelector(".face-mask").style.display="none",setTimeout((function(){t.style.transform="translateY(-125%)"}),100),setTimeout((function(){t.style.opacity=0,t.style.visibility="hidden",t.remove()}),750)}))})),[r,i,l].forEach((e=>o.appendChild(e))),setTimeout((function(){o.style.visibility="visible",o.style.opacity=1,o.style.transform="translateY(0%)"}),100),document.querySelector("body").append(o),document.querySelector(".face-mask").style.display="block"}(n.textContent),function(e){let t,n,a,o,r;for(t=document.getElementById("countries-list"),n=t.getElementsByTagName("li"),a=0;a<n.length;a++)if(o=n[a].getElementsByTagName("a")[0],r=o.textContent||o.innerText,r===e){n[a].style.backgroundColor="rgba(25, 150, 150, 0.5)",n[a].style.transform="scale(1.025)";const e=C("i","fa");e.classList.add("fa-check"),n[a].append(e)}}(n.textContent),document.querySelectorAll(".country-container").forEach((e=>e.addEventListener("click",(t=>{if(t.preventDefault(),e.lastChild.textContent){const t=e.lastChild.textContent;a.innerHTML="",r(t)}document.querySelector(".modal-country-container").remove(),document.querySelector(".face-mask").style.display="none"})))))})),t;function r(e="Australia"){n.textContent=e;try{const t=C("img","country-flag");t.setAttribute("crossorigin","anonymous"),t.src=`https://countryflagsapi.com/png/${e}`,t.alt=`${e} flag`,t.classList.add("btn-country-flag"),n.appendChild(t)}catch(e){console.log(e)}const t=C("i","fas");t.classList.add("fa-angle-down"),n.appendChild(t);const o=y[e].stream,r=y[e].buy,i=y[e].rent,s=["Stream at:","Purchase at:","Rent at:"];let c=0;[o,r,i].forEach((e=>{const t=C("div","service-container"),n=C("div","service-name"),o=C("h2","service-name-bold"),r=C("div","provider-service-container");e.forEach((e=>{const t=C("div","provider-service"),n=C("img","provider-img"),a=C("span","provider-name");e.provider_logo_path&&(n.src=`https://image.tmdb.org/t/p/original/${e.provider_logo_path}`,n.alt=`${e.provider_name} picture.`,n.setAttribute("loading","lazy"),a.textContent=e.provider_name),[n,a].forEach((e=>{t.appendChild(e)})),r.appendChild(t)})),e.length&&(o.textContent=`${s[c]}`,n.appendChild(o)),c++,t.appendChild(n),t.appendChild(r),a.appendChild(t)}))}},drawReviews:()=>{if(!_)return;const e=C("div","review-container"),t=C("h2","review-title");return t.textContent="Reviews:",e.appendChild(t),_.forEach((t=>((e,t)=>{function n(t,n,a,o){const r=C(a,o);t&&(r.textContent=t),t===e.rating&&(r.textContent=e.rating?`${t}/10`:"Rating not provided.."),n.appendChild(r)}t.appendChild((()=>{const t=C("div","review-heading");if(e.pic_path){const n=C("img","author-pic");"http"!==e.pic_path.slice(1,5)?n.src=`https://image.tmdb.org/t/p/w300/${e.pic_path}`:n.src=e.pic_path.slice(1),n.alt=`${e.author} profile picture.`,t.appendChild(n)}return n(e.author,t,"h3","review-author"),n(e.rating,t,"span","review-rating"),t})()),t.appendChild((()=>{const t=C("p","review-content");return t.textContent=`"${e.content}"`,t})()),t.appendChild((()=>{const t=C("div","review-footer"),n=C("a","review-link"),a=C("span","review-updated");var o;return n.setAttribute("href",`${e.url}`),n.setAttribute("target","_blank"),n.textContent="Click for review link",a.textContent=`Last updated: ${o=e.last_updated,(o=o.split("-"))[2]=o[2].slice(0,2)+"/",o[2].concat(o.slice(0,2).reverse().join("/"))}`,t.appendChild(n),t.appendChild(a),t})())})(t,e))),e},drawTrailer:()=>{const e=C("div","trailer-container"),t=C("div","trailer-heading");if(v){(function(){const e=C("h2","trailer-name"),t=C("h3","trailer-lang");return e.textContent=`${v.tName}`,t.textContent=`Language: ${v.lang}`,[e,t]})().forEach((e=>t.appendChild(e))),e.appendChild(t);const n=C("div","video-wrapper");n.appendChild(function(e,t){const n=C("iframe","trailer-video"),a={loading:"lazy",width:"560",height:"315",src:`https://youtube.com/embed/${e}`,title:`${t} video player`,frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted media; gyroscope; picture-in-picture; web-share"};for(let e in a)n.setAttribute(e,a[e]),n.setAttribute("allowfullscreen",!0);return n}(v.key,v.site)),e.appendChild(n)}return e},drawRecs:()=>{const e=C("div","recs-container");if(0===Object.keys(h).length){const t=C("h4","no-review-msg");return t.textContent="No recommendations found.",e.appendChild(t),e.style="display: flex; justify-content: center;",e}for(let t in h)e.appendChild($(h[t]));return e}}};async function f(e){const n=await async function(e){const n=function(e){return e.split(" ").join("+")}(e);try{const a=await fetch(`https://api.themoviedb.org/3/search/multi?api_key=${t}\n\t\t\t&language=en-US&query=${n}&page=1`,{mode:"cors"}),o=await a.json();let r=o.results.reduce(((e,t)=>(e[t.id]=t.media_type,e)),{});return o.results.sort(((e,t)=>t.popularity-e.popularity)).length?r:void alert(`No results found for "${e}".\nPlease check your spelling.`)}catch(e){throw e}}(e),a=document.querySelector(".main-container");document.querySelector(".loader").style.visibility="visible";let o=[];for(let e in n)o.push([e,n[e]]);const r=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&e.target.classList.add("show")}))}));o.forEach((async e=>{await async function(e,t){const n=await h(e,t),o=document.createElement("div");o.classList.add("intro-sub-info"),o.appendChild(n.drawIntro("300")),o.appendChild(n.drawSubInfos());const r=document.createElement("div");r.classList.add("synopsis-watch-providers"),r.appendChild(n.drawSummaryHeading()),r.appendChild(n.drawSummary()),r.appendChild(n.drawProviders());const i=document.createElement("h2");i.classList.add("rec-heading"),i.textContent="RECOMMENDATIONS:",n.addToSection(o),n.addToSection(r),n.addToSection(n.drawReviews()),n.addToSection(n.drawTrailer()),n.addToSection(i),n.addToSection(n.drawRecs()),a.appendChild(n.section)}(e[0],e[1]).then((()=>{document.querySelector(".loader").style.visibility="hidden"})),document.getElementById("check-animation").checked&&[...document.getElementsByTagName("div")].forEach((e=>{e.classList.add("hidden"),r.observe(e)}))})),document.getElementById("input-search").value=e.split("+").join(" ")}function g(){const e=document.querySelector(".main-container");document.querySelector(".loader"),[...e.getElementsByTagName("section")].forEach((e=>e.remove()))}(async function(){document.querySelector(".search-query").addEventListener("click",(async e=>{e.preventDefault();const t=document.getElementById("input-search").value.split(" ").join("+");t?(document.getElementById("title-page")&&document.getElementById("title-page").remove(),document.querySelector(".intro-container2")&&document.querySelector(".intro-container2").remove(),g(),await f(t)):alert("Please enter a valid movie/tv show")}))})(),function(){const t=document.getElementById("check-animation");t.addEventListener("click",(()=>{const n=document.querySelectorAll("div");t.checked?n.forEach((t=>{t.classList.add("hidden"),e.observe(t)})):n.forEach((t=>{t.classList.remove("hidden"),e.disconnect()}))}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBRyxJQUdyQk0sRUFBUy9VLFNBQVN5VSxJQUNqQkEsRUFBR3JVLFVBQVV3UCxPQUFPLFVBQ3BCL1AsRUFBU21WLFlBQVksR0FFdkIsR0FFRixDT3BCSUMsRSIsInNvdXJjZXMiOlsid2VicGFjazovL21vdmllbWF0ZS8uL3NyYy9qcy9VSS9jaGVja0FuaW1hdGlvbi5qcyIsIndlYnBhY2s6Ly9tb3ZpZW1hdGUvLi9zcmMvanMvYXBpRnVuY3Rpb25zL2ZldGNoSWQuanMiLCJ3ZWJwYWNrOi8vbW92aWVtYXRlLy4vc3JjL2pzL2FwaUZ1bmN0aW9ucy9mZXRjaE1vdmllSW5mby5qcyIsIndlYnBhY2s6Ly9tb3ZpZW1hdGUvLi9zcmMvanMvYXBpRnVuY3Rpb25zL2ZldGNoVHZJbmZvLmpzIiwid2VicGFjazovL21vdmllbWF0ZS8uL3NyYy9qcy9ET01GdW5jdGlvbnMvZHJhd1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbW92aWVtYXRlLy4vc3JjL2pzL0RPTUZ1bmN0aW9ucy9kcmF3U2VjdGlvbnMuanMiLCJ3ZWJwYWNrOi8vbW92aWVtYXRlLy4vc3JjL2pzL1VJL3N1Ym1pdFNlYXJjaC5qcyIsIndlYnBhY2s6Ly9tb3ZpZW1hdGUvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQWRkIGNsaWNrIGV2ZW50IGxpc3RlbmVyIGZvciBjaGVja2JveCB0aGF0IGF1dG9tYXRpY2FsbHkgZGlzYWJsZXMgYW5pbWF0aW9uXG4vLyBhbmQgcmVsb2FkcyB0aGUgcGFnZS5cbmNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKChlbnRyaWVzKSA9PiB7XG5cdGVudHJpZXMuZm9yRWFjaCgoZW50cnkpID0+IHtcblx0XHRpZiAoZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcblx0XHRcdGVudHJ5LnRhcmdldC5jbGFzc0xpc3QuYWRkKFwic2hvd1wiKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0fSk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWRkVG9nZ2xlQW5pbWF0aW9uRm5jKCkge1xuXHRjb25zdCBhbmltYXRpb25DaGVjayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hlY2stYW5pbWF0aW9uXCIpO1xuXHRhbmltYXRpb25DaGVjay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuXHRcdGNvbnN0IGVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImRpdlwiKTtcblx0XHRpZiAoYW5pbWF0aW9uQ2hlY2suY2hlY2tlZCkge1xuXHRcdFx0ZWxlbWVudHMuZm9yRWFjaCgoZWwpID0+IHtcblx0XHRcdFx0ZWwuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcblx0XHRcdFx0b2JzZXJ2ZXIub2JzZXJ2ZShlbCk7XG5cdFx0XHR9KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZWxlbWVudHMuZm9yRWFjaCgoZWwpID0+IHtcblx0XHRcdFx0ZWwuY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKTtcblx0XHRcdFx0b2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9KTtcbn1cbiIsImNvbnN0IEFQSV9LRVkgPSBcIjcyMGQyMTUwY2YwOWJmYTYxZTI4YTUwNDJjZDc0NjhmXCI7XG4vKipcbiAqIEZldGNoZXMgdGhlIGZpcnN0IHBhZ2Ugb2YgdGhlIG1vdmllL3Nob3cgaWRzIGFuZCByZXR1cm5zIGl0IGFzIGFuIG9iamVjdCB3aXRoXG4gKiB0aGUgbW92aWUvdHYgc2hvdyBpZCBhbmQgaXQncyBtZWRpYSB0eXBlIGFzIGtleS12YWx1ZSBwYWlycy5cbiAqIEBwYXJhbSB7U3RyaW5nfSBcdG5hbWVcdFRoZSBzcGVjaWZpYyBuYW1lIG9mIHRoZSBtb3ZpZS9UViBzaG93LlxuICogQHJldHVybiB7T2JqZWN0fVx0XHRcdFRoZSBsaXN0IG9mIGlkcyBhbmQgdGhlaXIgcmVzcGVjdGl2ZSBtZWRpYSB0eXBlIGFzXG4gKiBcdFx0XHRcdFx0XHRcdGtleS12YWx1ZSBwYWlycy5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2hJZHMobmFtZSkge1xuXHRjb25zdCBxdWVyeSA9IGludGVycHJldFRvUXVlcnkobmFtZSk7XG5cdHRyeSB7XG5cdFx0Y29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcblx0XHRcdGBodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zL3NlYXJjaC9tdWx0aT9hcGlfa2V5PSR7QVBJX0tFWX1cblx0XHRcdCZsYW5ndWFnZT1lbi1VUyZxdWVyeT0ke3F1ZXJ5fSZwYWdlPTFgLFxuXHRcdFx0eyBtb2RlOiBcImNvcnNcIiB9XG5cdFx0KTtcblx0XHRjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXHRcdGxldCBpZHMgPSBkYXRhLnJlc3VsdHMucmVkdWNlKChhY2MsIHJlc3VsdCkgPT4ge1xuXHRcdFx0YWNjW3Jlc3VsdC5pZF0gPSByZXN1bHQubWVkaWFfdHlwZTtcblx0XHRcdHJldHVybiBhY2M7XG5cdFx0fSwge30pO1xuXG5cdFx0Ly8gU29ydCBtb3ZpZS9zaG93IGJ5IHBvcHVsYXJpdHkuXG5cdFx0bGV0IHJlc3VsdCA9IGRhdGEucmVzdWx0cy5zb3J0KFxuXHRcdFx0KHAxLCBwMikgPT4gcDIucG9wdWxhcml0eSAtIHAxLnBvcHVsYXJpdHlcblx0XHQpO1xuXG5cdFx0aWYgKHJlc3VsdC5sZW5ndGgpIHtcblx0XHRcdHJldHVybiBpZHM7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGFsZXJ0KFxuXHRcdFx0XHRgTm8gcmVzdWx0cyBmb3VuZCBmb3IgXCIke25hbWV9XCIuXFxuUGxlYXNlIGNoZWNrIHlvdXIgc3BlbGxpbmcuYFxuXHRcdFx0KTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdHRocm93IGVycjtcblx0fVxufVxuXG5mdW5jdGlvbiBpbnRlcnByZXRUb1F1ZXJ5KG5hbWUpIHtcblx0cmV0dXJuIG5hbWUuc3BsaXQoXCIgXCIpLmpvaW4oXCIrXCIpO1xufVxuXG5leHBvcnQgeyBmZXRjaElkcyB9O1xuIiwiY29uc3QgQVBJX0tFWSA9IFwiNzIwZDIxNTBjZjA5YmZhNjFlMjhhNTA0MmNkNzQ2OGZcIjtcblxuLyoqXG4gKiBGZXRjaGVzIHRoZSByZWxldmFudCBpbmZvcm1hdGlvbiBkZXRhaWxzIG9mIGEgbW92aWUgYW5kIHJldHVybiBvbmx5IHRoZSBtb3N0XG4gKiByZWxldmFudCBpbmZvcm1hdGlvbi5cbiAqIEBwYXJhbSB7TnVtYmVyfSBtb3ZpZV9pZCBJZGVudGlmaWVzIHRoZSBtb3ZpZSBhcyBhbiBpbnRlZ2VyXG4gKiBAcmV0dXJucyB7T2JqZWN0fVxuICovXG5hc3luYyBmdW5jdGlvbiBmZXRjaE1vdmllRGV0YWlscyhtb3ZpZV9pZCkge1xuXHR0cnkge1xuXHRcdGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG5cdFx0XHRgaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMy9tb3ZpZS8ke21vdmllX2lkfT9hcGlfa2V5PSR7QVBJX0tFWX1cblx0XHRcdCZsYW5ndWFnZT1lbi1VU2AsXG5cdFx0XHR7IG1vZGU6IFwiY29yc1wiIH1cblx0XHQpO1xuXHRcdGNvbnN0IHtcblx0XHRcdG9yaWdpbmFsX3RpdGxlLFxuXHRcdFx0b3ZlcnZpZXcsXG5cdFx0XHR0YWdsaW5lLFxuXHRcdFx0cG9wdWxhcml0eSxcblx0XHRcdHZvdGVfYXZlcmFnZSxcblx0XHRcdHZvdGVfY291bnQsXG5cdFx0XHRnZW5yZXMsXG5cdFx0XHR2aWRlbyxcblx0XHRcdHJ1bnRpbWUsXG5cdFx0XHRwb3N0ZXJfcGF0aCxcblx0XHRcdGJhY2tkcm9wX3BhdGgsXG5cdFx0XHRyZWxlYXNlX2RhdGUsXG5cdFx0fSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuXHRcdGNvbnN0IGdlbnJlTmFtZXMgPSBnZW5yZXMubWFwKChnZW5yZSkgPT4gZ2VucmUubmFtZSk7XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0bU5hbWU6IG9yaWdpbmFsX3RpdGxlLFxuXHRcdFx0c3VtbWFyeTogb3ZlcnZpZXcsXG5cdFx0XHR0YWdsaW5lLFxuXHRcdFx0cG9wdWxhcml0eSxcblx0XHRcdHZvdGVfYXZlcmFnZSxcblx0XHRcdHZvdGVfY291bnQsXG5cdFx0XHRnZW5yZXM6IGdlbnJlTmFtZXMsXG5cdFx0XHR2aWRlbyxcblx0XHRcdHJ1bnRpbWUsXG5cdFx0XHRwb3N0ZXJfcGF0aCxcblx0XHRcdGJhY2tkcm9wX3BhdGgsXG5cdFx0XHRyZWxlYXNlX2RhdGUsXG5cdFx0fTtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHQvLyBTcXVhc2hlZFxuXHRcdGNvbnNvbGUuZXJyb3IoYEZhaWxlZCB0byBmZXRjaCBtb3ZpZSBkZXRhaWxzICR7ZXJyb3IubWVzc2FnZX1gKTtcblx0fVxufVxuXG4vKipcbiAqIFJldXJucyBtb3ZpZSByZWNvbW1lbmRhdGlvbnMgYXMgYW4gb2JqZWN0IHdpdGggaXRzIHJlbGV2YW50IGluZm9ybWF0aW9uLlxuICogTWF4aW11bSA1IG1vdmllcyBjYW4gYmUgcmVjb21tZW5kZWQgYW5kIHRoZSAuXG4gKiBAcGFyYW0ge051bWJlcn0gbW92aWVfaWQgSWRlbnRpZmllcyB0aGUgbW92aWUgYXMgYW4gSW50ZWdlci5cbiAqIEByZXR1cm5zIHtPYmplY3R9XHRcdEFuIG9iamVjdCB0aGF0IGhhcyB0aGUgcmVsZXZhbnQgaW5mb3JtYXRpb24gd2l0aFxuICogXHRcdFx0XHRcdFx0XHRpdCdzIGltYWdlcywgdGl0bGUsIGlkIGFuZCByZWxldmFudCB2b3RlIGluZm8uXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGZldGNoTW92aWVSZWNjb3MobW92aWVfaWQpIHtcblx0dHJ5IHtcblx0XHRjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFxuXHRcdFx0YGh0dHBzOi8vYXBpLnRoZW1vdmllZGIub3JnLzMvbW92aWUvJHttb3ZpZV9pZH0vcmVjb21tZW5kYXRpb25zXG5cdFx0XHQ/YXBpX2tleT0ke0FQSV9LRVl9Jmxhbmd1YWdlPWVuLVVTJnBhZ2U9MWAsXG5cdFx0XHR7IG1vZGU6IFwiY29yc1wiIH1cblx0XHQpO1xuXG5cdFx0aWYgKCFyZXNwb25zZS5vaykge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIG1vdmllIHJlY29tbWVuZGF0aW9ucyBmcm9tIEFQSS5cIik7XG5cdFx0fVxuXG5cdFx0Y29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuXHRcdC8vIE9ubHkgcmV0cmlldmUgdGhlIGluZm8gb24gdGhlIGZpcnN0IDUgbW92aWUgcmVjb21tZW5kYXRpb25zLlxuXHRcdGNvbnN0IHJlY2NvcyA9IGRhdGEucmVzdWx0cy5zbGljZSgwLCA1KS5tYXAoKG1vdmllKSA9PiAoe1xuXHRcdFx0bU5hbWU6IG1vdmllLm9yaWdpbmFsX3RpdGxlLFxuXHRcdFx0aWQ6IG1vdmllLmlkLFxuXHRcdFx0cG9zdGVyX3BhdGg6IG1vdmllLnBvc3Rlcl9wYXRoLFxuXHRcdFx0YmFja2Ryb3BfcGF0aDogbW92aWUuYmFja2Ryb3BfcGF0aCxcblx0XHRcdHJlbGVhc2VfZGF0ZTogbW92aWUucmVsZWFzZV9kYXRlLFxuXHRcdFx0dm90ZV9jb3VudDogbW92aWUudm90ZV9jb3VudCxcblx0XHRcdHZvdGVfYXZlcmFnZTogbW92aWUudm90ZV9hdmVyYWdlLFxuXHRcdH0pKTtcblxuXHRcdHJldHVybiByZWNjb3M7XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS5lcnJvcihcblx0XHRcdGBGYWlsZWQgdG8gZmV0Y2ggbW92aWUgcmVjb21tZW5kYXRpb25zOiAke2Vycm9yLm1lc3NhZ2V9YFxuXHRcdCk7XG5cdH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSByZWxldmFudCBpbmZvcm1hdGlvbiAoc3RyZWFtaW5nLCBwdXJjaGFzZSBhbmQvb3IgcmVudCkgb2YgdGhlXG4gKiBtb3ZpZSBwcm92aWRlcnMuXG4gKiBAcGFyYW0ge051bWJlcn0gbW92aWVfaWQgSWRlbnRpZmllcyB0aGUgbW92aWUgYXMgYW4gSW50ZWdlclxuICogQHJldHVybnMge09iamVjdH1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2hNb3ZpZVByb3ZpZGVycyhtb3ZpZV9pZCkge1xuXHRjb25zdCBwcm92aWRlcnNCeUNvdW50cnkgPSB7fTtcblx0dHJ5IHtcblx0XHRjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFxuXHRcdFx0YGh0dHBzOi8vYXBpLnRoZW1vdmllZGIub3JnLzMvbW92aWUvJHttb3ZpZV9pZH0vd2F0Y2gvcHJvdmlkZXJzXG5cdFx0XHQ/YXBpX2tleT0ke0FQSV9LRVl9YCxcblx0XHRcdHsgbW9kZTogXCJjb3JzXCIgfVxuXHRcdCk7XG5cdFx0Y29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuXHRcdGZvciAoY29uc3QgY291bnRyeUNvZGUgaW4gZGF0YS5yZXN1bHRzKSB7XG5cdFx0XHRjb25zdCBjb3VudHJ5ID0gZ2V0Q291bnRyeU5hbWUoY291bnRyeUNvZGUpO1xuXHRcdFx0cHJvdmlkZXJzQnlDb3VudHJ5W2NvdW50cnldID0ge1xuXHRcdFx0XHRzdHJlYW06IFtdLFxuXHRcdFx0XHRyZW50OiBbXSxcblx0XHRcdFx0YnV5OiBbXSxcblx0XHRcdFx0Y291bnRyeUNvZGU6IGNvdW50cnlDb2RlLFxuXHRcdFx0fTtcblxuXHRcdFx0Lypcblx0XHRcdFNvcnRzIHByb3ZpZGVycyBiYXNlZCBvbiBjb3VudHJ5IGFuZCBzZXJ2aWNlcyB0aGV5IHByb3ZpZGUuXG5cblx0XHRcdFRha2VzIGluIHR5cGUgb2Ygc2VydmljZXMgYXMgcGFyYW0gPT4gW1wiZmxhdHJhdGUgKHN0cmVhbWluZylcIiwgXG5cdFx0XHRcInJlbnRcIiwgXCJidXlcIl0gYW5kIGFuIGFycmF5IHRvIGFwcGVuZCBpdCB0by5cblx0XHRcdCovXG5cdFx0XHRjb25zdCBzb3J0UHJvdmlkZXJzID0gKHNlcnZpY2VzLCBjb2xsZWN0aW9uKSA9PiB7XG5cdFx0XHRcdGlmIChzZXJ2aWNlcykge1xuXHRcdFx0XHRcdHNlcnZpY2VzLmZvckVhY2goKHNlcnZpY2UpID0+IHtcblx0XHRcdFx0XHRcdGNvbnN0IHByb3ZpZGVySW5mbyA9IHtcblx0XHRcdFx0XHRcdFx0cHJvdmlkZXJfbmFtZTogc2VydmljZS5wcm92aWRlcl9uYW1lLFxuXHRcdFx0XHRcdFx0XHRwcm92aWRlcl9sb2dvX3BhdGg6IHNlcnZpY2UubG9nb19wYXRoLFxuXHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdGNvbGxlY3Rpb24ucHVzaChwcm92aWRlckluZm8pO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHQvLyBBZGQgc3RyZWFtaW5nIHNlcnZpY2VzIGZvciBzcGVjaWZpZWQgbW92aWUgaW4gZWFjaCBjb3VudHJ5LlxuXHRcdFx0c29ydFByb3ZpZGVycyhcblx0XHRcdFx0ZGF0YS5yZXN1bHRzW2NvdW50cnlDb2RlXS5mbGF0cmF0ZSxcblx0XHRcdFx0cHJvdmlkZXJzQnlDb3VudHJ5W2NvdW50cnldLnN0cmVhbVxuXHRcdFx0KTtcblxuXHRcdFx0Ly8gQWRkIHJlbnRpbmcgc2VydmljZXMgZm9yIHNwZWljaWZpZWQgbW92aWUgaW4gZWFjaCBjb3VudHJ5LlxuXHRcdFx0c29ydFByb3ZpZGVycyhcblx0XHRcdFx0ZGF0YS5yZXN1bHRzW2NvdW50cnlDb2RlXS5yZW50LFxuXHRcdFx0XHRwcm92aWRlcnNCeUNvdW50cnlbY291bnRyeV0ucmVudFxuXHRcdFx0KTtcblxuXHRcdFx0Ly8gQWRkIGJ1eWluZyBzZXJ2aWNlcyBmb3Igc3BlY2lmaWVkIG1vdmllIGluIGVhY2ggY291bnRyeS5cblx0XHRcdHNvcnRQcm92aWRlcnMoXG5cdFx0XHRcdGRhdGEucmVzdWx0c1tjb3VudHJ5Q29kZV0uYnV5LFxuXHRcdFx0XHRwcm92aWRlcnNCeUNvdW50cnlbY291bnRyeV0uYnV5XG5cdFx0XHQpO1xuXHRcdH1cblx0XHRyZXR1cm4gcHJvdmlkZXJzQnlDb3VudHJ5O1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUuZXJyb3JvcihgRmFpbGVkIHRvIGZldGNoIG1vdmllIHByb3ZpZGVyczogJHtlcnJvci5tZXNzYWdlfWApO1xuXHR9XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgcmVsZXZhbnQgaW5mb3JtYXRpb24gb2YgdGhlIG1vdmllIHRyYWlsZXIuIFRoZSBpZCBzaG91bGQgYWxzb1xuICogYmUgcmV0cmlldmVkIHNvIHRoYXQgdGhlIHVzZXIgY2FuIHNlYXJjaCBmb3IgdGhlIG1vdmllIHJlc3BlY3RpdmVseS5cbiAqIEBwYXJhbSB7TnVtYmVyfSBtb3ZpZV9pZCBJZGVudGlmaWVzIHRoZSBtb3ZpZSBhcyBhbiBJbnRlZ2VyLlxuICogQHJldHVybnMge09iamVjdH1cdFx0UmVsZXZhbnQgaW5mbyBvZiB0cmFpbGVyIGluY2x1ZGluZyB2aWRlbyBuYW1lLCBzaXRlXG4gKiBcdFx0XHRcdFx0XHRcdGxhbmd1YWdlIGFuZCB0eXBlLlxuICovXG5hc3luYyBmdW5jdGlvbiBmZXRjaE1vdmllVHJhaWxlcihtb3ZpZV9pZCkge1xuXHR0cnkge1xuXHRcdGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG5cdFx0XHRgaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMy9tb3ZpZS8ke21vdmllX2lkfS92aWRlb3M/YXBpX2tleT1cblx0XHRcdCR7QVBJX0tFWX0mbW9kZT1jb3JzYFxuXHRcdCk7XG5cdFx0aWYgKCFyZXNwb25zZS5vaykge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIG1vdmllIHRyYWlsZXJzIGZyb20gQVBJLlwiKTtcblx0XHR9XG5cdFx0Y29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuXHRcdC8vIEZpbmQgYWxsIHRyYWlsZXJzXG5cdFx0Y29uc3QgdHJhaWxlcnMgPSBkYXRhLnJlc3VsdHMuZmlsdGVyKFxuXHRcdFx0KHZpZGVvKSA9PiB2aWRlby50eXBlID09PSBcIlRyYWlsZXJcIlxuXHRcdCk7XG5cdFx0aWYgKHRyYWlsZXJzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuXG5cdFx0Ly8gRmluZCBvZmZpY2lhbCB0cmFpbGVyLk9SIHVzZSBmaXJzdCB0cmFpbGVyXG5cdFx0Y29uc3QgbW92aWVUcmFpbGVyID1cblx0XHRcdHRyYWlsZXJzLmZpbmQoKHZpZGVvKSA9PiB2aWRlby5vZmZpY2lhbCA9PT0gdHJ1ZSkgfHwgdHJhaWxlcnNbMF07XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0dE5hbWU6IG1vdmllVHJhaWxlci5uYW1lLFxuXHRcdFx0a2V5OiBtb3ZpZVRyYWlsZXIua2V5LFxuXHRcdFx0c2l0ZTogbW92aWVUcmFpbGVyLnNpdGUsXG5cdFx0XHR0eXBlOiBtb3ZpZVRyYWlsZXIudHlwZSxcblx0XHRcdGxhbmc6IGdldExhbmd1YWdlKG1vdmllVHJhaWxlci5pc29fNjM5XzEpLFxuXHRcdH07XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS5lcnJvcihgRmFpbGVkIHRvIGZldGNoIG1vdmllIHRyYWlsZXJzOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG5cdH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBmaXJzdCA1IHJldmlld3Mgd2l0aCB0aGVpciByYXRpbmdzLCBhdXRob3IgaW5mb3JtYXRpb24gYW5kIGxpbmtzLlxuICogQHBhcmFtIHtOdW1iZXJ9IG1vdmllX2lkIElkZW50aWZpZXMgdGhlIG1vdmllIGFzIGFuIEludGVnZXJcbiAqIEByZXR1cm5zIHtPYmplY3R9XHRcdFJldmlldyBpbmZvcm1hdGlvbiBpbmNsdWRpbmcgdGhlIGNvbnRlbnQsIGF1dGhvcixcbiAqIFx0XHRcdFx0XHRcdFx0bGlua3MgYW5kIHJhdGluZ3MuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGZldGNoTW92aWVSZXZpZXdzKG1vdmllX2lkKSB7XG5cdHRyeSB7XG5cdFx0bGV0IHJldmlld3MgPSBbXTtcblx0XHRjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFxuXHRcdFx0YGh0dHBzOi8vYXBpLnRoZW1vdmllZGIub3JnLzMvbW92aWUvJHttb3ZpZV9pZH0vcmV2aWV3cz9hcGlfa2V5PVxuXHRcdFx0JHtBUElfS0VZfSZsYW5ndWFnZT1lbi1VUyZwYWdlPTFgLFxuXHRcdFx0eyBtb2RlOiBcImNvcnNcIiB9XG5cdFx0KTtcblx0XHRjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXHRcdGlmIChkYXRhLnJlc3VsdHMubGVuZ3RoID09PSAwKSByZXR1cm4gZmFsc2U7XG5cblx0XHRkYXRhLnJlc3VsdHMuZm9yRWFjaCgocmV2aWV3KSA9PiB7XG5cdFx0XHRyZXZpZXdzLnB1c2goe1xuXHRcdFx0XHRhdXRob3I6IHJldmlldy5hdXRob3IsXG5cdFx0XHRcdHJhdGluZzogcmV2aWV3LmF1dGhvcl9kZXRhaWxzPy5yYXRpbmcsXG5cdFx0XHRcdHBpY19wYXRoOiByZXZpZXcuYXV0aG9yX2RldGFpbHM/LmF2YXRhcl9wYXRoLFxuXHRcdFx0XHRjb250ZW50OiByZXZpZXcuY29udGVudCxcblx0XHRcdFx0dXJsOiByZXZpZXcudXJsLFxuXHRcdFx0XHRsYXN0X3VwZGF0ZWQ6IHJldmlldy51cGRhdGVkX2F0LFxuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdFx0cmV0dXJuIHJldmlld3Muc2xpY2UoMCwgNSk7IC8vIEZpcnN0IDUgcmV2aWV3cyByZXR1cm5lZFxuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUuZXJyb3IoYEZhaWwgdG8gZmV0Y2ggbW92aWUgcmV2aWV3czogJHtlcnJvci5tZXNzYWdlfWApO1xuXHR9XG59XG5cbi8vIEhlbHBlciBmbmNzXG5mdW5jdGlvbiBnZXRDb3VudHJ5TmFtZShjb2RlKSB7XG5cdGxldCByZWdpb25OYW1lcyA9IG5ldyBJbnRsLkRpc3BsYXlOYW1lcyhbXCJlblwiXSwgeyB0eXBlOiBcInJlZ2lvblwiIH0pO1xuXHRyZXR1cm4gcmVnaW9uTmFtZXMub2YoY29kZSk7XG59XG5cbmZ1bmN0aW9uIGdldExhbmd1YWdlKGNvZGUpIHtcblx0Y29uc3QgbGFuZyA9IG5ldyBJbnRsLkRpc3BsYXlOYW1lcyhbXCJlblwiXSwgeyB0eXBlOiBcImxhbmd1YWdlXCIgfSk7XG5cdHJldHVybiBsYW5nLm9mKGNvZGUpO1xufVxuZXhwb3J0IHtcblx0ZmV0Y2hNb3ZpZURldGFpbHMsXG5cdGZldGNoTW92aWVSZWNjb3MsXG5cdGZldGNoTW92aWVQcm92aWRlcnMsXG5cdGZldGNoTW92aWVUcmFpbGVyLFxuXHRmZXRjaE1vdmllUmV2aWV3cyxcblx0Z2V0Q291bnRyeU5hbWUsXG59O1xuIiwiY29uc3QgQVBJX0tFWSA9IFwiNzIwZDIxNTBjZjA5YmZhNjFlMjhhNTA0MmNkNzQ2OGZcIjtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSByZWxldmFudCBpbmZvcm1hdGlvbiBvZiBhIHR2IHNob3cgYmFzZWQgb24gaXRzIGlkLlxuICogQHBhcmFtIHtOdW1iZXJ9IHR2X2lkIElkZW50aWZpZXMgdHYgc2hvdyBieSBhbiBpbnRlZ2VyXG4gKiBAcmV0dXJucyB7T2JqZWN0fVx0IFJlbGV2YW50IGluZm9ybWF0aW9uIG9mIFRWIFNIT1cuIGkuZS4gbmFtZSBhbmQgbnVtYmVyXG4gKiBcdFx0XHRcdFx0XHQgc2Vhc29uc1xuICovXG5hc3luYyBmdW5jdGlvbiBmZXRjaFR2RGV0YWlscyh0dl9pZCkge1xuXHR0cnkge1xuXHRcdGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG5cdFx0XHRgaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMy90di8ke3R2X2lkfT9hcGlfa2V5PSR7QVBJX0tFWX1cblx0XHRcdCZsYW5ndWFnZT1lbi1VU2AsXG5cdFx0XHR7IG1vZGU6IFwiY29yc1wiIH1cblx0XHQpO1xuXG5cdFx0aWYgKCFyZXNwb25zZS5vaykge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIFRWIGRldGFpbHMgZnJvbSBBUEkuXCIpO1xuXHRcdH1cblxuXHRcdGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cblx0XHRjb25zdCBnZW5yZXMgPSBkYXRhLmdlbnJlcy5yZWR1Y2UoKGFjYywgdmFsKSA9PiBbLi4uYWNjLCB2YWwubmFtZV0sIFtdKTtcblxuXHRcdGNvbnN0IGdlbmVyYWxJbmZvID0ge1xuXHRcdFx0dE5hbWU6IGRhdGEub3JpZ2luYWxfbmFtZSxcblx0XHRcdHRhZ2xpbmU6IGRhdGEudGFnbGluZSxcblx0XHRcdGxhbmd1YWdlOiBkYXRhLm9yaWdpbmFsX2xhbmd1YWdlLFxuXHRcdFx0c3VtbWFyeTogZGF0YS5vdmVydmlldyxcblx0XHRcdGVwaXNvZGVfcnVuX3RpbWU6IGRhdGEuZXBpc29kZV9ydW5fdGltZVswXSxcblx0XHRcdG9yaWdpbl9jb3VudHJ5OiBkYXRhLm9yaWdpbl9jb3VudHJ5LFxuXHRcdFx0dm90ZV9hdmVyYWdlOiBkYXRhLnZvdGVfYXZlcmFnZSxcblx0XHRcdHZvdGVfY291bnQ6IGRhdGEudm90ZV9jb3VudCxcblx0XHRcdHN0YXR1czogZGF0YS5zdGF0dXMsXG5cdFx0XHRzZWFzb25zOiBkYXRhLnNlYXNvbnMsXG5cdFx0XHRudW1iZXJfb2Zfc2Vhc29uczogZGF0YS5udW1iZXJfb2Zfc2Vhc29ucyxcblx0XHRcdGZpcnN0X2Fpcl9kYXRlOiBkYXRhLmZpcnN0X2Fpcl9kYXRlLFxuXHRcdFx0bGFzdF9haXJfZGF0ZTogZGF0YS5sYXN0X2Fpcl9kYXRlLFxuXHRcdFx0YmFja2Ryb3BfcGF0aDogZGF0YS5iYWNrZHJvcF9wYXRoLFxuXHRcdFx0cG9zdGVyX3BhdGg6IGRhdGEucG9zdGVyX3BhdGgsXG5cdFx0XHRwb3B1bGFyaXR5OiBkYXRhLnBvcHVsYXJpdHksXG5cdFx0XHRnZW5yZXM6IGdlbnJlcyxcblx0XHR9O1xuXHRcdHJldHVybiBnZW5lcmFsSW5mbztcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLmVycm9yKFxuXHRcdFx0YEZhaWxlZCB0byBmZXRjaCByZWxldmFudCBpbmZvcm1hdGlvbiBmb3IgVFYgU0hPVzogJHtlcnJvci5tZXNzYWdlfWBcblx0XHQpO1xuXHR9XG59XG5cbi8qXG5SZXR1cm5zIGFuIGFycmF5IG9mIHJlY29tbWVuZGVkIHR2IHNob3dzIHdpdGggdGhlaXIgbmFtZSwgaWQsIHBvc3Rlcl9wYXRoIGFuZFxuYmFja2Ryb3BfcGF0aCByZWNvcmRlZC4gXG5JZiBubyBtb3ZpZXMgYXJlIHJlY29tbWVuZGVkLCByZXR1cm4gbnVsbDtcbiovXG4vKipcbiAqIFJldHVybnMsIGF0IG1vc3QgNSwgcmVjb21tZW5kYXRpb24gYmFzZWQgb24gdGhlIHNwZWNpZmllZCBUViBTSE9XLiBUaGVcbiAqIG1vc3QgcmVsZXZhbnQgaW5mb3JtYXRpb24gZm9yIGVhY2ggcmVjY28gaXMgcmV0dXJuZWQgYXMgYW4gb2JqZWN0LlxuICogQHBhcmFtIHtOdW1iZXJ9IHR2X2lkIElkZW50aWZpZXMgdGhlIHNwZWNpZmllZCBUViBzaG93IGJ5IGFuIEludGVnZXJcbiAqIEByZXR1cm5zIHtPYmplY3R9IFx0IE1heCA1IHJlY29tbWVuZGF0aW9ucyB3aXRoIGl0cyByZWxldmFudCBpbmZvcm1hdGlvblxuICogXHRcdFx0XHRcdFx0IGFzIGFuIG9iamVjdC5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2hUdlJlY2Nvcyh0dl9pZCkge1xuXHR0cnkge1xuXHRcdGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG5cdFx0XHRgaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMy90di8ke3R2X2lkfS9yZWNvbW1lbmRhdGlvbnM/YXBpX2tleT0ke0FQSV9LRVl9Jmxhbmd1YWdlPWVuLVVTJnBhZ2U9MWAsXG5cdFx0XHR7IG1vZGU6IFwiY29yc1wiIH1cblx0XHQpO1xuXHRcdGlmICghcmVzcG9uc2Uub2spIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBUViByZWNvbW1lbmRhdGlvbnMgZnJvbSBBUEkuXCIpO1xuXHRcdH1cblx0XHRjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG5cdFx0Y29uc3QgcmVjVHZzID0gZGF0YS5yZXN1bHRzPy5zbGljZSgwLCA1KS5yZWR1Y2UoKGFjYywgdHYpID0+IHtcblx0XHRcdGFjY1t0di5vcmlnaW5hbF9uYW1lXSA9IHtcblx0XHRcdFx0dE5hbWU6IHR2Lm9yaWdpbmFsX25hbWUsXG5cdFx0XHRcdGlkOiB0di5pZCxcblx0XHRcdFx0Zmlyc3RfYWlyX2RhdGU6IHR2LmZpcnN0X2Fpcl9kYXRlLFxuXHRcdFx0XHRwb3N0ZXJfcGF0aDogdHYucG9zdGVyX3BhdGgsXG5cdFx0XHRcdGJhY2tkcm9wX3BhdGg6IHR2LmJhY2tkcm9wX3BhdGgsXG5cdFx0XHRcdHZvdGVfYXZlcmFnZTogdHYudm90ZV9hdmVyYWdlLFxuXHRcdFx0XHR2b3RlX2NvdW50OiB0di52b3RlX2NvdW50LFxuXHRcdFx0fTtcblx0XHRcdHJldHVybiBhY2M7XG5cdFx0fSwge30pO1xuXG5cdFx0cmV0dXJuIHJlY1R2cyB8fCB7fTtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLmVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggVFYgcmVjb21tZW5kYXRpb25zOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG5cdH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIHJlbGV2YW50IFRWIHByb3ZpZGVycyBiYXNlZCBvbiB0aGUgc2VsZWN0ZWQgVFYgc2hvdy5cbiAqIEBwYXJhbSB7TnVtYmVyfSB0dl9pZCBJZGVudGlmaWVzIHRoZSBzcGVjaWZpZWQgVFYgc2hvdyBieSBhbiBJbnRlZ2VyXG4gKiBAcmV0dXJucyB7T2JqZWN0fVx0IFRWIHByb3ZpZGVycyBmb3Igc3RyZWFtaW5nLCBwdXJjaGFzZSBhbmQvb3IgcmVudFxuICogXHRcdFx0XHRcdFx0IGZvciB0aGUgc3BlY2lmaWVkIFRWIHNob3cuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGZldGNoVHZQcm92aWRlcnModHZfaWQpIHtcblx0Y29uc3QgcHJvdmlkZXJzQnlDb3VudHJ5ID0ge307XG5cdHRyeSB7XG5cdFx0Y29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcblx0XHRcdGBodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zL3R2LyR7dHZfaWR9L3dhdGNoL3Byb3ZpZGVycz9hcGlfa2V5PSR7QVBJX0tFWX1gLFxuXHRcdFx0eyBtb2RlOiBcImNvcnNcIiB9XG5cdFx0KTtcblxuXHRcdGlmICghcmVzcG9uc2Uub2spIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIFRWIHNob3cgcHJvdmlkZXJzIGZyb20gQVBJLmApO1xuXHRcdH1cblx0XHRjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG5cdFx0Zm9yIChjb25zdCBjb3VudHJ5Q29kZSBpbiBkYXRhLnJlc3VsdHMpIHtcblx0XHRcdGNvbnN0IGNvdW50cnkgPSBnZXRDb3VudHJ5TmFtZShjb3VudHJ5Q29kZSk7XG5cdFx0XHRwcm92aWRlcnNCeUNvdW50cnlbY291bnRyeV0gPSB7XG5cdFx0XHRcdHN0cmVhbTogW10sXG5cdFx0XHRcdHJlbnQ6IFtdLFxuXHRcdFx0XHRidXk6IFtdLFxuXHRcdFx0XHRjb3VudHJ5Q29kZTogY291bnRyeUNvZGUsXG5cdFx0XHR9O1xuXG5cdFx0XHQvKlxuXHRcdFx0U29ydHMgcHJvdmlkZXJzIGJhc2VkIG9uIGNvdW50cnkgYW5kIHNlcnZpY2VzIHRoZXkgcHJvdmlkZS5cblxuXHRcdFx0VGFrZXMgaW4gdHlwZSBvZiBzZXJ2aWNlcyBhcyBwYXJhbSA9PiBbXCJmbGF0cmF0ZSAoc3RyZWFtaW5nKVwiLCBcblx0XHRcdFwicmVudFwiLCBcImJ1eVwiXSBhbmQgYW4gYXJyYXkgdG8gYXBwZW5kIGl0IHRvLlxuXHRcdFx0Ki9cblx0XHRcdGNvbnN0IHNvcnRQcm92aWRlcnMgPSAoc2VydmljZXMsIGNvbGxlY3Rpb24pID0+IHtcblx0XHRcdFx0aWYgKHNlcnZpY2VzKSB7XG5cdFx0XHRcdFx0c2VydmljZXMuZm9yRWFjaCgoc2VydmljZSkgPT4ge1xuXHRcdFx0XHRcdFx0Y29uc3QgcHJvdmlkZXJJbmZvID0ge1xuXHRcdFx0XHRcdFx0XHRwcm92aWRlcl9uYW1lOiBzZXJ2aWNlLnByb3ZpZGVyX25hbWUsXG5cdFx0XHRcdFx0XHRcdHByb3ZpZGVyX2xvZ29fcGF0aDogc2VydmljZS5sb2dvX3BhdGgsXG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0Y29sbGVjdGlvbi5wdXNoKHByb3ZpZGVySW5mbyk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdC8vIEFkZCBzdHJlYW1pbmcgc2VydmljZXMgZm9yIHNwZWNpZmllZCBtb3ZpZSBpbiBlYWNoIGNvdW50cnkuXG5cdFx0XHRzb3J0UHJvdmlkZXJzKFxuXHRcdFx0XHRkYXRhLnJlc3VsdHNbY291bnRyeUNvZGVdLmZsYXRyYXRlLFxuXHRcdFx0XHRwcm92aWRlcnNCeUNvdW50cnlbY291bnRyeV0uc3RyZWFtXG5cdFx0XHQpO1xuXG5cdFx0XHQvLyBBZGQgcmVudGluZyBzZXJ2aWNlcyBmb3Igc3BlaWNpZmllZCBtb3ZpZSBpbiBlYWNoIGNvdW50cnkuXG5cdFx0XHRzb3J0UHJvdmlkZXJzKFxuXHRcdFx0XHRkYXRhLnJlc3VsdHNbY291bnRyeUNvZGVdLnJlbnQsXG5cdFx0XHRcdHByb3ZpZGVyc0J5Q291bnRyeVtjb3VudHJ5XS5yZW50XG5cdFx0XHQpO1xuXG5cdFx0XHQvLyBBZGQgYnV5aW5nIHNlcnZpY2VzIGZvciBzcGVjaWZpZWQgbW92aWUgaW4gZWFjaCBjb3VudHJ5LlxuXHRcdFx0c29ydFByb3ZpZGVycyhcblx0XHRcdFx0ZGF0YS5yZXN1bHRzW2NvdW50cnlDb2RlXS5idXksXG5cdFx0XHRcdHByb3ZpZGVyc0J5Q291bnRyeVtjb3VudHJ5XS5idXlcblx0XHRcdCk7XG5cdFx0fVxuXHRcdHJldHVybiBwcm92aWRlcnNCeUNvdW50cnk7XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS5lcnJvcihgRmFpbGVkIHRvIGZldGNoIFRWIHByb3ZpZGVyczogJHtlcnJvci5tZXNzYWdlfWApO1xuXHR9XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgcmVsZXZhbnQgaW5mb3JtYXRpb24gb2YgdGhlIHR2IHRyYWlsZXIuIFRoZSBpZCBzaG91bGQgYWxzb1xuICogYmUgcmV0cmlldmVkIHNvIHRoYXQgdGhlIHVzZXIgY2FuIHNlYXJjaCBmb3IgdGhlIHR2IHJlc3BlY3RpdmVseS5cbiAqIEBwYXJhbSB7TnVtYmVyfSB0dl9pZCBJZGVudGlmaWVzIHRoZSB0diBzaG93IGFzIGFuIEludGVnZXIuXG4gKiBAcmV0dXJucyB7T2JqZWN0fVx0IFJlbGV2YW50IGluZm8gb2YgdHJhaWxlciBpbmNsdWRpbmcgdmlkZW8gbmFtZSwgc2l0ZVxuICogXHRcdFx0XHRcdFx0IGxhbmd1YWdlIGFuZCB0eXBlLlxuICovXG5hc3luYyBmdW5jdGlvbiBmZXRjaFR2VHJhaWxlcih0dl9pZCkge1xuXHR0cnkge1xuXHRcdGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG5cdFx0XHRgaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMy90di8ke3R2X2lkfS92aWRlb3M/YXBpX2tleT0ke0FQSV9LRVl9YCxcblx0XHRcdHsgbW9kZTogXCJjb3JzXCIgfVxuXHRcdCk7XG5cdFx0aWYgKCFyZXNwb25zZS5vaykge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIFRWIHRyYWlsZXIgZnJvbSBBUEkuXCIpO1xuXHRcdH1cblx0XHRjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG5cdFx0Y29uc3QgdHJhaWxlcnMgPSBkYXRhLnJlc3VsdHMuZmlsdGVyKFxuXHRcdFx0KHZpZGVvKSA9PiB2aWRlby50eXBlID09PSBcIlRyYWlsZXJcIlxuXHRcdCk7XG5cblx0XHRpZiAodHJhaWxlcnMubGVuZ3RoID09PSAwKSByZXR1cm47XG5cblx0XHQvLyBGaW5kIG9mZmljaWFsIHRyYWlsZXIgb3IgdXNlIHRoZSBmaXJzdCB0cmFpbGVyLlxuXHRcdGNvbnN0IHR2VHJhaWxlciA9XG5cdFx0XHR0cmFpbGVycy5maW5kKCh2aWRlbykgPT4gdmlkZW8ub2ZmaWNpYWwgPT09IHRydWUpIHx8IHRyYWlsZXJzWzBdO1xuXG5cdFx0cmV0dXJuIHtcblx0XHRcdHROYW1lOiB0dlRyYWlsZXIubmFtZSxcblx0XHRcdGtleTogdHZUcmFpbGVyLmtleSxcblx0XHRcdHNpdGU6IHR2VHJhaWxlci5zaXRlLFxuXHRcdFx0dHlwZTogdHZUcmFpbGVyLnR5cGUsXG5cdFx0XHRsYW5nOiBnZXRMYW5ndWFnZSh0dlRyYWlsZXIuaXNvXzYzOV8xKSxcblx0XHR9O1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUuZXJyb3IoYEZhaWxlZCB0byBmZXRjaCBUViB0cmFpbGVyOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG5cdH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBmaXJzdCA1IHJldmlld3Mgd2l0aCB0aGVpciByYXRpbmdzLCBhdXRob3IgaW5mb3JtYXRpb24gYW5kIGxpbmtzLlxuICogQHBhcmFtIHtOdW1iZXJ9IG1vdmllX2lkIElkZW50aWZpZXMgdGhlIFRWIHNob3cgYXMgYW4gSW50ZWdlclxuICogQHJldHVybnMge09iamVjdH1cdFx0UmV2aWV3IGluZm9ybWF0aW9uIGluY2x1ZGluZyB0aGUgY29udGVudCwgYXV0aG9yLFxuICogXHRcdFx0XHRcdFx0XHRsaW5rcyBhbmQgcmF0aW5ncy5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2hUdlJldmlld3ModHZfaWQpIHtcblx0dHJ5IHtcblx0XHRjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFxuXHRcdFx0YGh0dHBzOi8vYXBpLnRoZW1vdmllZGIub3JnLzMvdHYvJHt0dl9pZH0vcmV2aWV3cz9hcGlfa2V5PVxuXHRcdFx0JHtBUElfS0VZfSZsYW5ndWFnZT1lbi1VUyZwYWdlPTFgLFxuXHRcdFx0eyBtb2RlOiBcImNvcnNcIiB9XG5cdFx0KTtcblx0XHRpZiAoIXJlc3BvbnNlLm9rKSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggVFYgcmV2aWV3cyBmcm9tIEFQSS5cIik7XG5cdFx0fVxuXHRcdGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cdFx0aWYgKGRhdGEucmVzdWx0cy5sZW5ndGggPT09IDApIHJldHVybiBmYWxzZTtcblxuXHRcdGNvbnN0IHJldmlld3MgPSBkYXRhLnJlc3VsdHNcblx0XHRcdC5tYXAoKHJldmlldykgPT4gKHtcblx0XHRcdFx0YXV0aG9yOiByZXZpZXcuYXV0aG9yLFxuXHRcdFx0XHRyYXRpbmc6IHJldmlldy5hdXRob3JfZGV0YWlscz8ucmF0aW5nLFxuXHRcdFx0XHRwaWNfcGF0aDogcmV2aWV3LmF1dGhvcl9kZXRhaWxzPy5hdmF0YXJfcGF0aCxcblx0XHRcdFx0Y29udGVudDogcmV2aWV3LmNvbnRlbnQsXG5cdFx0XHRcdHVybDogcmV2aWV3LnVybCxcblx0XHRcdFx0bGFzdF91cGRhdGVkOiByZXZpZXcudXBkYXRlZF9hdCxcblx0XHRcdH0pKVxuXHRcdFx0LnNsaWNlKDAsIDUpOyAvLyBPbmx5IHJldHVybiB0aGUgZmlyc3QgNSByZXZpZXdzIG1heGltdW0uXG5cblx0XHRyZXR1cm4gcmV2aWV3cztcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLmVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggVFYgcmV2aWV3czogJHtlcnJvci5tZXNzYWdlfWApO1xuXHR9XG59XG5cbi8vIEhlbHBlciBmbmNzXG5mdW5jdGlvbiBnZXRDb3VudHJ5TmFtZShjb2RlKSB7XG5cdGxldCByZWdpb25OYW1lcyA9IG5ldyBJbnRsLkRpc3BsYXlOYW1lcyhbXCJlblwiXSwgeyB0eXBlOiBcInJlZ2lvblwiIH0pO1xuXHRyZXR1cm4gcmVnaW9uTmFtZXMub2YoY29kZSk7XG59XG5cbmZ1bmN0aW9uIGdldExhbmd1YWdlKGNvZGUpIHtcblx0Y29uc3QgbGFuZyA9IG5ldyBJbnRsLkRpc3BsYXlOYW1lcyhbXCJlblwiXSwgeyB0eXBlOiBcImxhbmd1YWdlXCIgfSk7XG5cdHJldHVybiBsYW5nLm9mKGNvZGUpO1xufVxuZXhwb3J0IHtcblx0ZmV0Y2hUdkRldGFpbHMsXG5cdGZldGNoVHZSZWNjb3MsXG5cdGZldGNoVHZQcm92aWRlcnMsXG5cdGZldGNoVHZUcmFpbGVyLFxuXHRmZXRjaFR2UmV2aWV3cyxcbn07XG4iLCJpbXBvcnQgKiBhcyBtb3ZpZSBmcm9tIFwiLi4vYXBpRnVuY3Rpb25zL2ZldGNoTW92aWVJbmZvXCI7XG5pbXBvcnQgKiBhcyB0diBmcm9tIFwiLi4vYXBpRnVuY3Rpb25zL2ZldGNoVHZJbmZvXCI7XG5pbXBvcnQgKiBhcyBwYWdlIGZyb20gXCIuL2RyYXdTZWN0aW9uc1wiO1xuXG4vKlxuRHJhdyBhbiBpbmRpdmlkdWFsIHNlY3Rpb24gYmFzZWQgb24gdXNlciBpbnB1dCBxdWVyeS5cblRoaXMgc2VjdGlvbiB3aWxsIGNvbnN0cyBvZiB0aGUgb3ZlcmFsbCBtb3ZpZS90didzIFxuICAgIC0gRGV0YWlscyxcbiAgICAtIFRoZSB3YXRjaCBwcm92aWRlcnMgYmFzZWQgb24gc3BlY2lmaWMgY291bnRyaWVzXG4gICAgLSBBdmFpbGFibGUgdHJhaWxlcnMsXG4gICAgLSBPdGhlciByZWNvbW1lbmRhdGlvbnMuXG4gICAgLSBSZXZpZXdzIGJ5IGVzdGFibGlzaGVkIGF1dGhvcnMgYmFzZWQgZnJvbSByYW5kb20gc291cmNlcy5cbiovXG5cbmNvbnN0IGRyYXdTZWN0aW9uID0gYXN5bmMgKGlkLCBtZWRpYSkgPT4ge1xuXHRjb25zdCBzZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlY3Rpb25cIik7XG5cdGNvbnN0IGRldGFpbHMgPSBhd2FpdCBnZXRJbmZvKGlkLCBtb3ZpZS5mZXRjaE1vdmllRGV0YWlscywgdHYuZmV0Y2hUdkRldGFpbHMpO1xuXHRjb25zdCByZWNzID0gYXdhaXQgZ2V0SW5mbyhpZCwgbW92aWUuZmV0Y2hNb3ZpZVJlY2NvcywgdHYuZmV0Y2hUdlJlY2Nvcyk7XG5cdGNvbnN0IHByb3ZpZGVycyA9IGF3YWl0IGdldEluZm8oXG5cdFx0aWQsXG5cdFx0bW92aWUuZmV0Y2hNb3ZpZVByb3ZpZGVycyxcblx0XHR0di5mZXRjaFR2UHJvdmlkZXJzXG5cdCk7XG5cdGNvbnN0IHRyYWlsZXIgPSBhd2FpdCBnZXRJbmZvKGlkLCBtb3ZpZS5mZXRjaE1vdmllVHJhaWxlciwgdHYuZmV0Y2hUdlRyYWlsZXIpO1xuXHRjb25zdCByZXZpZXdzID0gYXdhaXQgZ2V0SW5mbyhpZCwgbW92aWUuZmV0Y2hNb3ZpZVJldmlld3MsIHR2LmZldGNoVHZSZXZpZXdzKTtcblxuXHRzZWN0aW9uLmNsYXNzTGlzdC5hZGQoXCJzZWN0aW9uLWNvbnRhaW5lclwiKTtcblx0ZnVuY3Rpb24gZHJhd0FsbCgpIHtcblx0XHRhZGRUb1NlY3Rpb24oZHJhd0ludHJvKCkpO1xuXHR9XG5cblx0ZnVuY3Rpb24gYWRkVG9TZWN0aW9uKHBhcnQpIHtcblx0XHRwYXJ0ID8gc2VjdGlvbi5hcHBlbmRDaGlsZChwYXJ0KSA6IFwiXCI7XG5cdH1cblxuXHRmdW5jdGlvbiByZW5kZXJFbGVtZW50KHRhZywgY2xhc3NOYW1lKSB7XG5cdFx0Y29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpO1xuXHRcdGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG5cdFx0cmV0dXJuIGNvbnRhaW5lcjtcblx0fVxuXG5cdGFzeW5jIGZ1bmN0aW9uIGdldEluZm8oaWQsIG1vdmllRm5jLCB0dkZuYykge1xuXHRcdHJldHVybiBtZWRpYSA9PT0gXCJtb3ZpZVwiID8gYXdhaXQgbW92aWVGbmMoaWQpIDogYXdhaXQgdHZGbmMoaWQpO1xuXHR9XG5cblx0Ly8gRHJhdyAoaWYgYW55KSB0aXRsZSwgcGhvdG8sIHRhZ2xpbmUsIGFuZCBzdW1tYXJ5LlxuXHRjb25zdCBkcmF3SW50cm8gPSAoaW1nU2l6ZSkgPT4ge1xuXHRcdGNvbnN0IGludHJvQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblx0XHRpbnRyb0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiaW50cm9cIik7XG5cblx0XHRpbnRyb0NvbnRhaW5lci5hcHBlbmRDaGlsZChjcmVhdGVUaXRsZSgpKTtcblx0XHRkZXRhaWxzLnRhZ2xpbmUgPyBpbnRyb0NvbnRhaW5lci5hcHBlbmRDaGlsZCh3cml0ZVRhZ2xpbmUoKSkgOiBcIlwiO1xuXG5cdFx0Y29uc3QgaW1nID0gcmVuZGVySW1nKGltZ1NpemUpO1xuXHRcdGltZyA/IGludHJvQ29udGFpbmVyLmFwcGVuZENoaWxkKGltZykgOiBcIlwiO1xuXG5cdFx0ZnVuY3Rpb24gY3JlYXRlVGl0bGUoKSB7XG5cdFx0XHRjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKTtcblx0XHRcdHRpdGxlLnRleHRDb250ZW50ID0gZGV0YWlscy5tTmFtZSA/IGRldGFpbHMubU5hbWUgOiBkZXRhaWxzLnROYW1lO1xuXHRcdFx0dGl0bGUuY2xhc3NMaXN0LmFkZChcInRpdGxlXCIpO1xuXHRcdFx0cmV0dXJuIHRpdGxlO1xuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIHJlbmRlckltZyhpbWdTaXplID0gXCJcIikge1xuXHRcdFx0Y29uc3QgcG9zdGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcblx0XHRcdGNvbnN0IGJhc2VJbWdVcmwgPSBcImh0dHBzOi8vaW1hZ2UudG1kYi5vcmcvdC9wXCI7XG5cdFx0XHRsZXQgaW1nX3BhdGg7XG5cdFx0XHRwb3N0ZXIuY2xhc3NMaXN0LmFkZChcInBvc3RlclwiKTtcblxuXHRcdFx0aWYgKGRldGFpbHMucG9zdGVyX3BhdGgpIHtcblx0XHRcdFx0aW1nX3BhdGggPSBkZXRhaWxzLnBvc3Rlcl9wYXRoO1xuXHRcdFx0fSBlbHNlIGlmIChkZXRhaWxzLmJhY2tkcm9wX3BhdGgpIHtcblx0XHRcdFx0aW1nX3BhdGggPSBkZXRhaWxzLmJhY2tkcm9wX3BhdGg7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHQhaW1nU2l6ZVxuXHRcdFx0XHQ/IChwb3N0ZXIuc3JjID0gYCR7YmFzZUltZ1VybH0vb3JpZ2luYWwvJHtpbWdfcGF0aH1gKVxuXHRcdFx0XHQ6IChwb3N0ZXIuc3JjID0gYCR7YmFzZUltZ1VybH0vdyR7aW1nU2l6ZX0vJHtpbWdfcGF0aH1gKTtcblx0XHRcdHBvc3Rlci5hbHQgPSBcIk1vdmllIHBpY3R1cmUgcG9zdGVyXCI7XG5cdFx0XHRwb3N0ZXIuc2V0QXR0cmlidXRlKFwibG9hZGluZ1wiLCBcImxhenlcIik7XG5cdFx0XHRyZXR1cm4gcG9zdGVyO1xuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIHdyaXRlVGFnbGluZSgpIHtcblx0XHRcdGNvbnN0IHRhZ1BhcmEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZW1cIik7XG5cdFx0XHR0YWdQYXJhLnRleHRDb250ZW50ID0gYFwiJHtkZXRhaWxzLnRhZ2xpbmV9XCJgO1xuXHRcdFx0dGFnUGFyYS5jbGFzc0xpc3QuYWRkKFwidGFnbGluZVwiKTtcblx0XHRcdHJldHVybiB0YWdQYXJhO1xuXHRcdH1cblx0XHRyZXR1cm4gaW50cm9Db250YWluZXI7XG5cdH07XG5cblx0Y29uc3QgZHJhd1N1YkluZm9zID0gKCkgPT4ge1xuXHRcdGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cdFx0Y29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJzdWJpbmZvLWNvbnRhaW5lclwiKTtcblxuXHRcdC8vIFJlbGVhc2UgZGF0ZSBmb3IgbW92aWVzIGFuZCBmaXJzdCBhaXJlZCBmb3IgdHYgc2hvdy5cblx0XHRsZXQgZGF0ZSwgbGFzdEFpcmVkO1xuXHRcdGlmIChkZXRhaWxzLnJlbGVhc2VfZGF0ZSkge1xuXHRcdFx0ZGF0ZSA9IGNyZWF0ZVN1YkluZm8oXG5cdFx0XHRcdFwiUmVsZWFzZSBEYXRlOlwiLFxuXHRcdFx0XHRkZXRhaWxzLnJlbGVhc2VfZGF0ZS5zcGxpdChcIi1cIikucmV2ZXJzZSgpLmpvaW4oXCIvXCIpXG5cdFx0XHQpO1xuXHRcdFx0bGFzdEFpcmVkID0gXCJcIjtcblx0XHR9IGVsc2UgaWYgKGRldGFpbHMuZmlyc3RfYWlyX2RhdGUpIHtcblx0XHRcdGRhdGUgPSBjcmVhdGVTdWJJbmZvKFxuXHRcdFx0XHRcIkZpcnN0IEFpcmVkOiBcIixcblx0XHRcdFx0ZGV0YWlscy5maXJzdF9haXJfZGF0ZS5zcGxpdChcIi1cIikucmV2ZXJzZSgpLmpvaW4oXCIvXCIpXG5cdFx0XHQpO1xuXHRcdFx0bGFzdEFpcmVkID0gY3JlYXRlU3ViSW5mbyhcblx0XHRcdFx0XCJMYXN0IEFpcmVkOiBcIixcblx0XHRcdFx0ZGV0YWlscy5sYXN0X2Fpcl9kYXRlLnNwbGl0KFwiLVwiKS5yZXZlcnNlKCkuam9pbihcIi9cIilcblx0XHRcdCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGRhdGUgPSBcIlwiO1xuXHRcdH1cblx0XHRsZXQgcnVudGltZSA9IGRldGFpbHMucnVudGltZSA/IGNvbnZlcnRNaW5Ub0hyKGRldGFpbHMucnVudGltZSkgOiBcIlwiO1xuXG5cdFx0Y29uc3QgaW5mb3JtYXRpb24gPSBbXG5cdFx0XHRkYXRlLFxuXHRcdFx0bGFzdEFpcmVkLFxuXHRcdFx0Y3JlYXRlU3ViSW5mbyhcIlNob3cgc3RhdHVzOlwiLCBkZXRhaWxzLnN0YXR1cyksXG5cdFx0XHRjcmVhdGVTdWJJbmZvKFwiUnVudGltZTogXCIsIHJ1bnRpbWUpLFxuXHRcdFx0Y3JlYXRlU3ViSW5mbyhcIkdlbnJlczogXCIsIGRldGFpbHMuZ2VucmVzLmpvaW4oXCIsIFwiKSksXG5cdFx0XHRjcmVhdGVTdWJJbmZvKFwiTnVtYmVyIG9mIHNlYXNvbnM6IFwiLCBkZXRhaWxzLm51bWJlcl9vZl9zZWFzb25zKSxcblx0XHRcdGNyZWF0ZVN1YkluZm8oXCJFc3QgQXZnIEVwaXNvZGUgUnVudGltZTogXCIsIGRldGFpbHMuZXBpc29kZV9ydW5fdGltZSksXG5cdFx0XHRjcmVhdGVTdWJJbmZvKFwiQ291bnRyeSBvZiBPcmlnaW46IFwiLCBkZXRhaWxzLm9yaWdpbl9jb3VudHJ5KSxcblxuXHRcdFx0Y3JlYXRlU3ViSW5mbyhcIlZvdGUgQXZlcmFnZTogXCIsIGRldGFpbHMudm90ZV9hdmVyYWdlKSxcblx0XHRcdGNyZWF0ZVN1YkluZm8oXCJWb3RlIENvdW50OiBcIiwgZGV0YWlscy52b3RlX2NvdW50KSxcblx0XHRcdGNyZWF0ZVN1YkluZm8oXCJQb3B1bGFyaXR5OiBcIiwgZGV0YWlscy5wb3B1bGFyaXR5KSxcblx0XHRdO1xuXG5cdFx0aW5mb3JtYXRpb24uZm9yRWFjaCgoaW5mbykgPT4gKGluZm8gPyBjb250YWluZXIuYXBwZW5kQ2hpbGQoaW5mbykgOiBcIlwiKSk7XG5cblx0XHRmdW5jdGlvbiBjcmVhdGVTdWJJbmZvKGNhdGVnb3J5LCBpbmZvKSB7XG5cdFx0XHQvLyBJZ25vcmVzIHR2IHN1YmluZm8gdG8gYmUgZGlzcGxheWVkIGlmIGl0J3MgYSBtb3ZpZSBhbmRcblx0XHRcdC8vIHZpY2V2ZXJzYVxuXHRcdFx0aWYgKCFpbmZvKSByZXR1cm47XG5cdFx0XHRjb25zdCBzdWJJbmZvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblx0XHRcdGNvbnN0IGNhdGVnb3J5TmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuXHRcdFx0Y29uc3QgY2F0ZWdvcnlJbmZvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG5cblx0XHRcdHN1YkluZm8uY2xhc3NMaXN0LmFkZChcInN1Yi1pbmZvXCIpO1xuXHRcdFx0Y2F0ZWdvcnlOYW1lLmNsYXNzTGlzdC5hZGQoXCJjYXRlZ29yeS1uYW1lXCIpO1xuXHRcdFx0Y2F0ZWdvcnlJbmZvLmNsYXNzTGlzdC5hZGQoXCJjYXRlZ29yeS1pbmZvXCIpO1xuXG5cdFx0XHRjYXRlZ29yeU5hbWUudGV4dENvbnRlbnQgPSBjYXRlZ29yeTtcblx0XHRcdGNhdGVnb3J5SW5mby50ZXh0Q29udGVudCA9IGluZm87XG5cblx0XHRcdFtjYXRlZ29yeU5hbWUsIGNhdGVnb3J5SW5mb10uZm9yRWFjaCgoaW5mbykgPT4gc3ViSW5mby5hcHBlbmRDaGlsZChpbmZvKSk7XG5cdFx0XHRyZXR1cm4gc3ViSW5mbztcblx0XHR9XG5cblx0XHRmdW5jdGlvbiBjb252ZXJ0TWluVG9IcihtaW5zKSB7XG5cdFx0XHRjb25zdCBob3VycyA9IG1pbnMgLyA2MDtcblx0XHRcdGNvbnN0IHJIb3VycyA9IE1hdGguZmxvb3IoaG91cnMpO1xuXHRcdFx0Y29uc3QgbWludXRlcyA9IChob3VycyAtIHJIb3VycykgKiA2MDtcblx0XHRcdGNvbnN0IHJNaW51dGVzID0gTWF0aC5yb3VuZChtaW51dGVzKTtcblx0XHRcdHJldHVybiBgJHtySG91cnN9aCAke3JNaW51dGVzfW1pbmA7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNvbnRhaW5lcjtcblx0fTtcblxuXHRjb25zdCBkcmF3U3VtbWFyeUhlYWRpbmcgPSAoKSA9PiB7XG5cdFx0Y29uc3QgaGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMlwiKTtcblx0XHRoZWFkaW5nLnRleHRDb250ZW50ID0gXCJTeW5vcHNpczogXCI7XG5cdFx0cmV0dXJuIGhlYWRpbmc7XG5cdH07XG5cdGNvbnN0IGRyYXdTdW1tYXJ5ID0gKCkgPT4ge1xuXHRcdGNvbnN0IHBhcmEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcblx0XHRwYXJhLnRleHRDb250ZW50ID0gZGV0YWlscy5zdW1tYXJ5O1xuXHRcdHBhcmEuY2xhc3NMaXN0LmFkZChcInN1bW1hcnlcIik7XG5cdFx0cmV0dXJuIHBhcmE7XG5cdH07XG5cblx0Y29uc3QgZHJhd1Byb3ZpZGVycyA9ICgpID0+IHtcblx0XHRsZXQgYXZhaWxQcm92aWRlcnM7IC8vIEJvb2xlYW4gdGhhdCBpbmRpY2F0ZXMgaWYgdGhlcmUgYXJlIGFueSB3YXRjaFxuXHRcdC8vIHByb3ZpZGVycyBmb3IgdGhpcyBzaG93LlxuXG5cdFx0Ly8gSG91c2VzIHRoZSBidG4gdGhhdCBvcGVucyB0aGUgbW9kYWwgYW5kIG92ZXJsYXksIGFuZCB0aGUgYXZhaWxhYmxlIHByb3ZpZGVycyBmb3IgJ3N0cmVhbWluZycsICdyZW50JyBhbmQgJ3B1cmNoYXNlJy5cblx0XHRjb25zdCBwcm92aWRlckNvbnRhaW5lciA9IHJlbmRlckVsZW1lbnQoXCJkaXZcIiwgXCJwcm92aWRlci1jb250YWluZXJcIik7XG5cdFx0Y29uc3QgY291bnRyeUJ0biA9IHJlbmRlckVsZW1lbnQoXCJidXR0b25cIiwgXCJjb3VudHJ5LWJ0blwiKTtcblx0XHRjb25zdCBob3VzZUNvbnRhaW5lciA9IHJlbmRlckVsZW1lbnQoXCJkaXZcIiwgXCJob3VzZS1wcm92aWRlci1jb250YWluZXJcIik7XG5cdFx0W2NvdW50cnlCdG4sIGhvdXNlQ29udGFpbmVyXS5mb3JFYWNoKChlbGVtKSA9PiB7XG5cdFx0XHRwcm92aWRlckNvbnRhaW5lci5hcHBlbmRDaGlsZChlbGVtKTtcblx0XHR9KTtcblxuXHRcdC8vIFNlYXJjaCBmb3IgZGVmYXVsdCBjb3VudHJ5IFwiQXVzdHJhbGlhXCIuIElmIG5vbmUgZm91bmQuIERyYXcgdGhlIGZpcnN0IGNvdW50cnkncyBwcm92aWRlci5cblx0XHRpZiAoT2JqZWN0LmtleXMocHJvdmlkZXJzKS5sZW5ndGgpIHtcblx0XHRcdGF2YWlsUHJvdmlkZXJzID0gdHJ1ZTtcblx0XHRcdGlmIChPYmplY3Qua2V5cyhwcm92aWRlcnMpLmluY2x1ZGVzKFwiQXVzdHJhbGlhXCIpKSB7XG5cdFx0XHRcdC8vIERyYXcgQXVzIGZsYWcgaW4gYnRuLlxuXHRcdFx0XHRjb25zdCBmbGFnID0gcmVuZGVyRWxlbWVudChcImltZ1wiLCBcImNvdW50cnktZmxhZ1wiKTtcblx0XHRcdFx0ZmxhZy5zZXRBdHRyaWJ1dGUoXCJjcm9zc29yaWdpblwiLCBcImFub255bW91c1wiKTtcblx0XHRcdFx0ZmxhZy5zcmMgPSBgaHR0cHM6Ly9jb3VudHJ5ZmxhZ3NhcGkuY29tL3BuZy9BdXN0cmFsaWFgO1xuXHRcdFx0XHRmbGFnLmFsdCA9IGBBdXN0cmFsaWEgZmxhZ2A7XG5cdFx0XHRcdGZsYWcuY2xhc3NMaXN0LmFkZChcImJ0bi1jb3VudHJ5LWZsYWdcIik7XG5cdFx0XHRcdGRyYXdQcm92aWRlcihcIkF1c3RyYWxpYVwiKTtcblx0XHRcdFx0Y291bnRyeUJ0bi50ZXh0Q29udGVudCA9IFwiQXVzdHJhbGlhXCI7XG5cdFx0XHRcdGNvdW50cnlCdG4uYXBwZW5kQ2hpbGQoZmxhZyk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHQvLyBEcmF3IGZpcnN0IGNvdW50cnkncyBmbGFnIGluIGJ0bi5cblx0XHRcdFx0Y29uc3QgZmlyc3RQcm92aWRlciA9IE9iamVjdC5rZXlzKHByb3ZpZGVycylbMF07XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Y29uc3QgZmxhZyA9IHJlbmRlckVsZW1lbnQoXCJpbWdcIiwgXCJjb3VudHJ5LWZsYWdcIik7XG5cdFx0XHRcdFx0ZmxhZy5zZXRBdHRyaWJ1dGUoXCJjcm9zc29yaWdpblwiLCBcImFub255bW91c1wiKTtcblx0XHRcdFx0XHRmbGFnLnNyYyA9IGBodHRwczovL2NvdW50cnlmbGFnc2FwaS5jb20vcG5nLyR7Zmlyc3RQcm92aWRlcn1gO1xuXHRcdFx0XHRcdGZsYWcuYWx0ID0gYCR7Zmlyc3RQcm92aWRlcn0gZmxhZ2A7XG5cdFx0XHRcdFx0ZmxhZy5jbGFzc0xpc3QuYWRkKFwiYnRuLWNvdW50cnktZmxhZ1wiKTtcblx0XHRcdFx0XHRjb3VudHJ5QnRuLmFwcGVuZENoaWxkKGZsYWcpO1xuXHRcdFx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRyYXdQcm92aWRlcihmaXJzdFByb3ZpZGVyKTtcblx0XHRcdFx0Y291bnRyeUJ0bi50ZXh0Q29udGVudCA9IGAke2ZpcnN0UHJvdmlkZXJ9YDtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0YXZhaWxQcm92aWRlcnMgPSBmYWxzZTtcblx0XHRcdGNvdW50cnlCdG4udGV4dENvbnRlbnQgPVxuXHRcdFx0XHRcIk5vIGNvdW50cmllcyBvZmZlciB0aGlzIHR2L21vdmllIGF0IHRoZSBtb21lbnQuXCI7XG5cdFx0XHRjb3VudHJ5QnRuLmNsYXNzTGlzdC5hZGQoXCJsb3N0LXByb3ZpZGVyc1wiKTtcblx0XHRcdGNvbnN0IGxvc3RHaWYgPSByZW5kZXJFbGVtZW50KFwiaW1nXCIsIFwibG9zdC1naWZcIik7XG5cdFx0XHRsb3N0R2lmLnNyYyA9IFwiLi9pbWcvbG9zdC1naWYuZ2lmXCI7XG5cdFx0XHRsb3N0R2lmLmFsdCA9IFwiUHJvdmVyIGNhbm5vdCBiZSBmb3VuZCBwaWN0dXJlLlwiO1xuXHRcdFx0aG91c2VDb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuXHRcdFx0aG91c2VDb250YWluZXIuc3R5bGUuanVzdGlmeUNvbnRlbnQgPSBcImNlbnRlclwiO1xuXHRcdFx0aG91c2VDb250YWluZXIuYXBwZW5kQ2hpbGQobG9zdEdpZik7XG5cdFx0fVxuXHRcdC8vIHJlbmRlciBkb3duIGFycm93LlxuXHRcdGNvbnN0IGRvd25BcnJvdyA9IHJlbmRlckVsZW1lbnQoXCJpXCIsIFwiZmFzXCIpO1xuXHRcdGRvd25BcnJvdy5jbGFzc0xpc3QuYWRkKFwiZmEtYW5nbGUtZG93blwiKTtcblx0XHRjb3VudHJ5QnRuLmFwcGVuZENoaWxkKGRvd25BcnJvdyk7XG5cblx0XHQvLyBhdmFpbFByb3ZpZGVycyA/IHJlbmRlckNvdW50cmllc01vZGFsKGNvdW50cnlCdG4udGV4dENvbnRlbnQpIDogXCJcIjsgLy8gdGVtcFxuXHRcdC8vIEFkZCBidG4gZXZlbnQgY2xpY2sgbGlzdGVuZXIgdG8gb3BlbiBtb2RhbFxuXHRcdGNvdW50cnlCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRpZiAoYXZhaWxQcm92aWRlcnMpIHtcblx0XHRcdFx0cmVuZGVyQ291bnRyaWVzTW9kYWwoY291bnRyeUJ0bi50ZXh0Q29udGVudCk7XG5cdFx0XHRcdGhpZ2hsaWdodEN1cnJDb3VudHJ5KGNvdW50cnlCdG4udGV4dENvbnRlbnQpO1xuXHRcdFx0XHQvLyBhZGQgY291bnRyeSBldmVudCBoZXJlXG5cdFx0XHRcdGFwcGx5Q2hvb3NlQ291bnRyeUZuY3MoKTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRmdW5jdGlvbiBhcHBseUNob29zZUNvdW50cnlGbmNzKCkge1xuXHRcdFx0Y29uc3QgY291bnRyaWVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5jb3VudHJ5LWNvbnRhaW5lclwiKTtcblx0XHRcdGNvdW50cmllcy5mb3JFYWNoKChjb3VudHJ5KSA9PlxuXHRcdFx0XHRjb3VudHJ5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuXHRcdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRpZiAoY291bnRyeS5sYXN0Q2hpbGQudGV4dENvbnRlbnQpIHtcblx0XHRcdFx0XHRcdGNvbnN0IHNlbGVjdGVkQ291bnRyeSA9IGNvdW50cnkubGFzdENoaWxkLnRleHRDb250ZW50O1xuXHRcdFx0XHRcdFx0Y2xlYXJQcm92aWRlcigpO1xuXHRcdFx0XHRcdFx0ZHJhd1Byb3ZpZGVyKHNlbGVjdGVkQ291bnRyeSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWwtY291bnRyeS1jb250YWluZXJcIikucmVtb3ZlKCk7XG5cdFx0XHRcdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mYWNlLW1hc2tcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXHRcdFx0XHR9KVxuXHRcdFx0KTtcblx0XHR9XG5cblx0XHRyZXR1cm4gcHJvdmlkZXJDb250YWluZXI7XG5cblx0XHRmdW5jdGlvbiBkcmF3UHJvdmlkZXIoY291bnRyeU5hbWUgPSBcIkF1c3RyYWxpYVwiKSB7XG5cdFx0XHQvLyBDaGFuZ2UgdGV4dCBvZiBidG4gdG8gY291bnRyeU5hbWVcblx0XHRcdGNvdW50cnlCdG4udGV4dENvbnRlbnQgPSBjb3VudHJ5TmFtZTtcblxuXHRcdFx0Ly8gQWRkIGFycm93cyBhbmQgZmxhZ3MgaW50byBidG4gYWZ0ZXIgZXZlcnkgc2VsZWN0aW9uLlxuXHRcdFx0dHJ5IHtcblx0XHRcdFx0Y29uc3QgZmxhZyA9IHJlbmRlckVsZW1lbnQoXCJpbWdcIiwgXCJjb3VudHJ5LWZsYWdcIik7XG5cdFx0XHRcdGZsYWcuc2V0QXR0cmlidXRlKFwiY3Jvc3NvcmlnaW5cIiwgXCJhbm9ueW1vdXNcIik7XG5cdFx0XHRcdGZsYWcuc3JjID0gYGh0dHBzOi8vY291bnRyeWZsYWdzYXBpLmNvbS9wbmcvJHtjb3VudHJ5TmFtZX1gO1xuXHRcdFx0XHRmbGFnLmFsdCA9IGAke2NvdW50cnlOYW1lfSBmbGFnYDtcblx0XHRcdFx0ZmxhZy5jbGFzc0xpc3QuYWRkKFwiYnRuLWNvdW50cnktZmxhZ1wiKTtcblx0XHRcdFx0Y291bnRyeUJ0bi5hcHBlbmRDaGlsZChmbGFnKTtcblx0XHRcdH0gY2F0Y2ggKGVycikge1xuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xuXHRcdFx0fVxuXHRcdFx0Y29uc3QgZG93bkFycm93ID0gcmVuZGVyRWxlbWVudChcImlcIiwgXCJmYXNcIik7XG5cdFx0XHRkb3duQXJyb3cuY2xhc3NMaXN0LmFkZChcImZhLWFuZ2xlLWRvd25cIik7XG5cdFx0XHRjb3VudHJ5QnRuLmFwcGVuZENoaWxkKGRvd25BcnJvdyk7XG5cblx0XHRcdGNvbnN0IHN0cmVhbUluZm8gPSBwcm92aWRlcnNbY291bnRyeU5hbWVdLnN0cmVhbTtcblx0XHRcdGNvbnN0IGJ1eUluZm8gPSBwcm92aWRlcnNbY291bnRyeU5hbWVdLmJ1eTtcblx0XHRcdGNvbnN0IHJlbnRJbmZvID0gcHJvdmlkZXJzW2NvdW50cnlOYW1lXS5yZW50O1xuXG5cdFx0XHRjb25zdCBzZXJ2aWNlTmFtZXMgPSBbXCJTdHJlYW0gYXQ6XCIsIFwiUHVyY2hhc2UgYXQ6XCIsIFwiUmVudCBhdDpcIl07XG5cdFx0XHQvLyBUbyBhc3NpZ24gbmFtZXMgZm9yIGVhY2ggc2V2aWNlIHByb3ZpZGVycy5cblx0XHRcdC8vIFRoaXMgaW5jcmVtZW50cyBhcyBwcm92aWRlcnMgYXJlIGxpc3RlZCBmb3IgZWFjaCBzZXJ2aWNlLlxuXHRcdFx0bGV0IGlkeCA9IDA7XG5cblx0XHRcdFtzdHJlYW1JbmZvLCBidXlJbmZvLCByZW50SW5mb10uZm9yRWFjaCgoaW5mbykgPT4ge1xuXHRcdFx0XHRjb25zdCBzZXJ2aWNlQ29udGFpbmVyID0gcmVuZGVyRWxlbWVudChcImRpdlwiLCBcInNlcnZpY2UtY29udGFpbmVyXCIpO1xuXHRcdFx0XHRjb25zdCBzZXJ2aWNlTmFtZSA9IHJlbmRlckVsZW1lbnQoXCJkaXZcIiwgXCJzZXJ2aWNlLW5hbWVcIik7XG5cdFx0XHRcdGNvbnN0IHNlcnZpY2VOYW1lQm9sZCA9IHJlbmRlckVsZW1lbnQoXCJoMlwiLCBcInNlcnZpY2UtbmFtZS1ib2xkXCIpO1xuXHRcdFx0XHRjb25zdCBwcm92aWRlclNlcnZpY2VDb250YWluZXIgPSByZW5kZXJFbGVtZW50KFxuXHRcdFx0XHRcdFwiZGl2XCIsXG5cdFx0XHRcdFx0XCJwcm92aWRlci1zZXJ2aWNlLWNvbnRhaW5lclwiXG5cdFx0XHRcdCk7XG5cblx0XHRcdFx0aW5mby5mb3JFYWNoKChwcm92aWRlcikgPT4ge1xuXHRcdFx0XHRcdGNvbnN0IHByb3ZpZGVyU2VydmljZSA9IHJlbmRlckVsZW1lbnQoXCJkaXZcIiwgXCJwcm92aWRlci1zZXJ2aWNlXCIpO1xuXHRcdFx0XHRcdC8vIEFkZCBpbWcgYW5kIG5hbWUgb2YgcHJvdmlkZXIuXG5cdFx0XHRcdFx0Y29uc3QgcHJvdmlkZXJJbWcgPSByZW5kZXJFbGVtZW50KFwiaW1nXCIsIFwicHJvdmlkZXItaW1nXCIpO1xuXHRcdFx0XHRcdGNvbnN0IHByb3ZpZGVyTmFtZSA9IHJlbmRlckVsZW1lbnQoXCJzcGFuXCIsIFwicHJvdmlkZXItbmFtZVwiKTtcblxuXHRcdFx0XHRcdGlmIChwcm92aWRlci5wcm92aWRlcl9sb2dvX3BhdGgpIHtcblx0XHRcdFx0XHRcdHByb3ZpZGVySW1nLnNyYyA9IGBodHRwczovL2ltYWdlLnRtZGIub3JnL3QvcC9vcmlnaW5hbC8ke3Byb3ZpZGVyLnByb3ZpZGVyX2xvZ29fcGF0aH1gO1xuXHRcdFx0XHRcdFx0cHJvdmlkZXJJbWcuYWx0ID0gYCR7cHJvdmlkZXIucHJvdmlkZXJfbmFtZX0gcGljdHVyZS5gO1xuXHRcdFx0XHRcdFx0cHJvdmlkZXJJbWcuc2V0QXR0cmlidXRlKFwibG9hZGluZ1wiLCBcImxhenlcIik7XG5cdFx0XHRcdFx0XHRwcm92aWRlck5hbWUudGV4dENvbnRlbnQgPSBwcm92aWRlci5wcm92aWRlcl9uYW1lO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFtwcm92aWRlckltZywgcHJvdmlkZXJOYW1lXS5mb3JFYWNoKChlbGVtKSA9PiB7XG5cdFx0XHRcdFx0XHRwcm92aWRlclNlcnZpY2UuYXBwZW5kQ2hpbGQoZWxlbSk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0cHJvdmlkZXJTZXJ2aWNlQ29udGFpbmVyLmFwcGVuZENoaWxkKHByb3ZpZGVyU2VydmljZSk7XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdGlmIChpbmZvLmxlbmd0aCkge1xuXHRcdFx0XHRcdHNlcnZpY2VOYW1lQm9sZC50ZXh0Q29udGVudCA9IGAke3NlcnZpY2VOYW1lc1tpZHhdfWA7XG5cdFx0XHRcdFx0c2VydmljZU5hbWUuYXBwZW5kQ2hpbGQoc2VydmljZU5hbWVCb2xkKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZHgrKztcblx0XHRcdFx0c2VydmljZUNvbnRhaW5lci5hcHBlbmRDaGlsZChzZXJ2aWNlTmFtZSk7XG5cdFx0XHRcdHNlcnZpY2VDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvdmlkZXJTZXJ2aWNlQ29udGFpbmVyKTtcblx0XHRcdFx0aG91c2VDb250YWluZXIuYXBwZW5kQ2hpbGQoc2VydmljZUNvbnRhaW5lcik7XG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0ZnVuY3Rpb24gY2xlYXJQcm92aWRlcigpIHtcblx0XHRcdGhvdXNlQ29udGFpbmVyLmlubmVySFRNTCA9IFwiXCI7XG5cdFx0fVxuXHR9O1xuXG5cdGNvbnN0IGRyYXdSZXZpZXdzID0gKCkgPT4ge1xuXHRcdGlmICghcmV2aWV3cykgcmV0dXJuO1xuXHRcdGNvbnN0IHJldmlld0NvbnRhaW5lciA9IHJlbmRlckVsZW1lbnQoXCJkaXZcIiwgXCJyZXZpZXctY29udGFpbmVyXCIpO1xuXHRcdGNvbnN0IHRpdGxlID0gcmVuZGVyRWxlbWVudChcImgyXCIsIFwicmV2aWV3LXRpdGxlXCIpO1xuXHRcdHRpdGxlLnRleHRDb250ZW50ID0gXCJSZXZpZXdzOlwiO1xuXHRcdHJldmlld0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0aXRsZSk7XG5cblx0XHRyZXZpZXdzLmZvckVhY2goKHJldmlldykgPT4gZHJhd1JldmlldyhyZXZpZXcsIHJldmlld0NvbnRhaW5lcikpO1xuXHRcdHJldHVybiByZXZpZXdDb250YWluZXI7XG5cdH07XG5cblx0Y29uc3QgZHJhd1JldmlldyA9IChyZXZpZXcsIGNvbnRhaW5lcikgPT4ge1xuXHRcdGNvbnN0IHJlbmRlclJldmlld0hlYWRpbmcgPSAoKSA9PiB7XG5cdFx0XHRjb25zdCByZXZpZXdIZWFkaW5nID0gcmVuZGVyRWxlbWVudChcImRpdlwiLCBcInJldmlldy1oZWFkaW5nXCIpO1xuXHRcdFx0Ly8gUmVuZGVyIGF1dGhvcidzIHByb2ZpbGUgcGljIGlmIGFueS5cblx0XHRcdGlmIChyZXZpZXcucGljX3BhdGgpIHtcblx0XHRcdFx0Y29uc3QgYXV0aG9yUGljID0gcmVuZGVyRWxlbWVudChcImltZ1wiLCBcImF1dGhvci1waWNcIik7XG5cdFx0XHRcdGlmIChyZXZpZXcucGljX3BhdGguc2xpY2UoMSwgNSkgIT09IFwiaHR0cFwiKSB7XG5cdFx0XHRcdFx0YXV0aG9yUGljLnNyYyA9IGBodHRwczovL2ltYWdlLnRtZGIub3JnL3QvcC93MzAwLyR7cmV2aWV3LnBpY19wYXRofWA7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0YXV0aG9yUGljLnNyYyA9IHJldmlldy5waWNfcGF0aC5zbGljZSgxKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGF1dGhvclBpYy5hbHQgPSBgJHtyZXZpZXcuYXV0aG9yfSBwcm9maWxlIHBpY3R1cmUuYDtcblx0XHRcdFx0cmV2aWV3SGVhZGluZy5hcHBlbmRDaGlsZChhdXRob3JQaWMpO1xuXHRcdFx0fVxuXG5cdFx0XHRhZGRSZXZJbmZvKHJldmlldy5hdXRob3IsIHJldmlld0hlYWRpbmcsIFwiaDNcIiwgXCJyZXZpZXctYXV0aG9yXCIpO1xuXG5cdFx0XHRhZGRSZXZJbmZvKHJldmlldy5yYXRpbmcsIHJldmlld0hlYWRpbmcsIFwic3BhblwiLCBcInJldmlldy1yYXRpbmdcIik7XG5cblx0XHRcdHJldHVybiByZXZpZXdIZWFkaW5nO1xuXHRcdH07XG5cblx0XHRjb25zdCByZW5kZXJSZXZpZXdCb2R5ID0gKCkgPT4ge1xuXHRcdFx0Y29uc3QgcmV2aWV3Q29udGVudCA9IHJlbmRlckVsZW1lbnQoXCJwXCIsIFwicmV2aWV3LWNvbnRlbnRcIik7XG5cdFx0XHRyZXZpZXdDb250ZW50LnRleHRDb250ZW50ID0gYFwiJHtyZXZpZXcuY29udGVudH1cImA7XG5cdFx0XHRyZXR1cm4gcmV2aWV3Q29udGVudDtcblx0XHR9O1xuXG5cdFx0Y29uc3QgcmVuZGVyUmV2aWV3Rm9vdGVyID0gKCkgPT4ge1xuXHRcdFx0Y29uc3QgcmV2aWV3Rm9vdGVyID0gcmVuZGVyRWxlbWVudChcImRpdlwiLCBcInJldmlldy1mb290ZXJcIik7XG5cdFx0XHRjb25zdCByZXZpZXdVcmwgPSByZW5kZXJFbGVtZW50KFwiYVwiLCBcInJldmlldy1saW5rXCIpO1xuXHRcdFx0Y29uc3QgcmV2aWV3VXBkYXRlZCA9IHJlbmRlckVsZW1lbnQoXCJzcGFuXCIsIFwicmV2aWV3LXVwZGF0ZWRcIik7XG5cblx0XHRcdHJldmlld1VybC5zZXRBdHRyaWJ1dGUoXCJocmVmXCIsIGAke3Jldmlldy51cmx9YCk7XG5cdFx0XHRyZXZpZXdVcmwuc2V0QXR0cmlidXRlKFwidGFyZ2V0XCIsIFwiX2JsYW5rXCIpO1xuXHRcdFx0cmV2aWV3VXJsLnRleHRDb250ZW50ID0gXCJDbGljayBmb3IgcmV2aWV3IGxpbmtcIjtcblxuXHRcdFx0cmV2aWV3VXBkYXRlZC50ZXh0Q29udGVudCA9IGBMYXN0IHVwZGF0ZWQ6ICR7Zm9ybWF0UmV2RGF0ZShcblx0XHRcdFx0cmV2aWV3Lmxhc3RfdXBkYXRlZFxuXHRcdFx0KX1gO1xuXG5cdFx0XHRyZXZpZXdGb290ZXIuYXBwZW5kQ2hpbGQocmV2aWV3VXJsKTtcblx0XHRcdHJldmlld0Zvb3Rlci5hcHBlbmRDaGlsZChyZXZpZXdVcGRhdGVkKTtcblxuXHRcdFx0cmV0dXJuIHJldmlld0Zvb3Rlcjtcblx0XHRcdGZ1bmN0aW9uIGZvcm1hdFJldkRhdGUoZGF0ZSkge1xuXHRcdFx0XHRkYXRlID0gZGF0ZS5zcGxpdChcIi1cIik7XG5cdFx0XHRcdGRhdGVbMl0gPSBkYXRlWzJdLnNsaWNlKDAsIDIpICsgXCIvXCI7XG5cdFx0XHRcdHJldHVybiBkYXRlWzJdLmNvbmNhdChkYXRlLnNsaWNlKDAsIDIpLnJldmVyc2UoKS5qb2luKFwiL1wiKSk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdGNvbnRhaW5lci5hcHBlbmRDaGlsZChyZW5kZXJSZXZpZXdIZWFkaW5nKCkpO1xuXHRcdGNvbnRhaW5lci5hcHBlbmRDaGlsZChyZW5kZXJSZXZpZXdCb2R5KCkpO1xuXHRcdGNvbnRhaW5lci5hcHBlbmRDaGlsZChyZW5kZXJSZXZpZXdGb290ZXIoKSk7XG5cblx0XHQvLyBIZWxwZXIgZm5jIHRoYXQgY29sbGVjdHMgY29ycmVzcG9uZGluZyBpbmZvIGFuZFxuXHRcdC8vIGNyZWF0ZXMgYSBzcGFuL2RpdiBjb250YWluZXIgaWYgaW5mbyBleGlzdHMuIE90aGVyd2lzZSwgcmV0dXJuO1xuXHRcdGZ1bmN0aW9uIGFkZFJldkluZm8oaW5mbywgY29udGFpbmVyLCB0YWcsIGNsYXNzTmFtZSkge1xuXHRcdFx0Y29uc3QgaW5mb0NvbnRhaW5lciA9IHJlbmRlckVsZW1lbnQodGFnLCBjbGFzc05hbWUpO1xuXHRcdFx0aWYgKGluZm8pIHtcblx0XHRcdFx0aW5mb0NvbnRhaW5lci50ZXh0Q29udGVudCA9IGluZm87XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldmlld3Mgb3V0IG9mIDEwXG5cdFx0XHRpZiAoaW5mbyA9PT0gcmV2aWV3LnJhdGluZykge1xuXHRcdFx0XHRpbmZvQ29udGFpbmVyLnRleHRDb250ZW50ID0gcmV2aWV3LnJhdGluZyA/IGAke2luZm99LzEwYCA6IFwiUmF0aW5nIG5vdCBwcm92aWRlZC4uXCI7XG5cdFx0XHR9XG5cdFx0XHRjb250YWluZXIuYXBwZW5kQ2hpbGQoaW5mb0NvbnRhaW5lcik7XG5cdFx0fVxuXHR9O1xuXG5cdGNvbnN0IGRyYXdUcmFpbGVyID0gKCkgPT4ge1xuXHRcdGNvbnN0IHRyYWlsZXJDb250YWluZXIgPSByZW5kZXJFbGVtZW50KFwiZGl2XCIsIFwidHJhaWxlci1jb250YWluZXJcIik7XG5cdFx0Y29uc3QgdHJhaWxlckhlYWRpbmcgPSByZW5kZXJFbGVtZW50KFwiZGl2XCIsIFwidHJhaWxlci1oZWFkaW5nXCIpO1xuXG5cdFx0aWYgKHRyYWlsZXIpIHtcblx0XHRcdHJlbmRlclRyYWlsZXJIZWFkaW5nKCkuZm9yRWFjaCgoZWxlbSkgPT5cblx0XHRcdFx0dHJhaWxlckhlYWRpbmcuYXBwZW5kQ2hpbGQoZWxlbSlcblx0XHRcdCk7XG5cdFx0XHR0cmFpbGVyQ29udGFpbmVyLmFwcGVuZENoaWxkKHRyYWlsZXJIZWFkaW5nKTtcblx0XHRcdGNvbnN0IHZpZGVvV3JhcHBlciA9IHJlbmRlckVsZW1lbnQoXCJkaXZcIiwgXCJ2aWRlby13cmFwcGVyXCIpO1xuXHRcdFx0dmlkZW9XcmFwcGVyLmFwcGVuZENoaWxkKGFkZFZpZGVvKHRyYWlsZXIua2V5LCB0cmFpbGVyLnNpdGUpKTtcblx0XHRcdHRyYWlsZXJDb250YWluZXIuYXBwZW5kQ2hpbGQodmlkZW9XcmFwcGVyKTtcblx0XHR9XG5cdFx0cmV0dXJuIHRyYWlsZXJDb250YWluZXI7XG5cblx0XHRmdW5jdGlvbiByZW5kZXJUcmFpbGVySGVhZGluZygpIHtcblx0XHRcdGNvbnN0IHRyYWlsZXJOYW1lID0gcmVuZGVyRWxlbWVudChcImgyXCIsIFwidHJhaWxlci1uYW1lXCIpO1xuXHRcdFx0Y29uc3QgdHJhaWxlckxhbmd1YWdlID0gcmVuZGVyRWxlbWVudChcImgzXCIsIFwidHJhaWxlci1sYW5nXCIpO1xuXHRcdFx0dHJhaWxlck5hbWUudGV4dENvbnRlbnQgPSBgJHt0cmFpbGVyLnROYW1lfWA7XG5cdFx0XHR0cmFpbGVyTGFuZ3VhZ2UudGV4dENvbnRlbnQgPSBgTGFuZ3VhZ2U6ICR7dHJhaWxlci5sYW5nfWA7XG5cblx0XHRcdHJldHVybiBbdHJhaWxlck5hbWUsIHRyYWlsZXJMYW5ndWFnZV07XG5cdFx0fVxuXG5cdFx0ZnVuY3Rpb24gYWRkVmlkZW8oa2V5LCBzaXRlKSB7XG5cdFx0XHRjb25zdCBmcmFtZSA9IHJlbmRlckVsZW1lbnQoXCJpZnJhbWVcIiwgXCJ0cmFpbGVyLXZpZGVvXCIpO1xuXHRcdFx0Y29uc3QgYXR0cmlidXRlcyA9IHtcblx0XHRcdFx0bG9hZGluZzogXCJsYXp5XCIsXG5cdFx0XHRcdHdpZHRoOiBcIjU2MFwiLFxuXHRcdFx0XHRoZWlnaHQ6IFwiMzE1XCIsXG5cdFx0XHRcdHNyYzogYGh0dHBzOi8veW91dHViZS5jb20vZW1iZWQvJHtrZXl9YCxcblx0XHRcdFx0dGl0bGU6IGAke3NpdGV9IHZpZGVvIHBsYXllcmAsXG5cdFx0XHRcdGZyYW1lYm9yZGVyOiBcIjBcIixcblx0XHRcdFx0YWxsb3c6XG5cdFx0XHRcdFx0XCJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQgbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlOyB3ZWItc2hhcmVcIixcblx0XHRcdH07XG5cdFx0XHRmb3IgKGxldCBhdHRyIGluIGF0dHJpYnV0ZXMpIHtcblx0XHRcdFx0ZnJhbWUuc2V0QXR0cmlidXRlKGF0dHIsIGF0dHJpYnV0ZXNbYXR0cl0pO1xuXHRcdFx0XHRmcmFtZS5zZXRBdHRyaWJ1dGUoXCJhbGxvd2Z1bGxzY3JlZW5cIiwgdHJ1ZSk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZnJhbWU7XG5cdFx0fVxuXHR9O1xuXHRjb25zdCBkcmF3UmVjcyA9ICgpID0+IHtcblx0XHRjb25zdCByZWNzQ29udGFpbmVyID0gcmVuZGVyRWxlbWVudChcImRpdlwiLCBcInJlY3MtY29udGFpbmVyXCIpO1xuXHRcdGlmIChPYmplY3Qua2V5cyhyZWNzKS5sZW5ndGggPT09IDApIHtcblx0XHRcdGNvbnN0IG5vbmVNc2cgPSByZW5kZXJFbGVtZW50KFwiaDRcIiwgXCJuby1yZXZpZXctbXNnXCIpO1xuXHRcdFx0bm9uZU1zZy50ZXh0Q29udGVudCA9IFwiTm8gcmVjb21tZW5kYXRpb25zIGZvdW5kLlwiO1xuXHRcdFx0cmVjc0NvbnRhaW5lci5hcHBlbmRDaGlsZChub25lTXNnKTtcblx0XHRcdHJlY3NDb250YWluZXIuc3R5bGUgPSBcImRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyO1wiXG5cdFx0XHRyZXR1cm4gcmVjc0NvbnRhaW5lcjtcblx0XHR9XG5cdFx0Zm9yIChsZXQgcmVjIGluIHJlY3MpIHtcblx0XHRcdHJlY3NDb250YWluZXIuYXBwZW5kQ2hpbGQoZHJhd1JlYyhyZWNzW3JlY10pKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlY3NDb250YWluZXI7XG5cdH07XG5cblx0Y29uc3QgZHJhd1JlYyA9IChyZWMpID0+IHtcblx0XHRjb25zdCByZWNDb250YWluZXIgPSByZW5kZXJFbGVtZW50KFwiZGl2XCIsIFwicmVjLWNvbnRhaW5lclwiKTtcblx0XHRjb25zdCByZWNQb3N0ZXIgPSByZW5kZXJFbGVtZW50KFwiaW1nXCIsIFwicmVjLXBvc3RlclwiKTtcblx0XHRjb25zdCBpbmZvID0gcmVuZGVyRWxlbWVudChcImRpdlwiLCBcInJlYy1pbmZvXCIpO1xuXG5cdFx0cmVjUG9zdGVyLnNyYyA9IGBodHRwczovL2ltYWdlLnRtZGIub3JnL3QvcC93MzAwLyR7cmVjLnBvc3Rlcl9wYXRofWA7XG5cblx0XHRyZWNDb250YWluZXIuYXBwZW5kQ2hpbGQocmVjUG9zdGVyKTtcblx0XHRyZW5kZXJJbmZvKHJlYykuZm9yRWFjaCgoc3ViSW5mbykgPT4gaW5mby5hcHBlbmRDaGlsZChzdWJJbmZvKSk7XG5cblx0XHRjb25zdCByZWNMaW5rID0gcmVuZGVyRWxlbWVudChcImFcIiwgXCJyZWMtbGlua1wiKTtcblx0XHRjb25zdCBtZWRpYVR5cGUgPSByZWMudE5hbWUgPyBcIlRWIFNob3dcIiA6IFwiTW92aWVcIjtcblx0XHRyZWNMaW5rLnRleHRDb250ZW50ID0gYFNlYXJjaCBmb3IgdGhpcyAke21lZGlhVHlwZX0gLT4gYDtcblx0XHRyZWNMaW5rLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBhc3luYyAoZSkgPT4ge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0cGFnZS5jbGVhclNlY3Rpb25zKCk7XG5cdFx0XHRyZWMudE5hbWVcblx0XHRcdFx0PyBhd2FpdCBwYWdlLmRyYXdTZWN0aW9ucyhyZWMudE5hbWUpXG5cdFx0XHRcdDogYXdhaXQgcGFnZS5kcmF3U2VjdGlvbnMocmVjLm1OYW1lKTtcblx0XHR9KTtcblxuXHRcdGluZm8uYXBwZW5kQ2hpbGQocmVjTGluayk7XG5cdFx0cmVjQ29udGFpbmVyLmFwcGVuZENoaWxkKGluZm8pO1xuXHRcdHJldHVybiByZWNDb250YWluZXI7XG5cblx0XHRmdW5jdGlvbiByZW5kZXJJbmZvKHN1YkluZm8pIHtcblx0XHRcdGlmIChzdWJJbmZvKSB7XG5cdFx0XHRcdC8vIElmIGluZm8gZXhpc3RzLlxuXHRcdFx0XHRjb25zdCByZWNOYW1lID0gcmVuZGVyRWxlbWVudChcInBcIiwgXCJyZWMtbmFtZVwiKTtcblx0XHRcdFx0Y29uc3QgcmVjRGF0ZSA9IHJlbmRlckVsZW1lbnQoXCJwXCIsIFwicmVjLWRhdGVcIik7XG5cdFx0XHRcdGNvbnN0IHZvdGVDb3VudCA9IHJlbmRlckVsZW1lbnQoXCJwXCIsIFwicmVjLXZvdGUtY291bnRcIik7XG5cdFx0XHRcdGNvbnN0IHZvdGVBdmcgPSByZW5kZXJFbGVtZW50KFwicFwiLCBcInJlYy12b3RlLWF2Z1wiKTtcblxuXHRcdFx0XHRyZWNOYW1lLnRleHRDb250ZW50ID0gc3ViSW5mby50TmFtZVxuXHRcdFx0XHRcdD8gYE5hbWU6ICR7c3ViSW5mby50TmFtZX1gXG5cdFx0XHRcdFx0OiBgTmFtZTogJHtzdWJJbmZvLm1OYW1lfWA7XG5cdFx0XHRcdHJlY0RhdGUudGV4dENvbnRlbnQgPSBzdWJJbmZvLmZpcnN0X2Fpcl9kYXRlXG5cdFx0XHRcdFx0PyBgRmlyc3QgQWlyIERhdGU6ICR7c3ViSW5mby5maXJzdF9haXJfZGF0ZX1gXG5cdFx0XHRcdFx0OiBgUmVsZWFzZSBEYXRlOiAke3N1YkluZm8ucmVsZWFzZV9kYXRlfWA7XG5cdFx0XHRcdHZvdGVDb3VudC50ZXh0Q29udGVudCA9IGBWb3RlIENvdW50OiAke3N1YkluZm8udm90ZV9jb3VudH1gO1xuXHRcdFx0XHR2b3RlQXZnLnRleHRDb250ZW50ID0gYFZvdGUgQXZnOiAke3N1YkluZm8udm90ZV9hdmVyYWdlfWA7XG5cblx0XHRcdFx0cmV0dXJuIFtyZWNOYW1lLCByZWNEYXRlLCB2b3RlQ291bnQsIHZvdGVBdmddO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblxuXHRmdW5jdGlvbiByZW5kZXJDb3VudHJpZXNNb2RhbChjdXJyQ291bnRyeU5hbWUpIHtcblx0XHQvLyBDb3VudHJ5IG5hbWVzXG5cdFx0Y29uc3QgcHJvdmlkZXJDb3VudHJpZXMgPSBPYmplY3Qua2V5cyhwcm92aWRlcnMpO1xuXHRcdC8vIFNvcnQgYnkgY291bnRyeSBuYW1lIGFuZCBjb2RlcyBpbnRvIGFuIG9iai5cblx0XHRsZXQgY291bnRyaWVzID0ge307XG5cdFx0bGV0IGN1cnJDb3VudHJ5Q29kZTtcblx0XHRwcm92aWRlckNvdW50cmllcy5mb3JFYWNoKChjb3VudHJ5KSA9PiB7XG5cdFx0XHRjb3VudHJpZXNbY291bnRyeV0gPSBwcm92aWRlcnNbY291bnRyeV0uY291bnRyeUNvZGU7XG5cblx0XHRcdC8vIEZpbmQgY3VycmVudCBjb3VudHJ5IGNvZGUuXG5cdFx0XHRpZiAoY3VyckNvdW50cnlOYW1lID09PSBjb3VudHJ5KSB7XG5cdFx0XHRcdGN1cnJDb3VudHJ5Q29kZSA9IHByb3ZpZGVyc1tjb3VudHJ5XS5jb3VudHJ5Q29kZTtcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdGNvbnN0IG1vZGFsQ29udGFpbmVyID0gcmVuZGVyRWxlbWVudChcImZvcm1cIiwgXCJtb2RhbC1jb3VudHJ5LWNvbnRhaW5lclwiKTtcblx0XHRjb25zdCBtb2RhbEhlYWRlciA9IHJlbmRlckVsZW1lbnQoXCJkaXZcIiwgXCJtb2RhbC1oZWFkZXJcIik7XG5cblx0XHRjb25zdCBtb2RhbEJvZHkgPSByZW5kZXJFbGVtZW50KFwiZGl2XCIsIFwibW9kYWwtYm9keVwiKTtcblx0XHRjb25zdCBtb2RhbEN1cnJlbnRDb3VudHJ5ID0gcmVuZGVyRWxlbWVudChcImRpdlwiLCBcIm1vZGFsLWN1cnJlbnQtY291bnRyeVwiKTtcblx0XHRjb25zdCBtb2RhbElucHV0U2VhcmNoID0gcmVuZGVyRWxlbWVudChcImlucHV0XCIsIFwibW9kYWwtaW5wdXQtc2VhcmNoXCIpO1xuXHRcdGNvbnN0IG1vZGFsTGlzdENvdW50cmllcyA9IHJlbmRlckVsZW1lbnQoXCJ1bFwiLCBcIm1vZGFsLWxpc3QtY291bnRyaWVzXCIpO1xuXG5cdFx0Y29uc3QgbW9kYWxDbG9zZUJ0biA9IHJlbmRlckVsZW1lbnQoXCJidXR0b25cIiwgXCJtb2RhbC1jbG9zZS1idG5cIik7XG5cblx0XHRjb25zdCByZW5kZXJIZWFkaW5nID0gKCkgPT4ge1xuXHRcdFx0Ly8gSGVhZGluZyB0aGF0IGRpc3BsYXlzIGN1cnJlbnQgY291bnRyeSBzZWxlY3RlZC5cblx0XHRcdGNvbnN0IGhlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDJcIik7XG5cdFx0XHRoZWFkaW5nLnRleHRDb250ZW50ID0gXCJDb3VudHJpZXNcIjtcblxuXHRcdFx0Y29uc3QgY3VyckNvdW50cnkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG5cdFx0XHRjb25zdCBzZWFyY2hMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcblxuXHRcdFx0Y29uc3Qgc2VhcmNoQXR0cmlidXRlcyA9IHtcblx0XHRcdFx0aWQ6IFwibW9kYWwtaW5wdXQtc2VhcmNoXCIsXG5cdFx0XHRcdHR5cGU6IFwic2VhcmNoXCIsXG5cdFx0XHRcdHBsYWNlaG9sZGVyOiBcIvCflI0gU2VhcmNoIGZvciBjb3VudHJpZXMuLi5cIixcblx0XHRcdFx0dGl0bGU6IFwiVHlwZSBpbiBhIGNvdW50cnkgbmFtZVwiLFxuXHRcdFx0XHRyb2xlOiBcInNlYXJjaFwiLFxuXHRcdFx0fTtcblxuXHRcdFx0Zm9yIChsZXQgaSBpbiBzZWFyY2hBdHRyaWJ1dGVzKSB7XG5cdFx0XHRcdG1vZGFsSW5wdXRTZWFyY2guc2V0QXR0cmlidXRlKGksIHNlYXJjaEF0dHJpYnV0ZXNbaV0pO1xuXHRcdFx0fVxuXHRcdFx0bW9kYWxJbnB1dFNlYXJjaC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgZmlsdGVyUmVzdWx0cyk7XG5cdFx0XHRtb2RhbElucHV0U2VhcmNoLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0fSk7XG5cblx0XHRcdC8vIEZpbmQgY3VycmVudCBjb3VudHJ5IG5hbWUgYW5kIGNvZGUuXG5cdFx0XHRjb25zdCBjdXJyQ291bnRyeUZsYWcgPSByZW5kZXJDb3VudHJ5RmxhZyhcblx0XHRcdFx0Y3VyckNvdW50cnlDb2RlLFxuXHRcdFx0XHRjdXJyQ291bnRyeU5hbWVcblx0XHRcdCk7XG5cdFx0XHRjdXJyQ291bnRyeS50ZXh0Q29udGVudCA9IGN1cnJDb3VudHJ5TmFtZTtcblxuXHRcdFx0bW9kYWxDdXJyZW50Q291bnRyeS5hcHBlbmRDaGlsZChjdXJyQ291bnRyeUZsYWcpO1xuXHRcdFx0bW9kYWxDdXJyZW50Q291bnRyeS5hcHBlbmRDaGlsZChjdXJyQ291bnRyeSk7XG5cblx0XHRcdHNlYXJjaExhYmVsLmh0bWxGb3IgPSBgJHttb2RhbElucHV0U2VhcmNoLmlkfWA7XG5cblx0XHRcdFtoZWFkaW5nLCBtb2RhbEN1cnJlbnRDb3VudHJ5LCBzZWFyY2hMYWJlbCwgbW9kYWxJbnB1dFNlYXJjaF0uZm9yRWFjaChcblx0XHRcdFx0KGZvcm1FbGVtKSA9PiB7XG5cdFx0XHRcdFx0bW9kYWxIZWFkZXIuYXBwZW5kQ2hpbGQoZm9ybUVsZW0pO1xuXHRcdFx0XHR9XG5cdFx0XHQpO1xuXHRcdH07XG5cblx0XHRjb25zdCByZW5kZXJCb2R5ID0gKCkgPT4ge1xuXHRcdFx0bW9kYWxMaXN0Q291bnRyaWVzLmlkID0gXCJjb3VudHJpZXMtbGlzdFwiO1xuXHRcdFx0Zm9yIChsZXQgY291bnRyeSBpbiBjb3VudHJpZXMpIHtcblx0XHRcdFx0bGV0IGNvdW50cnlDb2RlID0gY291bnRyaWVzW2NvdW50cnldO1xuXG5cdFx0XHRcdGNvbnN0IGNvdW50cnlDb250YWluZXIgPSByZW5kZXJFbGVtZW50KFwibGlcIiwgXCJjb3VudHJ5LWNvbnRhaW5lclwiKTtcblx0XHRcdFx0Y29uc3QgY291bnRyeUZsYWcgPSByZW5kZXJDb3VudHJ5RmxhZyhjb3VudHJ5Q29kZSwgY291bnRyeSk7XG5cdFx0XHRcdGNvbnN0IGNvdW50cnlOYW1lID0gcmVuZGVyRWxlbWVudChcImFcIiwgXCJjb3VudHJ5LW5hbWVcIik7XG5cblx0XHRcdFx0Y291bnRyeU5hbWUudGV4dENvbnRlbnQgPSBjb3VudHJ5O1xuXHRcdFx0XHRjb3VudHJ5TmFtZS5zZXRBdHRyaWJ1dGUoXCJocmVmXCIsIFwiI1wiKTtcblxuXHRcdFx0XHRbY291bnRyeUZsYWcsIGNvdW50cnlOYW1lXS5mb3JFYWNoKChjb3VudHJ5RWxlbSkgPT4ge1xuXHRcdFx0XHRcdGNvdW50cnlDb250YWluZXIuYXBwZW5kQ2hpbGQoY291bnRyeUVsZW0pO1xuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRtb2RhbExpc3RDb3VudHJpZXMuYXBwZW5kQ2hpbGQoY291bnRyeUNvbnRhaW5lcik7XG5cdFx0XHR9XG5cblx0XHRcdFttb2RhbExpc3RDb3VudHJpZXNdLmZvckVhY2goKGZvcm1FbGVtKSA9PiB7XG5cdFx0XHRcdG1vZGFsQm9keS5hcHBlbmRDaGlsZChmb3JtRWxlbSk7XG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0Y29uc3QgcmVuZGVyQ2xvc2VCdG4gPSAoY2xvc2VGbmMpID0+IHtcblx0XHRcdGNvbnN0IGNsb3NlU3ltYiA9IHJlbmRlckVsZW1lbnQoXCJpXCIsIFwiZmFcIik7XG5cdFx0XHRjbG9zZVN5bWIuY2xhc3NMaXN0LmFkZChcImZhLWNsb3NlXCIpO1xuXHRcdFx0bW9kYWxDbG9zZUJ0bi5hcHBlbmRDaGlsZChjbG9zZVN5bWIpO1xuXHRcdFx0Y2xvc2VGbmMoKTtcblx0XHR9O1xuXHRcdGNvbnN0IGFkZENsb3NlRm5jID0gKCkgPT4ge1xuXHRcdFx0bW9kYWxDbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRjb25zdCBjdXJyZW50Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWwtY291bnRyeS1jb250YWluZXJcIik7XG5cdFx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZmFjZS1tYXNrXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcblxuXHRcdFx0XHRzZXRUaW1lb3V0KHNldEludmlzaWJsZSwgMTAwKTtcblx0XHRcdFx0ZnVuY3Rpb24gc2V0SW52aXNpYmxlKCkge1xuXHRcdFx0XHRcdGN1cnJlbnRGb3JtLnN0eWxlLnRyYW5zZm9ybSA9IFwidHJhbnNsYXRlWSgtMTI1JSlcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRzZXRUaW1lb3V0KHJlbW92ZU1vZGFsLCA3NTApO1xuXHRcdFx0XHRmdW5jdGlvbiByZW1vdmVNb2RhbCgpIHtcblx0XHRcdFx0XHRjdXJyZW50Rm9ybS5zdHlsZS5vcGFjaXR5ID0gMDtcblx0XHRcdFx0XHRjdXJyZW50Rm9ybS5zdHlsZS52aXNpYmlsaXR5ID0gXCJoaWRkZW5cIjtcblx0XHRcdFx0XHRjdXJyZW50Rm9ybS5yZW1vdmUoKTtcblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBjdXJyZW50Rm9ybS5yZW1vdmUoKTtcblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHQvLyBSZW5kZXIgc2VjdGlvbnMgb2YgdGhlIGZvcm0uXG5cdFx0cmVuZGVySGVhZGluZygpO1xuXHRcdHJlbmRlckJvZHkoKTtcblx0XHRyZW5kZXJDbG9zZUJ0bihhZGRDbG9zZUZuYyk7XG5cblx0XHRbbW9kYWxIZWFkZXIsIG1vZGFsQm9keSwgbW9kYWxDbG9zZUJ0bl0uZm9yRWFjaCgobW9kYWxFbGVtKSA9PlxuXHRcdFx0bW9kYWxDb250YWluZXIuYXBwZW5kQ2hpbGQobW9kYWxFbGVtKVxuXHRcdCk7XG5cblx0XHRzZXRUaW1lb3V0KG1ha2VWaXNpYmxlLCAxMDApO1xuXHRcdGZ1bmN0aW9uIG1ha2VWaXNpYmxlKCkge1xuXHRcdFx0Ly8gU2V0IHN0eWxpbmcgdG8gdmlzaWJsZSBmb3IgYW5pbWF0aW9uIGZhZGUgaW4gZWZmZWN0LlxuXHRcdFx0bW9kYWxDb250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9IFwidmlzaWJsZVwiO1xuXHRcdFx0bW9kYWxDb250YWluZXIuc3R5bGUub3BhY2l0eSA9IDE7XG5cdFx0XHRtb2RhbENvbnRhaW5lci5zdHlsZS50cmFuc2Zvcm0gPSBcInRyYW5zbGF0ZVkoMCUpXCI7XG5cdFx0fVxuXG5cdFx0Y29uc3QgYm9keURvY3VtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIik7XG5cdFx0Ym9keURvY3VtZW50LmFwcGVuZChtb2RhbENvbnRhaW5lcik7XG5cdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mYWNlLW1hc2tcIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcblxuXHRcdGZ1bmN0aW9uIHJlbmRlckNvdW50cnlGbGFnKGNvdW50cnlDb2RlLCBjb3VudHJ5TmFtZSkge1xuXHRcdFx0Y29uc3QgZmxhZyA9IHJlbmRlckVsZW1lbnQoXCJpbWdcIiwgXCJjb3VudHJ5LWZsYWdcIik7XG5cdFx0XHRmbGFnLnNldEF0dHJpYnV0ZShcImNyb3Nzb3JpZ2luXCIsIFwiYW5vbnltb3VzXCIpO1xuXHRcdFx0ZmxhZy5zcmMgPSBgaHR0cHM6Ly9jb3VudHJ5ZmxhZ3NhcGkuY29tL3BuZy8ke2NvdW50cnlDb2RlfWA7XG5cdFx0XHRmbGFnLmFsdCA9IGAke2NvdW50cnlOYW1lfSBmbGFnYDtcblx0XHRcdHJldHVybiBmbGFnO1xuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIGZpbHRlclJlc3VsdHMoKSB7XG5cdFx0XHRsZXQgaW5wdXQsIGZpbHRlciwgdWwsIGxpLCBhLCBpLCB0eHRWYWx1ZTtcblx0XHRcdGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb2RhbC1pbnB1dC1zZWFyY2hcIik7XG5cdFx0XHRmaWx0ZXIgPSBpbnB1dC52YWx1ZS50b1VwcGVyQ2FzZSgpO1xuXHRcdFx0dWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvdW50cmllcy1saXN0XCIpO1xuXHRcdFx0bGkgPSB1bC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImxpXCIpO1xuXG5cdFx0XHQvLyBMb2dpYyB0aGF0IGZpbHRlcnMgdGhlIGNvdW50cmllcyBiYXNlZCBvbiBpbnB1dC5cblx0XHRcdGZvciAoaSA9IDA7IGkgPCBsaS5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRhID0gbGlbaV0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJhXCIpWzBdO1xuXHRcdFx0XHR0eHRWYWx1ZSA9IGEudGV4dENvbnRlbnQgfHwgYS5pbm5lclRleHQ7XG5cdFx0XHRcdGlmICh0eHRWYWx1ZS50b1VwcGVyQ2FzZSgpLmluZGV4T2YoZmlsdGVyKSA+IC0xKSB7XG5cdFx0XHRcdFx0bGlbaV0uc3R5bGUuZGlzcGxheSA9IFwiXCI7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0bGlbaV0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdGZ1bmN0aW9uIGhpZ2hsaWdodEN1cnJDb3VudHJ5KGNvdW50cnlOYW1lKSB7XG5cdFx0Ly8gSGlnaGxpZ2h0IHNlbGVjdGVkIGN1cnJlbnQgY291bnRyeSBpbiB0aGUgbGlzdCBvZiBjb3VudHJpZXMgd2hlblxuXHRcdC8vIG1vZGFsIGlzIG9wZW5lZC4gQWRkIGEgdGljayBpY29uIHNpbXVsdGFuZW91c2x5XG5cblx0XHRsZXQgdWwsIGxpLCBpLCBhLCB0eHRWYWx1ZTtcblx0XHR1bCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY291bnRyaWVzLWxpc3RcIik7XG5cdFx0bGkgPSB1bC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImxpXCIpO1xuXHRcdGZvciAoaSA9IDA7IGkgPCBsaS5sZW5ndGg7IGkrKykge1xuXHRcdFx0YSA9IGxpW2ldLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiYVwiKVswXTtcblx0XHRcdHR4dFZhbHVlID0gYS50ZXh0Q29udGVudCB8fCBhLmlubmVyVGV4dDtcblx0XHRcdGlmICh0eHRWYWx1ZSA9PT0gY291bnRyeU5hbWUpIHtcblx0XHRcdFx0bGlbaV0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2JhKDI1LCAxNTAsIDE1MCwgMC41KVwiO1xuXHRcdFx0XHRsaVtpXS5zdHlsZS50cmFuc2Zvcm0gPSBcInNjYWxlKDEuMDI1KVwiO1xuXHRcdFx0XHRjb25zdCB0aWNrSWNvbiA9IHJlbmRlckVsZW1lbnQoXCJpXCIsIFwiZmFcIik7XG5cdFx0XHRcdHRpY2tJY29uLmNsYXNzTGlzdC5hZGQoXCJmYS1jaGVja1wiKTtcblx0XHRcdFx0bGlbaV0uYXBwZW5kKHRpY2tJY29uKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0cmV0dXJuIHtcblx0XHRzZWN0aW9uLFxuXHRcdGFkZFRvU2VjdGlvbixcblx0XHRkcmF3QWxsLFxuXHRcdGRyYXdJbnRybyxcblx0XHRkcmF3U3ViSW5mb3MsXG5cdFx0ZHJhd1N1bW1hcnlIZWFkaW5nLFxuXHRcdGRyYXdTdW1tYXJ5LFxuXHRcdGRyYXdQcm92aWRlcnMsXG5cdFx0ZHJhd1Jldmlld3MsXG5cdFx0ZHJhd1RyYWlsZXIsXG5cdFx0ZHJhd1JlY3MsXG5cdH07XG59O1xuXG5leHBvcnQgeyBkcmF3U2VjdGlvbiB9O1xuIiwiaW1wb3J0IGNvbGxlY3RTZWFyY2hRdWVyeSBmcm9tIFwiLi9zZWFyY2hcIjtcbmltcG9ydCB7IGZldGNoSWRzIH0gZnJvbSBcIi4uL2FwaUZ1bmN0aW9ucy9mZXRjaElkXCI7XG5pbXBvcnQgKiBhcyBtb3ZpZSBmcm9tIFwiLi4vYXBpRnVuY3Rpb25zL2ZldGNoTW92aWVJbmZvXCI7XG5pbXBvcnQgeyBkcmF3U2VjdGlvbiB9IGZyb20gXCIuL2RyYXdTZWN0aW9uXCI7XG5cbmFzeW5jIGZ1bmN0aW9uIGRyYXdTZWN0aW9ucyh0aXRsZSkge1xuXHRjb25zdCBpZHMgPSBhd2FpdCBmZXRjaElkcyh0aXRsZSk7XG5cdGNvbnN0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1haW4tY29udGFpbmVyXCIpO1xuXHRzaG93TG9hZGVyKCk7XG5cblx0bGV0IHNlY3Rpb25zID0gW107XG5cblx0Ly8gTWFrZSBhbiBhcnIgdy8gZWxlbXMgb2YgW2lkLCBtZWRpYV1cblx0Zm9yIChsZXQgaWQgaW4gaWRzKSB7XG5cdFx0c2VjdGlvbnMucHVzaChbaWQsIGlkc1tpZF1dKTtcblx0fVxuXG5cdGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKChlbnRyaWVzKSA9PiB7XG5cdFx0ZW50cmllcy5mb3JFYWNoKChlbnRyeSkgPT4ge1xuXHRcdFx0aWYgKGVudHJ5LmlzSW50ZXJzZWN0aW5nKSB7XG5cdFx0XHRcdGVudHJ5LnRhcmdldC5jbGFzc0xpc3QuYWRkKFwic2hvd1wiKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHR9KTtcblx0fSk7XG5cdC8vIGRyYXcgYWxsIHNlY3Rpb25zXG5cdHNlY3Rpb25zLmZvckVhY2goYXN5bmMgKHNlY3Rpb24pID0+IHtcblx0XHRhd2FpdCByZW5kZXJTZWN0aW9uKHNlY3Rpb25bMF0sIHNlY3Rpb25bMV0pLnRoZW4oKCkgPT4gaGlkZUxvYWRlcigpKTtcblxuXHRcdC8vIEVuYWJsZSBhbmltYXRpb24gaWYgYW5pbWF0aW9uLWNoZWNrIGNoZWNrYm94IGlzIGNoZWNrZWQuXG5cdFx0Y29uc3QgYW5pbWF0aW9uQ2hlY2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNoZWNrLWFuaW1hdGlvblwiKTtcblx0XHRpZiAoYW5pbWF0aW9uQ2hlY2suY2hlY2tlZCkge1xuXHRcdFx0Y29uc3QgZWxlbWVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImRpdlwiKTtcblx0XHRcdFsuLi5lbGVtZW50c10uZm9yRWFjaCgoZWwpID0+IHtcblx0XHRcdFx0ZWwuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcblx0XHRcdFx0b2JzZXJ2ZXIub2JzZXJ2ZShlbCk7XG5cdFx0XHR9KTtcblx0XHR9XG5cdH0pO1xuXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW5wdXQtc2VhcmNoXCIpLnZhbHVlID0gdGl0bGUuc3BsaXQoXCIrXCIpLmpvaW4oXCIgXCIpO1xuXG5cdGFzeW5jIGZ1bmN0aW9uIHJlbmRlclNlY3Rpb24oaWQsIG1lZGlhKSB7XG5cdFx0Y29uc3Qgc2VjdGlvbiA9IGF3YWl0IGRyYXdTZWN0aW9uKGlkLCBtZWRpYSk7XG5cblx0XHQvLyBBZGQgd3JhcHBlciBkaXZzIGZvciBsYXlvdXQuXG5cdFx0Y29uc3QgaW50cm9TdWJJbmZvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblx0XHRpbnRyb1N1YkluZm8uY2xhc3NMaXN0LmFkZChcImludHJvLXN1Yi1pbmZvXCIpO1xuXHRcdGludHJvU3ViSW5mby5hcHBlbmRDaGlsZChzZWN0aW9uLmRyYXdJbnRybyhcIjMwMFwiKSk7XG5cdFx0aW50cm9TdWJJbmZvLmFwcGVuZENoaWxkKHNlY3Rpb24uZHJhd1N1YkluZm9zKCkpO1xuXG5cdFx0Y29uc3Qgc3lub3BzaXNXYXRjaFB2ZGVycyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cdFx0c3lub3BzaXNXYXRjaFB2ZGVycy5jbGFzc0xpc3QuYWRkKFwic3lub3BzaXMtd2F0Y2gtcHJvdmlkZXJzXCIpO1xuXHRcdHN5bm9wc2lzV2F0Y2hQdmRlcnMuYXBwZW5kQ2hpbGQoc2VjdGlvbi5kcmF3U3VtbWFyeUhlYWRpbmcoKSk7XG5cdFx0c3lub3BzaXNXYXRjaFB2ZGVycy5hcHBlbmRDaGlsZChzZWN0aW9uLmRyYXdTdW1tYXJ5KCkpO1xuXHRcdHN5bm9wc2lzV2F0Y2hQdmRlcnMuYXBwZW5kQ2hpbGQoc2VjdGlvbi5kcmF3UHJvdmlkZXJzKCkpO1xuXG5cdFx0Y29uc3QgcmVjSGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMlwiKTtcblx0XHRyZWNIZWFkaW5nLmNsYXNzTGlzdC5hZGQoXCJyZWMtaGVhZGluZ1wiKTtcblx0XHRyZWNIZWFkaW5nLnRleHRDb250ZW50ID0gXCJSRUNPTU1FTkRBVElPTlM6XCI7XG5cblx0XHRzZWN0aW9uLmFkZFRvU2VjdGlvbihpbnRyb1N1YkluZm8pO1xuXHRcdHNlY3Rpb24uYWRkVG9TZWN0aW9uKHN5bm9wc2lzV2F0Y2hQdmRlcnMpO1xuXHRcdHNlY3Rpb24uYWRkVG9TZWN0aW9uKHNlY3Rpb24uZHJhd1Jldmlld3MoKSk7XG5cdFx0c2VjdGlvbi5hZGRUb1NlY3Rpb24oc2VjdGlvbi5kcmF3VHJhaWxlcigpKTtcblx0XHRzZWN0aW9uLmFkZFRvU2VjdGlvbihyZWNIZWFkaW5nKTtcblx0XHRzZWN0aW9uLmFkZFRvU2VjdGlvbihzZWN0aW9uLmRyYXdSZWNzKCkpO1xuXHRcdG1haW4uYXBwZW5kQ2hpbGQoc2VjdGlvbi5zZWN0aW9uKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjbGVhclNlY3Rpb25zKCkge1xuXHRjb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluLWNvbnRhaW5lclwiKTtcblx0Y29uc3QgbG9hZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5sb2FkZXJcIik7XG5cdGNvbnN0IHNlY3Rpb25zID0gbWFpbi5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2VjdGlvbicpO1xuXHRbLi4uc2VjdGlvbnNdLmZvckVhY2goc2VjdCA9PiBzZWN0LnJlbW92ZSgpKTtcbn1cblxuZnVuY3Rpb24gc2hvd0xvYWRlcigpIHtcblx0Y29uc3QgbG9hZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5sb2FkZXJcIik7XG5cdGxvYWRlci5zdHlsZS52aXNpYmlsaXR5ID0gXCJ2aXNpYmxlXCI7XG59XG5mdW5jdGlvbiBoaWRlTG9hZGVyKCkge1xuXHRjb25zdCBsb2FkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxvYWRlclwiKTtcblxuXHRsb2FkZXIuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG5cbn1cblxuZXhwb3J0IHsgZHJhd1NlY3Rpb25zLCBjbGVhclNlY3Rpb25zIH07XG4iLCJpbXBvcnQgeyBkcmF3U2VjdGlvbnMsIGNsZWFyU2VjdGlvbnMgfSBmcm9tIFwiLi4vRE9NRnVuY3Rpb25zL2RyYXdTZWN0aW9uc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBhZGRTdWJtaXRTZWFyY2hGbmMoKSB7XG5cdGNvbnN0IHNlYXJjaEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2VhcmNoLXF1ZXJ5XCIpO1xuXHRzZWFyY2hCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGFzeW5jIChlKSA9PiB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGNvbnN0IHF1ZXJ5ID0gaW50ZXJwcmV0VG9RdWVyeShcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW5wdXQtc2VhcmNoXCIpLnZhbHVlXG5cdFx0KTtcblx0XHRpZiAoIXF1ZXJ5KSB7XG5cdFx0XHRhbGVydChcIlBsZWFzZSBlbnRlciBhIHZhbGlkIG1vdmllL3R2IHNob3dcIik7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmVtb3ZlIHRpdGxlIHBhZ2VzIGVsZW1zIGlmIGFueS5cblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpdGxlLXBhZ2VcIilcblx0XHRcdD8gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aXRsZS1wYWdlXCIpLnJlbW92ZSgpXG5cdFx0XHQ6IFwiXCI7XG5cdFx0XG5cdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pbnRyby1jb250YWluZXIyXCIpXG5cdFx0XHQ/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaW50cm8tY29udGFpbmVyMlwiKS5yZW1vdmUoKVxuXHRcdFx0OiBcIlwiO1xuXG5cdFx0Y2xlYXJTZWN0aW9ucygpO1xuXHRcdGF3YWl0IGRyYXdTZWN0aW9ucyhxdWVyeSk7XG5cblx0fSk7XG59XG5cbmZ1bmN0aW9uIGludGVycHJldFRvUXVlcnkobmFtZSkge1xuXHRyZXR1cm4gbmFtZS5zcGxpdChcIiBcIikuam9pbihcIitcIik7XG59XG4iLCJpbXBvcnQgeyBkcmF3U2VjdGlvbnMgfSBmcm9tIFwiLi9qcy9ET01GdW5jdGlvbnMvZHJhd1NlY3Rpb25zXCI7XG5pbXBvcnQgYWRkVG9nZ2xlQW5pbWF0aW9uRm5jIGZyb20gXCIuL2pzL1VJL2NoZWNrQW5pbWF0aW9uXCI7XG5pbXBvcnQgYWRkU3VibWl0U2VhcmNoRm5jIGZyb20gXCIuL2pzL1VJL3N1Ym1pdFNlYXJjaFwiO1xuXG5pbml0aWFsaXNlUGFnZSgpO1xuXG5mdW5jdGlvbiBpbml0aWFsaXNlUGFnZSgpIHtcbiAgICBhZGRTdWJtaXRTZWFyY2hGbmMoKTtcbiAgICBhZGRUb2dnbGVBbmltYXRpb25GbmMoKTtcbiAgICAvLyBkcmF3U2VjdGlvbnMoXCJHYW1lIE9mIFRocm9uZXNcIik7XG59XG5cblxuXG4iXSwibmFtZXMiOlsib2JzZXJ2ZXIiLCJJbnRlcnNlY3Rpb25PYnNlcnZlciIsImVudHJpZXMiLCJmb3JFYWNoIiwiZW50cnkiLCJpc0ludGVyc2VjdGluZyIsInRhcmdldCIsImNsYXNzTGlzdCIsImFkZCIsIkFQSV9LRVkiLCJhc3luYyIsImZldGNoTW92aWVEZXRhaWxzIiwibW92aWVfaWQiLCJyZXNwb25zZSIsImZldGNoIiwibW9kZSIsIm9yaWdpbmFsX3RpdGxlIiwib3ZlcnZpZXciLCJ0YWdsaW5lIiwicG9wdWxhcml0eSIsInZvdGVfYXZlcmFnZSIsInZvdGVfY291bnQiLCJnZW5yZXMiLCJ2aWRlbyIsInJ1bnRpbWUiLCJwb3N0ZXJfcGF0aCIsImJhY2tkcm9wX3BhdGgiLCJyZWxlYXNlX2RhdGUiLCJqc29uIiwibU5hbWUiLCJzdW1tYXJ5IiwibWFwIiwiZ2VucmUiLCJuYW1lIiwiZXJyb3IiLCJjb25zb2xlIiwibWVzc2FnZSIsImZldGNoTW92aWVSZWNjb3MiLCJvayIsIkVycm9yIiwicmVzdWx0cyIsInNsaWNlIiwibW92aWUiLCJpZCIsImZldGNoTW92aWVQcm92aWRlcnMiLCJwcm92aWRlcnNCeUNvdW50cnkiLCJkYXRhIiwiY291bnRyeUNvZGUiLCJjb3VudHJ5IiwiY29kZSIsIkludGwiLCJEaXNwbGF5TmFtZXMiLCJ0eXBlIiwib2YiLCJzdHJlYW0iLCJyZW50IiwiYnV5Iiwic29ydFByb3ZpZGVycyIsInNlcnZpY2VzIiwiY29sbGVjdGlvbiIsInNlcnZpY2UiLCJwcm92aWRlckluZm8iLCJwcm92aWRlcl9uYW1lIiwicHJvdmlkZXJfbG9nb19wYXRoIiwibG9nb19wYXRoIiwicHVzaCIsImZsYXRyYXRlIiwiZXJyb3JvciIsImZldGNoTW92aWVUcmFpbGVyIiwidHJhaWxlcnMiLCJmaWx0ZXIiLCJsZW5ndGgiLCJtb3ZpZVRyYWlsZXIiLCJmaW5kIiwib2ZmaWNpYWwiLCJ0TmFtZSIsImtleSIsInNpdGUiLCJsYW5nIiwiaXNvXzYzOV8xIiwiZmV0Y2hNb3ZpZVJldmlld3MiLCJyZXZpZXdzIiwicmV2aWV3IiwiYXV0aG9yIiwicmF0aW5nIiwiYXV0aG9yX2RldGFpbHMiLCJwaWNfcGF0aCIsImF2YXRhcl9wYXRoIiwiY29udGVudCIsInVybCIsImxhc3RfdXBkYXRlZCIsInVwZGF0ZWRfYXQiLCJmZXRjaFR2RGV0YWlscyIsInR2X2lkIiwicmVkdWNlIiwiYWNjIiwidmFsIiwib3JpZ2luYWxfbmFtZSIsImxhbmd1YWdlIiwib3JpZ2luYWxfbGFuZ3VhZ2UiLCJlcGlzb2RlX3J1bl90aW1lIiwib3JpZ2luX2NvdW50cnkiLCJzdGF0dXMiLCJzZWFzb25zIiwibnVtYmVyX29mX3NlYXNvbnMiLCJmaXJzdF9haXJfZGF0ZSIsImxhc3RfYWlyX2RhdGUiLCJmZXRjaFR2UmVjY29zIiwicmVjVHZzIiwidHYiLCJmZXRjaFR2UHJvdmlkZXJzIiwiZmV0Y2hUdlRyYWlsZXIiLCJ0dlRyYWlsZXIiLCJmZXRjaFR2UmV2aWV3cyIsImRyYXdTZWN0aW9uIiwibWVkaWEiLCJzZWN0aW9uIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiZGV0YWlscyIsImdldEluZm8iLCJyZWNzIiwicHJvdmlkZXJzIiwidHJhaWxlciIsImFkZFRvU2VjdGlvbiIsInBhcnQiLCJhcHBlbmRDaGlsZCIsInJlbmRlckVsZW1lbnQiLCJ0YWciLCJjbGFzc05hbWUiLCJjb250YWluZXIiLCJtb3ZpZUZuYyIsInR2Rm5jIiwiZHJhd0ludHJvIiwiaW1nU2l6ZSIsImludHJvQ29udGFpbmVyIiwidGl0bGUiLCJ0ZXh0Q29udGVudCIsImNyZWF0ZVRpdGxlIiwidGFnUGFyYSIsIndyaXRlVGFnbGluZSIsImltZyIsInBvc3RlciIsImJhc2VJbWdVcmwiLCJpbWdfcGF0aCIsInNyYyIsImFsdCIsInNldEF0dHJpYnV0ZSIsInJlbmRlckltZyIsImRyYXdSZWMiLCJyZWMiLCJyZWNDb250YWluZXIiLCJyZWNQb3N0ZXIiLCJpbmZvIiwic3ViSW5mbyIsInJlY05hbWUiLCJyZWNEYXRlIiwidm90ZUNvdW50Iiwidm90ZUF2ZyIsInJlbmRlckluZm8iLCJyZWNMaW5rIiwibWVkaWFUeXBlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImRyYXdBbGwiLCJkcmF3U3ViSW5mb3MiLCJkYXRlIiwibGFzdEFpcmVkIiwiY3JlYXRlU3ViSW5mbyIsInNwbGl0IiwicmV2ZXJzZSIsImpvaW4iLCJtaW5zIiwiaG91cnMiLCJySG91cnMiLCJNYXRoIiwiZmxvb3IiLCJtaW51dGVzIiwicm91bmQiLCJjb252ZXJ0TWluVG9IciIsImNhdGVnb3J5IiwiY2F0ZWdvcnlOYW1lIiwiY2F0ZWdvcnlJbmZvIiwiZHJhd1N1bW1hcnlIZWFkaW5nIiwiaGVhZGluZyIsImRyYXdTdW1tYXJ5IiwicGFyYSIsImRyYXdQcm92aWRlcnMiLCJhdmFpbFByb3ZpZGVycyIsInByb3ZpZGVyQ29udGFpbmVyIiwiY291bnRyeUJ0biIsImhvdXNlQ29udGFpbmVyIiwiZWxlbSIsIk9iamVjdCIsImtleXMiLCJpbmNsdWRlcyIsImZsYWciLCJkcmF3UHJvdmlkZXIiLCJmaXJzdFByb3ZpZGVyIiwiZXJyIiwibG9nIiwibG9zdEdpZiIsInN0eWxlIiwiZGlzcGxheSIsImp1c3RpZnlDb250ZW50IiwiZG93bkFycm93IiwiY3VyckNvdW50cnlOYW1lIiwicHJvdmlkZXJDb3VudHJpZXMiLCJjdXJyQ291bnRyeUNvZGUiLCJjb3VudHJpZXMiLCJtb2RhbENvbnRhaW5lciIsIm1vZGFsSGVhZGVyIiwibW9kYWxCb2R5IiwibW9kYWxDdXJyZW50Q291bnRyeSIsIm1vZGFsSW5wdXRTZWFyY2giLCJtb2RhbExpc3RDb3VudHJpZXMiLCJtb2RhbENsb3NlQnRuIiwicmVuZGVyQ291bnRyeUZsYWciLCJjb3VudHJ5TmFtZSIsImZpbHRlclJlc3VsdHMiLCJpbnB1dCIsInVsIiwibGkiLCJhIiwiaSIsInR4dFZhbHVlIiwiZ2V0RWxlbWVudEJ5SWQiLCJ2YWx1ZSIsInRvVXBwZXJDYXNlIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJpbm5lclRleHQiLCJpbmRleE9mIiwiY3VyckNvdW50cnkiLCJzZWFyY2hMYWJlbCIsInNlYXJjaEF0dHJpYnV0ZXMiLCJwbGFjZWhvbGRlciIsInJvbGUiLCJjdXJyQ291bnRyeUZsYWciLCJodG1sRm9yIiwiZm9ybUVsZW0iLCJyZW5kZXJIZWFkaW5nIiwiY291bnRyeUNvbnRhaW5lciIsImNvdW50cnlGbGFnIiwiY291bnRyeUVsZW0iLCJyZW5kZXJCb2R5IiwiY2xvc2VGbmMiLCJjbG9zZVN5bWIiLCJyZW5kZXJDbG9zZUJ0biIsImN1cnJlbnRGb3JtIiwicXVlcnlTZWxlY3RvciIsInNldFRpbWVvdXQiLCJ0cmFuc2Zvcm0iLCJvcGFjaXR5IiwidmlzaWJpbGl0eSIsInJlbW92ZSIsIm1vZGFsRWxlbSIsImFwcGVuZCIsInJlbmRlckNvdW50cmllc01vZGFsIiwiYmFja2dyb3VuZENvbG9yIiwidGlja0ljb24iLCJoaWdobGlnaHRDdXJyQ291bnRyeSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsYXN0Q2hpbGQiLCJzZWxlY3RlZENvdW50cnkiLCJpbm5lckhUTUwiLCJzdHJlYW1JbmZvIiwiYnV5SW5mbyIsInJlbnRJbmZvIiwic2VydmljZU5hbWVzIiwiaWR4Iiwic2VydmljZUNvbnRhaW5lciIsInNlcnZpY2VOYW1lIiwic2VydmljZU5hbWVCb2xkIiwicHJvdmlkZXJTZXJ2aWNlQ29udGFpbmVyIiwicHJvdmlkZXIiLCJwcm92aWRlclNlcnZpY2UiLCJwcm92aWRlckltZyIsInByb3ZpZGVyTmFtZSIsImRyYXdSZXZpZXdzIiwicmV2aWV3Q29udGFpbmVyIiwiYWRkUmV2SW5mbyIsImluZm9Db250YWluZXIiLCJyZXZpZXdIZWFkaW5nIiwiYXV0aG9yUGljIiwicmVuZGVyUmV2aWV3SGVhZGluZyIsInJldmlld0NvbnRlbnQiLCJyZW5kZXJSZXZpZXdCb2R5IiwicmV2aWV3Rm9vdGVyIiwicmV2aWV3VXJsIiwicmV2aWV3VXBkYXRlZCIsImNvbmNhdCIsInJlbmRlclJldmlld0Zvb3RlciIsImRyYXdSZXZpZXciLCJkcmF3VHJhaWxlciIsInRyYWlsZXJDb250YWluZXIiLCJ0cmFpbGVySGVhZGluZyIsInRyYWlsZXJOYW1lIiwidHJhaWxlckxhbmd1YWdlIiwicmVuZGVyVHJhaWxlckhlYWRpbmciLCJ2aWRlb1dyYXBwZXIiLCJmcmFtZSIsImF0dHJpYnV0ZXMiLCJsb2FkaW5nIiwid2lkdGgiLCJoZWlnaHQiLCJmcmFtZWJvcmRlciIsImFsbG93IiwiYXR0ciIsImFkZFZpZGVvIiwiZHJhd1JlY3MiLCJyZWNzQ29udGFpbmVyIiwibm9uZU1zZyIsImRyYXdTZWN0aW9ucyIsImlkcyIsInF1ZXJ5IiwiaW50ZXJwcmV0VG9RdWVyeSIsInJlc3VsdCIsIm1lZGlhX3R5cGUiLCJzb3J0IiwicDEiLCJwMiIsImFsZXJ0IiwiZmV0Y2hJZHMiLCJtYWluIiwic2VjdGlvbnMiLCJpbnRyb1N1YkluZm8iLCJzeW5vcHNpc1dhdGNoUHZkZXJzIiwicmVjSGVhZGluZyIsInJlbmRlclNlY3Rpb24iLCJ0aGVuIiwiY2hlY2tlZCIsImVsIiwib2JzZXJ2ZSIsImNsZWFyU2VjdGlvbnMiLCJzZWN0IiwiYWRkU3VibWl0U2VhcmNoRm5jIiwiYW5pbWF0aW9uQ2hlY2siLCJlbGVtZW50cyIsImRpc2Nvbm5lY3QiLCJhZGRUb2dnbGVBbmltYXRpb25GbmMiXSwic291cmNlUm9vdCI6IiJ9