(()=>{"use strict";const t="720d2150cf09bfa61e28a5042cd7468f",e="720d2150cf09bfa61e28a5042cd7468f";async function n(t){try{const n=await fetch(`https://api.themoviedb.org/3/movie/${t}?api_key=${e}&language=en-US`,{mode:"cors"}),a=await n.json(),o=a.genres.reduce(((t,e)=>[...t,e.name]),[]);return{mName:a.original_title,summary:a.overview,tagline:a.tagline,popularity:a.popularity,vote_average:a.vote_average,vote_count:a.vote_count,genres:o,video:a.video,runtime:a.runtime,poster_path:a.poster_path,backdrop_path:a.backdrop_path}}catch(t){alert(t)}}async function a(t){try{const n=await fetch(`https://api.themoviedb.org/3/movie/${t}/recommendations?api_key=${e}&language=en-US&page=1`,{mode:"cors"}),a=await n.json(),o={};if(a.results){let t=1;for(let e of a.results){if(o[e.original_title]={mName:e.original_title,id:e.id,poster_path:e.poster_path,backdrop_path:e.backdrop_path},5===t)break;t++}}return o}catch(t){alert(t)}}async function o(t){const n={};try{const o=await fetch(`https://api.themoviedb.org/3/movie/${t}/watch/providers?api_key=${e}`,{mode:"cors"}),r=await o.json();for(const t in r.results){const e=(a=t,new Intl.DisplayNames(["en"],{type:"region"}).of(a));n[e]={stream:[],rent:[],buy:[],countryCode:t};const o=(t,e)=>{t&&t.forEach((t=>{const n={provider_name:t.provider_name,provider_logo_path:t.logo_path};e.push(n)}))};o(r.results[t].flatrate,n[e].stream),o(r.results[t].rent,n[e].rent),o(r.results[t].buy,n[e].buy)}return n}catch(t){alert(t)}var a}async function r(t){try{let a;const o=await fetch(`https://api.themoviedb.org/3/movie/${t}/videos?api_key=${e}`,{mode:"cors"}),r=(await o.json()).results.filter((t=>"Trailer"===t.type));if(0===r.length)return!1;const i=r.filter((t=>{t.official}));return a=0!==i.length?i[0]:r[0],{mName:a.name,key:a.key,site:a.site,type:a.type,lang:(n=a.iso_639_1,new Intl.DisplayNames(["en"],{type:"language"}).of(n))}}catch(t){alert(t)}var n}async function i(t){try{let n=[];const a=await fetch(`https://api.themoviedb.org/3/movie/${t}/reviews?api_key=${e}&language=en-US&page=1`,{mode:"cors"}),o=await a.json();if(0===o.results.length)return!1;let r=1;return o.results.forEach((t=>{n.push({author:t.author,rating:t.author_details.rating,pic_path:t.author_details.avatar_path,content:t.content,url:t.url,last_updated:t.updated_at}),r++})),n.slice(0,5)}catch(t){alert(t)}}const c=async(t,e)=>{const c=document.createElement("section"),s=await p(t,n),l=(await p(t,a),await p(t,o));function d(t){c.appendChild(t)}function u(t,e){const n=document.createElement(t);return n.classList.add(e),n}async function p(t,n,a){return"movie"===e?await n(t):""}console.log(l),await p(t,r),await p(t,i);const m=t=>{const e=document.createElement("div");e.classList.add("intro"),e.appendChild(function(){const t=document.createElement("h1");return t.textContent=s.mName,t.classList.add("title"),t}()),s.tagline&&e.appendChild(function(){const t=document.createElement("p");return t.textContent=s.tagline,t.classList.add("tagline"),t}());const n=function(t=""){const e=document.createElement("img"),n="https://image.tmdb.org/t/p";let a;if(e.classList.add("poster"),s.poster_path)a=s.poster_path;else{if(!s.backdrop_path)return;a=s.backdrop_path}return e.src=t?`${n}/w${t}/${a}`:`${n}/original/${a}`,e.alt="Movie picture poster",e.setAttribute("loading","lazy"),e}(t);return n&&e.appendChild(n),e.appendChild(function(){const t=document.createElement("p");return t.textContent=s.summary,t.classList.add("summary"),t}()),e};return{section:c,addToSection:d,drawAll:function(){d(m())},drawIntro:m,drawSubInfos:()=>{const t=document.createElement("div");function e(t,e){const n=document.createElement("div"),a=document.createElement("span"),o=document.createElement("span");return n.classList.add("sub-info"),a.classList.add("category-name"),o.classList.add("category-info"),a.textContent=t,o.textContent=e,[a,o].forEach((t=>n.appendChild(t))),n}return t.classList.add("subinfo-container"),[e("Genres:",s.genres.join(", ")),e("Runtime:",function(t){const e=t/60,n=Math.floor(e),a=60*(e-n);return`${n}h ${Math.round(a)}min`}(s.runtime)),e("Vote Average:",s.vote_average),e("Vote Count:",s.vote_count),e("Popularity:",s.popularity)].forEach((e=>t.appendChild(e))),t},drawProviders:()=>{let t;const e=u("div","provider-container"),n=u("button","country-btn"),a=u("div","house-provider-container");if([n,a].forEach((t=>{e.appendChild(t)})),Object.keys(l).length)if(t=!0,Object.keys(l).includes("Australia"))o("Australia"),n.textContent="Australia";else{const t=Object.keys(l)[0];o(t),n.textContent=`${t}`}else t=!1,n.textContent="No countries offer this tv/movie at the moment.";return n.addEventListener("click",(e=>{e.preventDefault(),t&&(function(t){const e=Object.keys(l);let n,a={};e.forEach((e=>{a[e]=l[e].countryCode,t===e&&(n=l[e].countryCode)}));const o=u("form","modal-country-container"),r=u("div","modal-header"),i=u("div","modal-body"),c=u("div","modal-current-country"),s=u("input","modal-input-search"),d=u("ul","modal-list-countries"),p=u("button","modal-close-btn");function m(t,e){const n=u("img","country-flag");return n.setAttribute("crossorigin","anonymous"),n.src=`https://countryflagsapi.com/png/${t}`,n.alt=`${e} flag`,n}function h(){let t,e,n,a,o,r,i;for(t=document.getElementById("modal-input-search"),e=t.value.toUpperCase(),n=document.getElementById("countries-list"),a=n.getElementsByTagName("li"),r=0;r<a.length;r++)o=a[r].getElementsByTagName("a")[0],i=o.textContent||o.innerText,i.toUpperCase().indexOf(e)>-1?a[r].style.display="":a[r].style.display="none"}(()=>{const e=document.createElement("h2");e.textContent="Countries";const a=document.createElement("h3"),o=document.createElement("label"),i={id:"modal-input-search",type:"search",placeholder:"🔍 Search for countries...",title:"Type in a country name",role:"search"};for(let t in i)s.setAttribute(t,i[t]);s.addEventListener("keyup",h),s.addEventListener("submit",(t=>{t.preventDefault()}));const l=m(n,t);a.textContent=t,c.appendChild(l),c.appendChild(a),o.htmlFor=`${s.id}`,[e,c,o,s].forEach((t=>{r.appendChild(t)}))})(),(()=>{d.id="countries-list";for(let t in a){let e=a[t];const n=u("li","country-container"),o=m(e,t),r=u("a","country-name");r.textContent=t,r.setAttribute("href","#"),[o,r].forEach((t=>{n.appendChild(t)})),d.appendChild(n)}[d].forEach((t=>{i.appendChild(t)}))})(),(t=>{const e=u("i","fa");e.classList.add("fa-close"),p.appendChild(e),t()})((()=>{p.addEventListener("click",(t=>{t.preventDefault(),document.querySelector(".modal-country-container").remove(),document.querySelector(".face-mask").style.display="none"}))})),[r,i,p].forEach((t=>o.appendChild(t))),document.querySelector("body").append(o),document.querySelector(".face-mask").style.display="block"}(n.textContent),function(t){let e,n,a,o,r;for(e=document.getElementById("countries-list"),n=e.getElementsByTagName("li"),a=0;a<n.length;a++)if(o=n[a].getElementsByTagName("a")[0],r=o.textContent||o.innerText,r===t){n[a].style.backgroundColor="rgba(25, 150, 150, 0.5)",n[a].style.transform="scale(1.025)";const t=u("i","fa");t.classList.add("fa-check"),n[a].append(t)}}(n.textContent),document.querySelectorAll(".country-container").forEach((t=>t.addEventListener("click",(e=>{if(e.preventDefault(),t.lastChild.textContent){const e=t.lastChild.textContent;a.innerHTML="",o(e)}document.querySelector(".modal-country-container").remove(),document.querySelector(".face-mask").style.display="none"})))))})),e;function o(t="Australia"){n.textContent=t;const e=l[t].stream,o=l[t].buy,r=l[t].rent,i=["Stream at:","Purchase at:","Rent at:"];let c=0;[e,o,r].forEach((t=>{const e=u("div","service-container"),n=u("div","service-name"),o=u("h2","service-name-bold"),r=u("div","provider-service-container");t.forEach((t=>{const e=u("div","provider-service"),n=u("img","provider-img"),a=u("span","provider-name");t.provider_logo_path&&(n.src=`https://image.tmdb.org/t/p/original/${t.provider_logo_path}`,n.alt=`${t.provider_name} picture.`,n.setAttribute("loading","lazy"),a.textContent=t.provider_name),[n,a].forEach((t=>{e.appendChild(t)})),r.appendChild(e)})),t.length&&(o.textContent=`${i[c]}`,n.appendChild(o)),c++,e.appendChild(n),e.appendChild(r),a.appendChild(e)}))}}}};async function s(e){const n=await async function(e){const n=function(t){return t.split(" ").join("+")}(e);try{const a=await fetch(`https://api.themoviedb.org/3/search/multi?api_key=${t}&language=en-US&query=${n}&page=1`,{mode:"cors"}),o=await a.json();let r={},i=o.results.sort(((t,e)=>t.popularity<e.popularity?1:t.popularity>e.popularity?-1:0));if(i.length){for(let t=0;t<i.length;t++)r[i[t].id]=i[t].media_type;return r}return void alert(`No results found for ${e}`)}catch(t){alert(t)}}(e),a=document.querySelector(".main-container");let o=[];for(let t in n)"movie"===n[t]&&o.push([t,n[t]]);async function r(t,e){const n=await c(t,e);return n.addToSection(n.drawIntro("300")),n.addToSection(n.drawSubInfos()),n.addToSection(n.drawProviders()),a.appendChild(n.section),r}o.forEach((async t=>await r(t[0],t[1])))}console.log("Hello World"),async function(){document.querySelector(".search-query").addEventListener("click",(async t=>{t.preventDefault();const e=document.getElementById("input-search").value.split(" ").join("+");e?(document.querySelector(".main-container").innerHTML="",await s(e),document.querySelector(".search-query").value=""):alert("Please enter a valid movie/tv show")}))}(),s("iron man")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,