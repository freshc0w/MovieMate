(()=>{"use strict";const e=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&e.target.classList.add("show")}))})),t="720d2150cf09bfa61e28a5042cd7468f",n="720d2150cf09bfa61e28a5042cd7468f";async function a(e){try{const t=await fetch(`https://api.themoviedb.org/3/movie/${e}?api_key=${n}\n\t\t\t&language=en-US`,{mode:"cors"}),{original_title:a,overview:o,tagline:r,popularity:i,vote_average:s,vote_count:c,genres:d,video:l,runtime:p,poster_path:u,backdrop_path:m,release_date:h}=await t.json();return{mName:a,summary:o,tagline:r,popularity:i,vote_average:s,vote_count:c,genres:d.map((e=>e.name)),video:l,runtime:p,poster_path:u,backdrop_path:m,release_date:h}}catch(e){console.error(`Failed to fetch movie details ${e.message}`)}}async function o(e){try{const t=await fetch(`https://api.themoviedb.org/3/movie/${e}/recommendations\n\t\t\t?api_key=${n}&language=en-US&page=1`,{mode:"cors"});if(!t.ok)throw new Error("Failed to fetch movie recommendations from API.");return(await t.json()).results.slice(0,5).map((e=>({mName:e.original_title,id:e.id,poster_path:e.poster_path,backdrop_path:e.backdrop_path,release_date:e.release_date,vote_count:e.vote_count,vote_average:e.vote_average})))}catch(e){console.error(`Failed to fetch movie recommendations: ${e.message}`)}}async function r(e){const t={};try{const o=await fetch(`https://api.themoviedb.org/3/movie/${e}/watch/providers?api_key=${n}`,{mode:"cors"}),r=await o.json();for(const e in r.results){const n=(a=e,new Intl.DisplayNames(["en"],{type:"region"}).of(a));t[n]={stream:[],rent:[],buy:[],countryCode:e};const o=(e,t)=>{e&&e.forEach((e=>{const n={provider_name:e.provider_name,provider_logo_path:e.logo_path};t.push(n)}))};o(r.results[e].flatrate,t[n].stream),o(r.results[e].rent,t[n].rent),o(r.results[e].buy,t[n].buy)}return t}catch(e){console.erroror(`Failed to fetch movie providers: ${e.message}`)}var a}async function i(e){try{const a=await fetch(`https://api.themoviedb.org/3/movie/${e}/videos?api_key=${n}&mode=cors`);if(!a.ok)throw new Error("Failed to fetch movie trailers from API.");const o=(await a.json()).results.filter((e=>"Trailer"===e.type));if(0===o.length)return;const r=o.find((e=>!0===e.official))??o[0];return{tName:r.name,key:r.key,site:r.site,type:r.type,lang:(t=r.iso_639_1,new Intl.DisplayNames(["en"],{type:"language"}).of(t))}}catch(e){console.error(`Failed to fetch movie trailers: ${e.message}`)}var t}async function s(e){try{let t=[];const a=await fetch(`https://api.themoviedb.org/3/movie/${e}/reviews?api_key=${n}&language=en-US&page=1`,{mode:"cors"}),o=await a.json();return 0!==o.results.length&&(o.results.forEach((e=>{t.push({author:e.author,rating:e.author_details.rating,pic_path:e.author_details.avatar_path,content:e.content,url:e.url,last_updated:e.updated_at})})),t.slice(0,5))}catch(e){console.error(`Fail to fetch movie reviews: ${e.message}`)}}const c="720d2150cf09bfa61e28a5042cd7468f";async function d(e){try{const t=await fetch(`https://api.themoviedb.org/3/tv/${e}?api_key=${c}&language=en-US`,{mode:"cors"}),n=await t.json();console.log(n);const a=n.genres.reduce(((e,t)=>[...e,t.name]),[]);return{tName:n.original_name,tagline:n.tagline,language:n.original_language,summary:n.overview,episode_run_time:n.episode_run_time[0],origin_country:n.origin_country,vote_average:n.vote_average,vote_count:n.vote_count,status:n.status,seasons:n.seasons,number_of_seasons:n.number_of_seasons,first_air_date:n.first_air_date,last_air_date:n.last_air_date,backdrop_path:n.backdrop_path,poster_path:n.poster_path,popularity:n.popularity,genres:a}}catch(e){console.log(e)}}async function l(e){try{const t=await fetch(`https://api.themoviedb.org/3/tv/${e}/recommendations?api_key=${c}&language=en-US&page=1`,{mode:"cors"}),n=await t.json(),a={};if(n.results){let e=1;for(let t of n.results){if(a[t.original_name]={tName:t.original_name,id:t.id,first_air_date:t.first_air_date,poster_path:t.poster_path,backdrop_path:t.backdrop_path,vote_average:t.vote_average,vote_count:t.vote_count},5===e)break;e++}}return a}catch{console.log(err)}}async function p(e){const t={};try{const a=await fetch(`https://api.themoviedb.org/3/tv/${e}/watch/providers?api_key=${c}`,{mode:"cors"}),o=await a.json();for(const e in o.results){const a=(n=e,new Intl.DisplayNames(["en"],{type:"region"}).of(n));t[a]={stream:[],rent:[],buy:[],countryCode:e};const r=(e,t)=>{e&&e.forEach((e=>{const n={provider_name:e.provider_name,provider_logo_path:e.logo_path};t.push(n)}))};r(o.results[e].flatrate,t[a].stream),r(o.results[e].rent,t[a].rent),r(o.results[e].buy,t[a].buy)}return t}catch(e){console.log(e)}var n}async function u(e){try{let n;const a=await fetch(`https://api.themoviedb.org/3/tv/${e}/videos?api_key=${c}`,{mode:"cors"}),o=(await a.json()).results.filter((e=>"Trailer"===e.type));if(0===o.length)return!1;const r=o.filter((e=>{e.official}));return n=0!==r.length?r[0]:o[0],{tName:n.name,key:n.key,site:n.site,type:n.type,lang:(t=n.iso_639_1,new Intl.DisplayNames(["en"],{type:"language"}).of(t))}}catch(e){console.log(e)}var t}async function m(e){try{let t=[];const n=await fetch(`https://api.themoviedb.org/3/tv/${e}/reviews?api_key=${c}&language=en-US&page=1`,{mode:"cors"}),a=await n.json();if(0===a.results.length)return!1;let o=1;return a.results.forEach((e=>{t.push({author:e.author,rating:e.author_details.rating,pic_path:e.author_details.avatar_path,content:e.content,url:e.url,last_updated:e.updated_at}),o++})),t.slice(0,5)}catch(e){console.log(e)}}const h=async(e,t)=>{const n=document.createElement("section"),c=await b(e,a,d),h=await b(e,o,l),y=await b(e,r,p),v=await b(e,i,u),_=await b(e,s,m);function C(e){e&&n.appendChild(e)}function w(e,t){const n=document.createElement(e);return n.classList.add(t),n}async function b(e,n,a){return"movie"===t?await n(e):await a(e)}n.classList.add("section-container");const E=e=>{const t=document.createElement("div");t.classList.add("intro"),t.appendChild(function(){const e=document.createElement("h1");return e.textContent=c.mName?c.mName:c.tName,e.classList.add("title"),e}()),c.tagline&&t.appendChild(function(){const e=document.createElement("em");return e.textContent=`"${c.tagline}"`,e.classList.add("tagline"),e}());const n=function(e=""){const t=document.createElement("img"),n="https://image.tmdb.org/t/p";let a;if(t.classList.add("poster"),c.poster_path)a=c.poster_path;else{if(!c.backdrop_path)return;a=c.backdrop_path}return t.src=e?`${n}/w${e}/${a}`:`${n}/original/${a}`,t.alt="Movie picture poster",t.setAttribute("loading","lazy"),t}(e);return n&&t.appendChild(n),t},$=e=>{const t=w("div","rec-container"),n=w("img","rec-poster"),a=w("div","rec-info");n.src=`https://image.tmdb.org/t/p/w300/${e.poster_path}`,t.appendChild(n),function(e){if(e){const t=w("p","rec-name"),n=w("p","rec-date"),a=w("p","rec-vote-count"),o=w("p","rec-vote-avg");return t.textContent=e.tName?`Name: ${e.tName}`:`Name: ${e.mName}`,n.textContent=e.first_air_date?`First Air Date: ${e.first_air_date}`:`Release Date: ${e.release_date}`,a.textContent=`Vote Count: ${e.vote_count}`,o.textContent=`Vote Avg: ${e.vote_average}`,[t,n,a,o]}}(e).forEach((e=>a.appendChild(e)));const o=w("a","rec-link"),r=e.tName?"TV Show":"Movie";return o.textContent=`Search for this ${r} -> `,o.addEventListener("click",(async t=>{t.preventDefault(),g(),e.tName?await f(e.tName):await f(e.mName)})),a.appendChild(o),t.appendChild(a),t};return{section:n,addToSection:C,drawAll:function(){C(E())},drawIntro:E,drawSubInfos:()=>{const e=document.createElement("div");let t,n;e.classList.add("subinfo-container"),c.release_date?(t=o("Release Date:",c.release_date.split("-").reverse().join("/")),n=""):c.first_air_date?(t=o("First Aired: ",c.first_air_date.split("-").reverse().join("/")),n=o("Last Aired: ",c.last_air_date.split("-").reverse().join("/"))):t="";let a=c.runtime?function(e){const t=e/60,n=Math.floor(t),a=60*(t-n);return`${n}h ${Math.round(a)}min`}(c.runtime):"";function o(e,t){if(!t)return;const n=document.createElement("div"),a=document.createElement("span"),o=document.createElement("span");return n.classList.add("sub-info"),a.classList.add("category-name"),o.classList.add("category-info"),a.textContent=e,o.textContent=t,[a,o].forEach((e=>n.appendChild(e))),n}return[t,n,o("Show status:",c.status),o("Runtime: ",a),o("Genres: ",c.genres.join(", ")),o("Number of seasons: ",c.number_of_seasons),o("Est Avg Episode Runtime: ",c.episode_run_time),o("Country of Origin: ",c.origin_country),o("Vote Average: ",c.vote_average),o("Vote Count: ",c.vote_count),o("Popularity: ",c.popularity)].forEach((t=>t?e.appendChild(t):"")),e},drawSummaryHeading:()=>{const e=document.createElement("h2");return e.textContent="Synopsis: ",e},drawSummary:()=>{const e=document.createElement("p");return e.textContent=c.summary,e.classList.add("summary"),e},drawProviders:()=>{let e;const t=w("div","provider-container"),n=w("button","country-btn"),a=w("div","house-provider-container");if([n,a].forEach((e=>{t.appendChild(e)})),Object.keys(y).length)if(e=!0,Object.keys(y).includes("Australia")){const e=w("img","country-flag");e.setAttribute("crossorigin","anonymous"),e.src="https://countryflagsapi.com/png/Australia",e.alt="Australia flag",e.classList.add("btn-country-flag"),r("Australia"),n.textContent="Australia",n.appendChild(e)}else{const e=Object.keys(y)[0];try{const t=w("img","country-flag");t.setAttribute("crossorigin","anonymous"),t.src=`https://countryflagsapi.com/png/${e}`,t.alt=`${e} flag`,t.classList.add("btn-country-flag"),n.appendChild(t)}catch(e){console.log(e)}r(e),n.textContent=`${e}`}else{e=!1,n.textContent="No countries offer this tv/movie at the moment.",n.classList.add("lost-providers");const t=w("img","lost-gif");t.src="./img/lost-gif.gif",t.alt="Prover cannot be found picture.",a.style.display="flex",a.style.justifyContent="center",a.appendChild(t)}const o=w("i","fas");return o.classList.add("fa-angle-down"),n.appendChild(o),n.addEventListener("click",(t=>{t.preventDefault(),e&&(function(e){const t=Object.keys(y);let n,a={};t.forEach((t=>{a[t]=y[t].countryCode,e===t&&(n=y[t].countryCode)}));const o=w("form","modal-country-container"),r=w("div","modal-header"),i=w("div","modal-body"),s=w("div","modal-current-country"),c=w("input","modal-input-search"),d=w("ul","modal-list-countries"),l=w("button","modal-close-btn");function p(e,t){const n=w("img","country-flag");return n.setAttribute("crossorigin","anonymous"),n.src=`https://countryflagsapi.com/png/${e}`,n.alt=`${t} flag`,n}function u(){let e,t,n,a,o,r,i;for(e=document.getElementById("modal-input-search"),t=e.value.toUpperCase(),n=document.getElementById("countries-list"),a=n.getElementsByTagName("li"),r=0;r<a.length;r++)o=a[r].getElementsByTagName("a")[0],i=o.textContent||o.innerText,i.toUpperCase().indexOf(t)>-1?a[r].style.display="":a[r].style.display="none"}(()=>{const t=document.createElement("h2");t.textContent="Countries";const a=document.createElement("h3"),o=document.createElement("label"),i={id:"modal-input-search",type:"search",placeholder:"🔍 Search for countries...",title:"Type in a country name",role:"search"};for(let e in i)c.setAttribute(e,i[e]);c.addEventListener("keyup",u),c.addEventListener("submit",(e=>{e.preventDefault()}));const d=p(n,e);a.textContent=e,s.appendChild(d),s.appendChild(a),o.htmlFor=`${c.id}`,[t,s,o,c].forEach((e=>{r.appendChild(e)}))})(),(()=>{d.id="countries-list";for(let e in a){let t=a[e];const n=w("li","country-container"),o=p(t,e),r=w("a","country-name");r.textContent=e,r.setAttribute("href","#"),[o,r].forEach((e=>{n.appendChild(e)})),d.appendChild(n)}[d].forEach((e=>{i.appendChild(e)}))})(),(e=>{const t=w("i","fa");t.classList.add("fa-close"),l.appendChild(t),e()})((()=>{l.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector(".modal-country-container");document.querySelector(".face-mask").style.display="none",setTimeout((function(){t.style.transform="translateY(-125%)"}),100),setTimeout((function(){t.style.opacity=0,t.style.visibility="hidden",t.remove()}),750)}))})),[r,i,l].forEach((e=>o.appendChild(e))),setTimeout((function(){o.style.visibility="visible",o.style.opacity=1,o.style.transform="translateY(0%)"}),100),document.querySelector("body").append(o),document.querySelector(".face-mask").style.display="block"}(n.textContent),function(e){let t,n,a,o,r;for(t=document.getElementById("countries-list"),n=t.getElementsByTagName("li"),a=0;a<n.length;a++)if(o=n[a].getElementsByTagName("a")[0],r=o.textContent||o.innerText,r===e){n[a].style.backgroundColor="rgba(25, 150, 150, 0.5)",n[a].style.transform="scale(1.025)";const e=w("i","fa");e.classList.add("fa-check"),n[a].append(e)}}(n.textContent),document.querySelectorAll(".country-container").forEach((e=>e.addEventListener("click",(t=>{if(t.preventDefault(),e.lastChild.textContent){const t=e.lastChild.textContent;a.innerHTML="",r(t)}document.querySelector(".modal-country-container").remove(),document.querySelector(".face-mask").style.display="none"})))))})),t;function r(e="Australia"){n.textContent=e;try{const t=w("img","country-flag");t.setAttribute("crossorigin","anonymous"),t.src=`https://countryflagsapi.com/png/${e}`,t.alt=`${e} flag`,t.classList.add("btn-country-flag"),n.appendChild(t)}catch(e){console.log(e)}const t=w("i","fas");t.classList.add("fa-angle-down"),n.appendChild(t);const o=y[e].stream,r=y[e].buy,i=y[e].rent,s=["Stream at:","Purchase at:","Rent at:"];let c=0;[o,r,i].forEach((e=>{const t=w("div","service-container"),n=w("div","service-name"),o=w("h2","service-name-bold"),r=w("div","provider-service-container");e.forEach((e=>{const t=w("div","provider-service"),n=w("img","provider-img"),a=w("span","provider-name");e.provider_logo_path&&(n.src=`https://image.tmdb.org/t/p/original/${e.provider_logo_path}`,n.alt=`${e.provider_name} picture.`,n.setAttribute("loading","lazy"),a.textContent=e.provider_name),[n,a].forEach((e=>{t.appendChild(e)})),r.appendChild(t)})),e.length&&(o.textContent=`${s[c]}`,n.appendChild(o)),c++,t.appendChild(n),t.appendChild(r),a.appendChild(t)}))}},drawReviews:()=>{if(!_)return;const e=w("div","review-container"),t=w("h2","review-title");return t.textContent="Reviews:",e.appendChild(t),_.forEach((t=>((e,t)=>{function n(t,n,a,o){const r=w(a,o);t&&(r.textContent=t),t===e.rating&&(r.textContent=e.rating?`${t}/10`:"Rating not provided.."),n.appendChild(r)}t.appendChild((()=>{const t=w("div","review-heading");if(e.pic_path){const n=w("img","author-pic");"http"!==e.pic_path.slice(1,5)?n.src=`https://image.tmdb.org/t/p/w300/${e.pic_path}`:n.src=e.pic_path.slice(1),n.alt=`${e.author} profile picture.`,t.appendChild(n)}return n(e.author,t,"h3","review-author"),n(e.rating,t,"span","review-rating"),t})()),t.appendChild((()=>{const t=w("p","review-content");return t.textContent=`"${e.content}"`,t})()),t.appendChild((()=>{const t=w("div","review-footer"),n=w("a","review-link"),a=w("span","review-updated");var o;return n.setAttribute("href",`${e.url}`),n.setAttribute("target","_blank"),n.textContent="Click for review link",a.textContent=`Last updated: ${o=e.last_updated,(o=o.split("-"))[2]=o[2].slice(0,2)+"/",o[2].concat(o.slice(0,2).reverse().join("/"))}`,t.appendChild(n),t.appendChild(a),t})())})(t,e))),e},drawTrailer:()=>{const e=w("div","trailer-container"),t=w("div","trailer-heading");if(v){(function(){const e=w("h2","trailer-name"),t=w("h3","trailer-lang");return e.textContent=`${v.tName}`,t.textContent=`Language: ${v.lang}`,[e,t]})().forEach((e=>t.appendChild(e))),e.appendChild(t);const n=w("div","video-wrapper");n.appendChild(function(e,t){const n=w("iframe","trailer-video"),a={loading:"lazy",width:"560",height:"315",src:`https://youtube.com/embed/${e}`,title:`${t} video player`,frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted media; gyroscope; picture-in-picture; web-share"};for(let e in a)n.setAttribute(e,a[e]),n.setAttribute("allowfullscreen",!0);return n}(v.key,v.site)),e.appendChild(n)}return e},drawRecs:()=>{const e=w("div","recs-container");if(0===Object.keys(h).length){const t=w("h4","no-review-msg");return t.textContent="No recommendations found.",e.appendChild(t),e.style="display: flex; justify-content: center;",e}for(let t in h)e.appendChild($(h[t]));return e}}};async function f(e){const n=await async function(e){const n=function(e){return e.split(" ").join("+")}(e);try{const a=await fetch(`https://api.themoviedb.org/3/search/multi?api_key=${t}\n\t\t\t&language=en-US&query=${n}&page=1`,{mode:"cors"}),o=await a.json();let r=o.results.reduce(((e,t)=>(e[t.id]=t.media_type,e)),{});return o.results.sort(((e,t)=>t.popularity-e.popularity)).length?r:void alert(`No results found for "${e}".\nPlease check your spelling.`)}catch(e){throw e}}(e),a=document.querySelector(".main-container");document.querySelector(".loader").style.visibility="visible";let o=[];for(let e in n)o.push([e,n[e]]);const r=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&e.target.classList.add("show")}))}));o.forEach((async e=>{await async function(e,t){const n=await h(e,t),o=document.createElement("div");o.classList.add("intro-sub-info"),o.appendChild(n.drawIntro("300")),o.appendChild(n.drawSubInfos());const r=document.createElement("div");r.classList.add("synopsis-watch-providers"),r.appendChild(n.drawSummaryHeading()),r.appendChild(n.drawSummary()),r.appendChild(n.drawProviders());const i=document.createElement("h2");i.classList.add("rec-heading"),i.textContent="RECOMMENDATIONS:",n.addToSection(o),n.addToSection(r),n.addToSection(n.drawReviews()),n.addToSection(n.drawTrailer()),n.addToSection(i),n.addToSection(n.drawRecs()),a.appendChild(n.section)}(e[0],e[1]).then((()=>{document.querySelector(".loader").style.visibility="hidden"})),document.getElementById("check-animation").checked&&[...document.getElementsByTagName("div")].forEach((e=>{e.classList.add("hidden"),r.observe(e)}))})),document.getElementById("input-search").value=e.split("+").join(" ")}function g(){const e=document.querySelector(".main-container");document.querySelector(".loader"),[...e.getElementsByTagName("section")].forEach((e=>e.remove()))}(async function(){document.querySelector(".search-query").addEventListener("click",(async e=>{e.preventDefault();const t=document.getElementById("input-search").value.split(" ").join("+");t?(document.getElementById("title-page")&&document.getElementById("title-page").remove(),document.querySelector(".intro-container2")&&document.querySelector(".intro-container2").remove(),g(),await f(t)):alert("Please enter a valid movie/tv show")}))})(),function(){const t=document.getElementById("check-animation");t.addEventListener("click",(()=>{const n=document.querySelectorAll("div");t.checked?n.forEach((t=>{t.classList.add("hidden"),e.observe(t)})):n.forEach((t=>{t.classList.remove("hidden"),e.disconnect()}))}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,