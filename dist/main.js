(()=>{"use strict";const e="720d2150cf09bfa61e28a5042cd7468f",t="720d2150cf09bfa61e28a5042cd7468f";async function n(e){try{const n=await fetch(`https://api.themoviedb.org/3/movie/${e}?api_key=${t}\n\t\t\t&language=en-US`,{mode:"cors"}),{original_title:a,overview:o,tagline:r,popularity:i,vote_average:s,vote_count:c,genres:d,video:l,runtime:p,poster_path:u,backdrop_path:m,release_date:h}=await n.json();return{mName:a,summary:o,tagline:r,popularity:i,vote_average:s,vote_count:c,genres:d.map((e=>e.name)),video:l,runtime:p,poster_path:u,backdrop_path:m,release_date:h}}catch(e){console.error(`Failed to fetch movie details ${e.message}`)}}async function a(e){try{const n=await fetch(`https://api.themoviedb.org/3/movie/${e}/recommendations\n\t\t\t?api_key=${t}&language=en-US&page=1`,{mode:"cors"});if(!n.ok)throw new Error("Failed to fetch movie recommendations from API.");return(await n.json()).results.slice(0,5).map((e=>({mName:e.original_title,id:e.id,poster_path:e.poster_path,backdrop_path:e.backdrop_path,release_date:e.release_date,vote_count:e.vote_count,vote_average:e.vote_average})))}catch(e){console.error(`Failed to fetch movie recommendations: ${e.message}`)}}async function o(e){const n={};try{const o=await fetch(`https://api.themoviedb.org/3/movie/${e}/watch/providers\n\t\t\t?api_key=${t}`,{mode:"cors"}),r=await o.json();for(const e in r.results){const t=(a=e,new Intl.DisplayNames(["en"],{type:"region"}).of(a));n[t]={stream:[],rent:[],buy:[],countryCode:e};const o=(e,t)=>{e&&e.forEach((e=>{const n={provider_name:e.provider_name,provider_logo_path:e.logo_path};t.push(n)}))};o(r.results[e].flatrate,n[t].stream),o(r.results[e].rent,n[t].rent),o(r.results[e].buy,n[t].buy)}return n}catch(e){console.erroror(`Failed to fetch movie providers: ${e.message}`)}var a}async function r(e){try{const a=await fetch(`https://api.themoviedb.org/3/movie/${e}/videos?api_key=\n\t\t\t${t}&mode=cors`);if(!a.ok)throw new Error("Failed to fetch movie trailers from API.");const o=(await a.json()).results.filter((e=>"Trailer"===e.type));if(0===o.length)return;const r=o.find((e=>!0===e.official))||o[0];return{tName:r.name,key:r.key,site:r.site,type:r.type,lang:(n=r.iso_639_1,new Intl.DisplayNames(["en"],{type:"language"}).of(n))}}catch(e){console.error(`Failed to fetch movie trailers: ${e.message}`)}var n}async function i(e){try{let n=[];const a=await fetch(`https://api.themoviedb.org/3/movie/${e}/reviews?api_key=\n\t\t\t${t}&language=en-US&page=1`,{mode:"cors"}),o=await a.json();return 0!==o.results.length&&(o.results.forEach((e=>{n.push({author:e.author,rating:e.author_details?.rating,pic_path:e.author_details?.avatar_path,content:e.content,url:e.url,last_updated:e.updated_at})})),n.slice(0,5))}catch(e){console.error(`Fail to fetch movie reviews: ${e.message}`)}}const s="720d2150cf09bfa61e28a5042cd7468f";async function c(e){try{const t=await fetch(`https://api.themoviedb.org/3/tv/${e}?api_key=${s}\n\t\t\t&language=en-US`,{mode:"cors"});if(!t.ok)throw new Error("Failed to fetch TV details from API.");const n=await t.json(),a=n.genres.reduce(((e,t)=>[...e,t.name]),[]);return{tName:n.original_name,tagline:n.tagline,language:n.original_language,summary:n.overview,episode_run_time:n.episode_run_time[0],origin_country:n.origin_country,vote_average:n.vote_average,vote_count:n.vote_count,status:n.status,seasons:n.seasons,number_of_seasons:n.number_of_seasons,first_air_date:n.first_air_date,last_air_date:n.last_air_date,backdrop_path:n.backdrop_path,poster_path:n.poster_path,popularity:n.popularity,genres:a}}catch(e){console.error(`Failed to fetch relevant information for TV SHOW: ${e.message}`)}}async function d(e){try{const t=await fetch(`https://api.themoviedb.org/3/tv/${e}/recommendations?api_key=${s}&language=en-US&page=1`,{mode:"cors"});if(!t.ok)throw new Error("Failed to fetch TV recommendations from API.");const n=(await t.json()).results?.slice(0,5).reduce(((e,t)=>(e[t.original_name]={tName:t.original_name,id:t.id,first_air_date:t.first_air_date,poster_path:t.poster_path,backdrop_path:t.backdrop_path,vote_average:t.vote_average,vote_count:t.vote_count},e)),{});return n||{}}catch(e){console.error(`Failed to fetch TV recommendations: ${e.message}`)}}async function l(e){const t={};try{const a=await fetch(`https://api.themoviedb.org/3/tv/${e}/watch/providers?api_key=${s}`,{mode:"cors"});if(!a.ok)throw new Error("Failed to fetch TV show providers from API.");const o=await a.json();for(const e in o.results){const a=(n=e,new Intl.DisplayNames(["en"],{type:"region"}).of(n));t[a]={stream:[],rent:[],buy:[],countryCode:e};const r=(e,t)=>{e&&e.forEach((e=>{const n={provider_name:e.provider_name,provider_logo_path:e.logo_path};t.push(n)}))};r(o.results[e].flatrate,t[a].stream),r(o.results[e].rent,t[a].rent),r(o.results[e].buy,t[a].buy)}return t}catch(e){console.error(`Failed to fetch TV providers: ${e.message}`)}var n}async function p(e){try{const n=await fetch(`https://api.themoviedb.org/3/tv/${e}/videos?api_key=${s}`,{mode:"cors"});if(!n.ok)throw new Error("Failed to fetch TV trailer from API.");const a=(await n.json()).results.filter((e=>"Trailer"===e.type));if(0===a.length)return;const o=a.find((e=>!0===e.official))||a[0];return{tName:o.name,key:o.key,site:o.site,type:o.type,lang:(t=o.iso_639_1,new Intl.DisplayNames(["en"],{type:"language"}).of(t))}}catch(e){console.error(`Failed to fetch TV trailer: ${e.message}`)}var t}async function u(e){try{const t=await fetch(`https://api.themoviedb.org/3/tv/${e}/reviews?api_key=\n\t\t\t${s}&language=en-US&page=1`,{mode:"cors"});if(!t.ok)throw new Error("Failed to fetch TV reviews from API.");const n=await t.json();return 0!==n.results.length&&n.results.map((e=>({author:e.author,rating:e.author_details?.rating,pic_path:e.author_details?.avatar_path,content:e.content,url:e.url,last_updated:e.updated_at}))).slice(0,5)}catch(e){console.error(`Failed to fetch TV reviews: ${e.message}`)}}const m=async(e,t)=>{const s=document.createElement("section"),m=await b(e,n,c),g=await b(e,a,d),y=await b(e,o,l),v=await b(e,r,p),_=await b(e,i,u);function w(e){e&&s.appendChild(e)}function C(e,t){const n=document.createElement(e);return n.classList.add(t),n}async function b(e,n,a){return"movie"===t?await n(e):await a(e)}s.classList.add("section-container");const E=e=>{const t=document.createElement("div");t.classList.add("intro"),t.appendChild(function(){const e=C("h1","title");return e.textContent=m.mName?m.mName:m.tName,e}()),t.appendChild(function(){const e=C("em","tagline");return e.textContent=`"${m.tagline}"`,e}());const n=function(e=""){const t=document.createElement("img"),n="https://image.tmdb.org/t/p",a=m.poster_path||m.backdrop_path;return a?(t.classList.add("poster"),t.src=e?`${n}/w${e}/${a}`:`${n}/original/${a}`,t.alt="Movie picture poster",t.setAttribute("loading","lazy"),t):null}(e);return n&&t.appendChild(n),t},$=e=>{const t=C("div","rec-container"),n=C("img","rec-poster"),a=C("div","rec-info");n.src=`https://image.tmdb.org/t/p/w300/${e.poster_path}`,t.appendChild(n),function(e){if(e){const t=C("p","rec-name"),n=C("p","rec-date"),a=C("p","rec-vote-count"),o=C("p","rec-vote-avg");return t.textContent=e.tName?`Name: ${e.tName}`:`Name: ${e.mName}`,n.textContent=e.first_air_date?`First Air Date: ${e.first_air_date}`:`Release Date: ${e.release_date}`,a.textContent=`Vote Count: ${e.vote_count}`,o.textContent=`Vote Avg: ${e.vote_average}`,[t,n,a,o]}}(e).forEach((e=>a.appendChild(e)));const o=C("a","rec-link"),r=e.tName?"TV Show":"Movie";return o.textContent=`Search for this ${r} -> `,o.addEventListener("click",(async t=>{t.preventDefault(),f(),e.tName?await h(e.tName):await h(e.mName)})),a.appendChild(o),t.appendChild(a),t};return{section:s,addToSection:w,drawAll:function(){w(E())},drawIntro:E,drawSubInfos:()=>{const e=C("div","subinfo-container");let t,n;m.release_date?(t=o("Release Date:",m.release_date.split("-").reverse().join("/")),n=""):m.first_air_date?(t=o("First Aired: ",m.first_air_date.split("-").reverse().join("/")),n=o("Last Aired: ",m.last_air_date.split("-").reverse().join("/"))):t="";let a=m.runtime?function(e){const t=e/60,n=Math.floor(t),a=60*(t-n);return`${n}h ${Math.round(a)}min`}(m.runtime):"";function o(e,t){if(!t)return null;const n=C("div","sub-info"),a=C("span","category-name"),o=C("span","category-info");return a.textContent=e,o.textContent=t,[a,o].forEach((e=>n.appendChild(e))),n}return[t,n,o("Show status:",m.status),o("Runtime: ",a),o("Genres: ",m.genres.join(", ")),o("Number of seasons: ",m.number_of_seasons),o("Est Avg Episode Runtime: ",m.episode_run_time),o("Country of Origin: ",m.origin_country),o("Vote Average: ",m.vote_average),o("Vote Count: ",m.vote_count),o("Popularity: ",m.popularity)].forEach((t=>t?e.appendChild(t):"")),e},drawSummaryHeading:()=>{const e=document.createElement("h2");return e.textContent="Synopsis: ",e},drawSummary:()=>{const e=C("p","summary");return e.textContent=m.summary,e},drawProviders:()=>{let e;const t=C("div","provider-container"),n=C("button","country-btn"),a=C("div","house-provider-container");if([n,a].forEach((e=>{t.appendChild(e)})),Object.keys(y).length)if(e=!0,Object.keys(y).includes("Australia")){const e=C("img","country-flag");e.src="https://flagsapi.com/AU/shiny/64.png",e.alt="Australia flag",e.classList.add("btn-country-flag"),r("Australia"),n.textContent="Australia",n.appendChild(e)}else{const e=Object.keys(y)[0];try{const t=C("img","country-flag");t.src=`https://flagsapi.com/${y[e].countryCode}/shiny/64.png`,t.alt=`${e} flag`,t.classList.add("btn-country-flag"),n.appendChild(t)}catch(e){console.log(e)}r(e),n.textContent=`${e}`}else{e=!1,n.textContent="No countries offer this tv/movie at the moment.",n.classList.add("lost-providers");const t=C("img","lost-gif");t.src="./img/lost-gif.gif",t.alt="Prover cannot be found picture.",a.style.display="flex",a.style.justifyContent="center",a.appendChild(t)}const o=C("i","fas");return o.classList.add("fa-angle-down"),n.appendChild(o),n.addEventListener("click",(t=>{t.preventDefault(),e&&(function(e){const t=Object.keys(y);let n,a={};t.forEach((t=>{a[t]=y[t].countryCode,e===t&&(n=y[t].countryCode)}));const o=C("form","modal-country-container"),r=C("div","modal-header"),i=C("div","modal-body"),s=C("div","modal-current-country"),c=C("input","modal-input-search"),d=C("ul","modal-list-countries"),l=C("button","modal-close-btn");function p(e,t){const n=C("img","country-flag");return n.src=`https://flagsapi.com/${y[t].countryCode}/shiny/64.png`,n.alt=`${t} flag`,n}function u(){let e,t,n,a,o,r,i;for(e=document.getElementById("modal-input-search"),t=e.value.toUpperCase(),n=document.getElementById("countries-list"),a=n.getElementsByTagName("li"),r=0;r<a.length;r++)o=a[r].getElementsByTagName("a")[0],i=o.textContent||o.innerText,i.toUpperCase().indexOf(t)>-1?a[r].style.display="":a[r].style.display="none"}(()=>{const t=document.createElement("h2");t.textContent="Countries";const n=document.createElement("h3"),a=document.createElement("label"),o={id:"modal-input-search",type:"search",placeholder:"🔍 Search for countries...",title:"Type in a country name",role:"search"};for(let e in o)c.setAttribute(e,o[e]);c.addEventListener("keyup",u),c.addEventListener("submit",(e=>{e.preventDefault()}));const i=p(0,e);n.textContent=e,s.appendChild(i),s.appendChild(n),a.htmlFor=`${c.id}`,[t,s,a,c].forEach((e=>{r.appendChild(e)}))})(),(()=>{d.id="countries-list";for(let e in a){a[e];const t=C("li","country-container"),n=p(0,e),o=C("a","country-name");o.textContent=e,o.setAttribute("href","#"),[n,o].forEach((e=>{t.appendChild(e)})),d.appendChild(t)}[d].forEach((e=>{i.appendChild(e)}))})(),(e=>{const t=C("i","fa");t.classList.add("fa-close"),l.appendChild(t),e()})((()=>{l.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector(".modal-country-container");document.querySelector(".face-mask").style.display="none",setTimeout((function(){t.style.transform="translateY(-125%)"}),100),setTimeout((function(){t.style.opacity=0,t.style.visibility="hidden",t.remove()}),750)}))})),[r,i,l].forEach((e=>o.appendChild(e))),setTimeout((function(){o.style.visibility="visible",o.style.opacity=1,o.style.transform="translateY(0%)"}),100),document.querySelector("body").append(o),document.querySelector(".face-mask").style.display="block"}(n.textContent),function(e){let t,n,a,o,r;for(t=document.getElementById("countries-list"),n=t.getElementsByTagName("li"),a=0;a<n.length;a++)if(o=n[a].getElementsByTagName("a")[0],r=o.textContent||o.innerText,r===e){n[a].style.backgroundColor="rgba(25, 150, 150, 0.5)",n[a].style.transform="scale(1.025)";const e=C("i","fa");e.classList.add("fa-check"),n[a].append(e)}}(n.textContent),document.querySelectorAll(".country-container").forEach((e=>e.addEventListener("click",(t=>{if(t.preventDefault(),e.lastChild.textContent){const t=e.lastChild.textContent;a.innerHTML="",r(t)}document.querySelector(".modal-country-container").remove(),document.querySelector(".face-mask").style.display="none"})))))})),t;function r(e="Australia"){n.textContent=e;try{const t=C("img","country-flag");t.src=`https://flagsapi.com/${y[e].countryCode}/shiny/64.png`,t.alt=`${e} flag`,t.classList.add("btn-country-flag"),n.appendChild(t)}catch(e){console.log(e)}const t=C("i","fas");t.classList.add("fa-angle-down"),n.appendChild(t);const o=y[e].stream,r=y[e].buy,i=y[e].rent,s=["Stream at:","Purchase at:","Rent at:"];let c=0;[o,r,i].forEach((e=>{const t=C("div","service-container"),n=C("div","service-name"),o=C("h2","service-name-bold"),r=C("div","provider-service-container");e.forEach((e=>{const t=C("div","provider-service"),n=C("img","provider-img"),a=C("span","provider-name");e.provider_logo_path&&(n.src=`https://image.tmdb.org/t/p/original/${e.provider_logo_path}`,n.alt=`${e.provider_name} picture.`,n.setAttribute("loading","lazy"),a.textContent=e.provider_name),[n,a].forEach((e=>{t.appendChild(e)})),r.appendChild(t)})),e.length&&(o.textContent=`${s[c]}`,n.appendChild(o)),c++,t.appendChild(n),t.appendChild(r),a.appendChild(t)}))}},drawReviews:()=>{if(!_)return;const e=C("div","review-container"),t=C("h2","review-title");return t.textContent="Reviews:",e.appendChild(t),_.forEach((t=>((e,t)=>{function n(t,n,a,o){const r=C(a,o);t&&(r.textContent=t),t===e.rating&&(r.textContent=e.rating?`${t}/10`:"Rating not provided.."),n.appendChild(r)}t.appendChild((()=>{const t=C("div","review-heading");if(e.pic_path){const n=C("img","author-pic");"http"!==e.pic_path.slice(1,5)?n.src=`https://image.tmdb.org/t/p/w300/${e.pic_path}`:n.src=e.pic_path.slice(1),n.alt=`${e.author} profile picture.`,t.appendChild(n)}return n(e.author,t,"h3","review-author"),n(e.rating,t,"span","review-rating"),t})()),t.appendChild((()=>{const t=C("p","review-content");return t.textContent=`"${e.content}"`,t})()),t.appendChild((()=>{const t=C("div","review-footer"),n=C("a","review-link"),a=C("span","review-updated");var o;return n.setAttribute("href",`${e.url}`),n.setAttribute("target","_blank"),n.textContent="Click for review link",a.textContent=`Last updated: ${o=e.last_updated,(o=o.split("-"))[2]=o[2].slice(0,2)+"/",o[2].concat(o.slice(0,2).reverse().join("/"))}`,t.appendChild(n),t.appendChild(a),t})())})(t,e))),e},drawTrailer:()=>{const e=C("div","trailer-container"),t=C("div","trailer-heading");if(v){(function(){const e=C("h2","trailer-name"),t=C("h3","trailer-lang");return e.textContent=`${v.tName}`,t.textContent=`Language: ${v.lang}`,[e,t]})().forEach((e=>t.appendChild(e))),e.appendChild(t);const n=C("div","video-wrapper");n.appendChild(function(e,t){const n=C("iframe","trailer-video"),a={loading:"lazy",width:"560",height:"315",src:`https://youtube.com/embed/${e}`,title:`${t} video player`,frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted media; gyroscope; picture-in-picture; web-share"};for(let e in a)n.setAttribute(e,a[e]),n.setAttribute("allowfullscreen",!0);return n}(v.key,v.site)),e.appendChild(n)}return e},drawRecs:()=>{const e=C("div","recs-container");if(0===Object.keys(g).length){const t=C("h4","no-review-msg");return t.textContent="No recommendations found.",e.appendChild(t),e.style="display: flex; justify-content: center;",e}for(let t in g)e.appendChild($(g[t]));return e}}};async function h(t){const n=await async function(t){const n=function(e){return e.split(" ").join("+")}(t);try{const a=await fetch(`https://api.themoviedb.org/3/search/multi?api_key=${e}\n\t\t\t&language=en-US&query=${n}&page=1`,{mode:"cors"}),o=await a.json();let r=o.results.reduce(((e,t)=>(e[t.id]=t.media_type,e)),{});return o.results.sort(((e,t)=>t.popularity-e.popularity)).length?r:void alert(`No results found for "${t}".\nPlease check your spelling.`)}catch(e){throw e}}(t),a=document.querySelector(".main-container");document.querySelector(".loader").style.visibility="visible";let o=[];for(let e in n)o.push([e,n[e]]);const r=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&e.target.classList.add("show")}))}));o.forEach((async e=>{await async function(e,t){const n=await m(e,t),o=document.createElement("div");o.classList.add("intro-sub-info"),o.appendChild(n.drawIntro("300")),o.appendChild(n.drawSubInfos());const r=document.createElement("div");r.classList.add("synopsis-watch-providers"),r.appendChild(n.drawSummaryHeading()),r.appendChild(n.drawSummary()),r.appendChild(n.drawProviders());const i=document.createElement("h2");i.classList.add("rec-heading"),i.textContent="RECOMMENDATIONS:",n.addToSection(o),n.addToSection(r),n.addToSection(n.drawReviews()),n.addToSection(n.drawTrailer()),n.addToSection(i),n.addToSection(n.drawRecs()),a.appendChild(n.section)}(e[0],e[1]).then((()=>{document.querySelector(".loader").style.visibility="hidden"})),document.getElementById("check-animation").checked&&[...document.getElementsByTagName("div")].forEach((e=>{e.classList.add("hidden"),r.observe(e)}))})),document.getElementById("input-search").value=t.split("+").join(" ")}function f(){const e=document.querySelector(".main-container");document.querySelector(".loader"),[...e.getElementsByTagName("section")].forEach((e=>e.remove()))}const g=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&e.target.classList.add("show")}))}));(async function(){document.querySelector(".search-query").addEventListener("click",(async e=>{e.preventDefault();const t=document.getElementById("input-search").value.split(" ").join("+");t?(document.getElementById("title-page")&&document.getElementById("title-page").remove(),document.querySelector(".intro-container2")&&document.querySelector(".intro-container2").remove(),f(),await h(t)):alert("Please enter a valid movie/tv show")}))})(),function(){const e=document.getElementById("check-animation");e.addEventListener("click",(()=>{const t=document.querySelectorAll("div");e.checked?t.forEach((e=>{e.classList.add("hidden"),g.observe(e)})):t.forEach((e=>{e.classList.remove("hidden"),g.disconnect()}))}))}(),h("Game Of Thrones")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,